Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 55 conflicts: 1 shift/reduce
State 303 conflicts: 1 shift/reduce
State 492 conflicts: 2 shift/reduce
State 589 conflicts: 1 shift/reduce
State 842 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program top_level_reader_macro
   14        | program ';'

   15 top_level_reader_macro: expr_reader ';'

   16 optional_public_or_private_module: %empty
   17                                  | "public"
   18                                  | "private"

   19 module_name: '$'
   20            | "name"

   21 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   22 character_sequence: STRING_CHARACTER
   23                   | STRING_CHARACTER_ESC
   24                   | character_sequence STRING_CHARACTER
   25                   | character_sequence STRING_CHARACTER_ESC

   26 string_constant: "start of the string" character_sequence "end of the string"

   27 string_builder_body: %empty
   28                    | string_builder_body character_sequence
   29                    | string_builder_body "{" expr "}"

   30 string_builder: "start of the string" string_builder_body "end of the string"

   31 reader_character_sequence: STRING_CHARACTER
   32                          | reader_character_sequence STRING_CHARACTER

   33 $@1: %empty

   34 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   35 options_declaration: "options" annotation_argument_list

   36 require_declaration: "require" require_module

   37 keyword_or_name: "name"
   38                | "keyword"

   39 require_module_name: keyword_or_name
   40                    | '%' require_module_name
   41                    | require_module_name '.' keyword_or_name
   42                    | require_module_name '/' keyword_or_name

   43 require_module: require_module_name is_public_module
   44               | require_module_name "as" "name" is_public_module

   45 is_public_module: %empty
   46                 | "public"

   47 expect_declaration: "expect" expect_list

   48 expect_list: expect_error
   49            | expect_list ',' expect_error

   50 expect_error: "integer constant"
   51             | "integer constant" ':' "integer constant"

   52 expression_label: "label" "integer constant" ':'

   53 expression_goto: "goto" "label" "integer constant"
   54                | "goto" expr

   55 elif_or_static_elif: "elif"
   56                    | "static_elif"

   57 expression_else: %empty
   58                | "else" expression_block
   59                | elif_or_static_elif expr expression_block expression_else

   60 if_or_static_if: "if"
   61                | "static_if"

   62 expression_else_one_liner: %empty

   63 $@2: %empty

   64 expression_else_one_liner: "else" $@2 expression_if_one_liner

   65 expression_if_one_liner: expr
   66                        | expression_return_no_pipe
   67                        | expression_yield_no_pipe
   68                        | expression_break
   69                        | expression_continue

   70 expression_if_then_else: if_or_static_if expr expression_block expression_else

   71 $@3: %empty

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   74 expression_unsafe: "unsafe" expression_block

   75 expression_while_loop: "while" expr expression_block

   76 expression_with: "with" expr expression_block

   77 $@4: %empty

   78 expression_with_alias: "assume" "name" '=' $@4 expr

   79 annotation_argument_value: string_constant
   80                          | "name"
   81                          | "integer constant"
   82                          | "floating point constant"
   83                          | "true"
   84                          | "false"

   85 annotation_argument_value_list: annotation_argument_value
   86                               | annotation_argument_value_list ',' annotation_argument_value

   87 annotation_argument_name: "name"
   88                         | "type"
   89                         | "in"

   90 annotation_argument: annotation_argument_name '=' string_constant
   91                    | annotation_argument_name '=' "name"
   92                    | annotation_argument_name '=' "integer constant"
   93                    | annotation_argument_name '=' "floating point constant"
   94                    | annotation_argument_name '=' "true"
   95                    | annotation_argument_name '=' "false"
   96                    | annotation_argument_name
   97                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   98 annotation_argument_list: annotation_argument
   99                         | annotation_argument_list ',' annotation_argument

  100 annotation_declaration_name: name_in_namespace
  101                            | "require"
  102                            | "private"

  103 annotation_declaration_basic: annotation_declaration_name
  104                             | annotation_declaration_name '(' annotation_argument_list ')'

  105 annotation_declaration: annotation_declaration_basic
  106                       | '!' annotation_declaration
  107                       | annotation_declaration "&&" annotation_declaration
  108                       | annotation_declaration "||" annotation_declaration
  109                       | annotation_declaration "^^" annotation_declaration
  110                       | '(' annotation_declaration ')'
  111                       | "|>" annotation_declaration

  112 annotation_list: annotation_declaration
  113                | annotation_list ',' annotation_declaration

  114 optional_annotation_list: %empty
  115                         | '[' annotation_list ']'

  116 optional_function_argument_list: %empty
  117                                | '(' ')'
  118                                | '(' function_argument_list ')'

  119 optional_function_type: %empty
  120                       | ':' type_declaration

  121 function_name: "name"
  122              | "operator" '!'
  123              | "operator" '~'
  124              | "operator" "+="
  125              | "operator" "-="
  126              | "operator" "*="
  127              | "operator" "/="
  128              | "operator" "%="
  129              | "operator" "&="
  130              | "operator" "|="
  131              | "operator" "^="
  132              | "operator" "&&="
  133              | "operator" "||="
  134              | "operator" "^^="
  135              | "operator" "&&"
  136              | "operator" "||"
  137              | "operator" "^^"
  138              | "operator" '+'
  139              | "operator" '-'
  140              | "operator" '*'
  141              | "operator" '/'
  142              | "operator" '%'
  143              | "operator" '<'
  144              | "operator" '>'
  145              | "operator" ".."
  146              | "operator" "=="
  147              | "operator" "!="
  148              | "operator" "<="
  149              | "operator" ">="
  150              | "operator" '&'
  151              | "operator" '|'
  152              | "operator" '^'
  153              | "++" "operator"
  154              | "--" "operator"
  155              | "operator" "++"
  156              | "operator" "--"
  157              | "operator" "<<"
  158              | "operator" ">>"
  159              | "operator" "<<="
  160              | "operator" ">>="
  161              | "operator" "<<<"
  162              | "operator" ">>>"
  163              | "operator" "<<<="
  164              | "operator" ">>>="
  165              | "operator" '[' ']'
  166              | "operator" "?[" ']'
  167              | "operator" '.'
  168              | "operator" "?."
  169              | "operator" '.' "name"
  170              | "operator" '.' "name" ":="
  171              | "operator" "?." "name"
  172              | "operator" ":="
  173              | "operator" "delete"
  174              | "operator" "??"
  175              | "operator" "is"
  176              | "operator" "as"
  177              | "operator" "is" "name"
  178              | "operator" "as" "name"
  179              | "operator" '?' "as"
  180              | "operator" '?' "as" "name"
  181              | "bool"
  182              | "string"
  183              | "int"
  184              | "int2"
  185              | "int3"
  186              | "int4"
  187              | "uint"
  188              | "uint2"
  189              | "uint3"
  190              | "uint4"
  191              | "float"
  192              | "float2"
  193              | "float3"
  194              | "float4"
  195              | "range"
  196              | "urange"
  197              | "range64"
  198              | "urange64"
  199              | "int64"
  200              | "uint64"
  201              | "double"
  202              | "int8"
  203              | "uint8"
  204              | "int16"
  205              | "uint16"

  206 global_function_declaration: optional_annotation_list "def" function_declaration

  207 optional_public_or_private_function: %empty
  208                                    | "private"
  209                                    | "public"

  210 function_declaration_header: function_name optional_function_argument_list optional_function_type

  211 $@5: %empty

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  213 expression_block: '{' expressions '}'
  214                 | '{' expressions '}' "finally" '{' expressions '}'

  215 expression_any: ';'
  216               | expr_pipe
  217               | expr_keyword
  218               | expr_assign_pipe
  219               | expr_assign ';'
  220               | expression_delete ';'
  221               | expression_let
  222               | expression_while_loop
  223               | expression_unsafe
  224               | expression_with
  225               | expression_with_alias
  226               | expression_for_loop
  227               | expression_break ';'
  228               | expression_continue ';'
  229               | expression_return
  230               | expression_yield
  231               | expression_if_then_else
  232               | expression_try_catch
  233               | expression_label ';'
  234               | expression_goto ';'
  235               | "pass" ';'

  236 expressions: %empty
  237            | expressions expression_any
  238            | expressions error

  239 expr_keyword: "keyword" expr expression_block

  240 $@6: %empty

  241 $@7: %empty

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr

  243 expr_pipe: expr_assign " <|" expr_block
  244          | "@ <|" expr_block
  245          | "@@ <|" expr_block
  246          | "$ <|" expr_block

  247 name_in_namespace: "name"
  248                  | "name" "::" "name"
  249                  | "::" "name"

  250 expression_delete: "delete" expr
  251                  | "delete" "explicit" expr

  252 $@8: %empty

  253 $@9: %empty

  254 new_type_declaration: '<' $@8 type_declaration '>' $@9
  255                     | structure_type_declaration

  256 expr_new: "new" new_type_declaration
  257         | "new" new_type_declaration '(' ')'
  258         | "new" new_type_declaration '(' expr_list ')'
  259         | "new" make_decl

  260 expression_break: "break"

  261 expression_continue: "continue"

  262 expression_return_no_pipe: "return"
  263                          | "return" expr_list
  264                          | "return" "<-" expr_list

  265 expression_return: expression_return_no_pipe ';'
  266                  | "return" expr_pipe
  267                  | "return" "<-" expr_pipe

  268 expression_yield_no_pipe: "yield" expr
  269                         | "yield" "<-" expr

  270 expression_yield: expression_yield_no_pipe ';'
  271                 | "yield" expr_pipe
  272                 | "yield" "<-" expr_pipe

  273 expression_try_catch: "try" expression_block "recover" expression_block

  274 kwd_let: "let"
  275        | "var"

  276 optional_in_scope: "inscope"
  277                  | %empty

  278 tuple_expansion: "name"
  279                | tuple_expansion ',' "name"

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  282 expression_let: kwd_let optional_in_scope let_variable_declaration
  283               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  284 $@10: %empty

  285 $@11: %empty

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr

  287 $@12: %empty

  288 $@13: %empty

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr

  290 $@14: %empty

  291 $@15: %empty

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr

  293 $@16: %empty

  294 $@17: %empty

  295 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17

  296 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  297               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  298               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  299 expr_list: expr
  300          | expr_list ',' expr

  301 block_or_simple_block: expression_block
  302                      | "=>" expr
  303                      | "=>" "<-" expr

  304 block_or_lambda: '$'
  305                | '@'
  306                | '@' '@'

  307 capture_entry: '&' "name"
  308              | '=' "name"
  309              | "<-" "name"
  310              | ":=" "name"

  311 capture_list: capture_entry
  312             | capture_list ',' capture_entry

  313 optional_capture_list: %empty
  314                      | "[[" capture_list ']' ']'

  315 expr_block: expression_block
  316           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  317 expr_numeric_const: "integer constant"
  318                   | "unsigned integer constant"
  319                   | "long integer constant"
  320                   | "unsigned long integer constant"
  321                   | "unsigned int8 constant"
  322                   | "floating point constant"
  323                   | "double constant"

  324 expr_assign: expr
  325            | expr '=' expr
  326            | expr "<-" expr
  327            | expr ":=" expr
  328            | expr "&=" expr
  329            | expr "|=" expr
  330            | expr "^=" expr
  331            | expr "&&=" expr
  332            | expr "||=" expr
  333            | expr "^^=" expr
  334            | expr "+=" expr
  335            | expr "-=" expr
  336            | expr "*=" expr
  337            | expr "/=" expr
  338            | expr "%=" expr
  339            | expr "<<=" expr
  340            | expr ">>=" expr
  341            | expr "<<<=" expr
  342            | expr ">>>=" expr

  343 expr_assign_pipe: expr '=' "@ <|" expr_block
  344                 | expr '=' "@@ <|" expr_block
  345                 | expr '=' "$ <|" expr_block
  346                 | expr "<-" "@ <|" expr_block
  347                 | expr "<-" "@@ <|" expr_block
  348                 | expr "<-" "$ <|" expr_block

  349 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  350                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  351 expr_method_call: expr "->" "name" '(' ')'
  352                 | expr "->" "name" '(' expr_list ')'

  353 func_addr_name: name_in_namespace
  354               | "$i" '(' expr ')'

  355 func_addr_expr: '@' '@' func_addr_name

  356 $@18: %empty

  357 $@19: %empty

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name

  359 $@20: %empty

  360 $@21: %empty

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

  362 expr_field: expr '.' "name"
  363           | expr '.' '.' "name"

  364 $@22: %empty

  365 $@23: %empty

  366 expr_field: expr '.' $@22 error $@23

  367 expr: "null"
  368     | name_in_namespace
  369     | expr_numeric_const
  370     | expr_reader
  371     | string_builder
  372     | make_decl
  373     | "true"
  374     | "false"
  375     | expr_field
  376     | expr_mtag
  377     | '!' expr
  378     | '~' expr
  379     | '+' expr
  380     | '-' expr
  381     | expr "<<" expr
  382     | expr ">>" expr
  383     | expr "<<<" expr
  384     | expr ">>>" expr
  385     | expr '+' expr
  386     | expr '-' expr
  387     | expr '*' expr
  388     | expr '/' expr
  389     | expr '%' expr
  390     | expr '<' expr
  391     | expr '>' expr
  392     | expr "==" expr
  393     | expr "!=" expr
  394     | expr "<=" expr
  395     | expr ">=" expr
  396     | expr '&' expr
  397     | expr '|' expr
  398     | expr '^' expr
  399     | expr "&&" expr
  400     | expr "||" expr
  401     | expr "^^" expr
  402     | expr ".." expr
  403     | "++" expr
  404     | "--" expr
  405     | expr "++"
  406     | expr "--"
  407     | '(' expr ')'
  408     | expr '[' expr ']'
  409     | expr '.' '[' expr ']'
  410     | expr "?[" expr ']'
  411     | expr '.' "?[" expr ']'
  412     | expr "?." "name"
  413     | expr '.' "?." "name"
  414     | func_addr_expr
  415     | name_in_namespace '(' ')'
  416     | name_in_namespace '(' expr_list ')'
  417     | basic_type_declaration '(' ')'
  418     | basic_type_declaration '(' expr_list ')'
  419     | '*' expr
  420     | "deref" '(' expr ')'
  421     | "addr" '(' expr ')'
  422     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  424     | expr "??" expr
  425     | expr '?' expr ':' expr

  426 $@24: %empty

  427 $@25: %empty

  428 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr "is" basic_type_declaration
  430     | expr "is" "name"
  431     | expr "as" "name"

  432 $@26: %empty

  433 $@27: %empty

  434 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr "as" basic_type_declaration
  436     | expr '?' "as" "name"

  437 $@28: %empty

  438 $@29: %empty

  439 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr '?' "as" basic_type_declaration
  441     | expr_type_info
  442     | expr_type_decl
  443     | expr_cast
  444     | expr_new
  445     | expr_method_call
  446     | expr_named_call
  447     | expr_block
  448     | expr "<|" expr
  449     | expr "|>" expr
  450     | expr "|>" basic_type_declaration
  451     | name_in_namespace "name"
  452     | "unsafe" '(' expr ')'
  453     | expression_keyword

  454 expr_mtag: "$$" '(' expr ')'
  455          | "$i" '(' expr ')'
  456          | "$v" '(' expr ')'
  457          | "$b" '(' expr ')'
  458          | "$a" '(' expr ')'
  459          | "..."
  460          | "$c" '(' expr ')' '(' ')'
  461          | "$c" '(' expr ')' '(' expr_list ')'
  462          | expr '.' "$f" '(' expr ')'
  463          | expr "?." "$f" '(' expr ')'
  464          | expr '.' '.' "$f" '(' expr ')'
  465          | expr '.' "?." "$f" '(' expr ')'
  466          | expr "as" "$f" '(' expr ')'
  467          | expr '?' "as" "$f" '(' expr ')'
  468          | expr "is" "$f" '(' expr ')'
  469          | '@' '@' "$c" '(' expr ')'

  470 optional_field_annotation: %empty
  471                          | "[[" annotation_argument_list ']' ']'

  472 optional_override: %empty
  473                  | "override"
  474                  | "sealed"

  475 optional_constant: %empty
  476                  | "const"

  477 optional_public_or_private_member_variable: %empty
  478                                           | "public"
  479                                           | "private"

  480 optional_static_member_variable: %empty
  481                                | "static"

  482 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  483 struct_variable_declaration_list: %empty

  484 $@30: %empty

  485 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';'

  486 $@31: %empty

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'

  488 $@32: %empty

  489 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  490                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  491 function_argument_declaration: optional_field_annotation variable_declaration
  492                              | optional_field_annotation "var" variable_declaration
  493                              | "$a" '(' expr ')'

  494 function_argument_list: function_argument_declaration
  495                       | function_argument_list ';' function_argument_declaration

  496 tuple_type: type_declaration
  497           | "name" ':' type_declaration

  498 tuple_type_list: tuple_type
  499                | tuple_type_list ';' tuple_type

  500 variant_type: "name" ':' type_declaration

  501 variant_type_list: variant_type
  502                  | variant_type_list ';' variant_type

  503 variant_alias_type_list: %empty
  504                        | variant_alias_type_list ';'
  505                        | variant_alias_type_list variant_type ';'

  506 copy_or_move: '='
  507             | "<-"

  508 variable_declaration: variable_name_with_pos_list
  509                     | variable_name_with_pos_list '&'
  510                     | variable_name_with_pos_list ':' type_declaration
  511                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  512                     | variable_name_with_pos_list copy_or_move expr
  513                     | variable_name_with_pos_list copy_or_move expr_pipe

  514 copy_or_move_or_clone: '='
  515                      | "<-"
  516                      | ":="

  517 optional_ref: %empty
  518             | '&'

  519 let_variable_name_with_pos_list: "name"
  520                                | "$i" '(' expr ')'
  521                                | "name" "aka" "name"
  522                                | let_variable_name_with_pos_list ',' "name"
  523                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  524 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  525                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  526                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  527                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  528                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  529 global_variable_declaration_list: %empty

  530 $@33: %empty

  531 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration

  532 optional_shared: %empty
  533                | "shared"

  534 optional_public_or_private_variable: %empty
  535                                    | "private"
  536                                    | "public"

  537 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  538 $@34: %empty

  539 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

  540 enum_list: %empty
  541          | enum_list ';'
  542          | enum_list "name" ';'
  543          | enum_list "name" '=' expr ';'

  544 optional_public_or_private_alias: %empty
  545                                 | "private"
  546                                 | "public"

  547 $@35: %empty

  548 single_alias: optional_public_or_private_alias "name" $@35 '=' type_declaration

  549 alias_list: single_alias ';'
  550           | alias_list single_alias ';'

  551 alias_declaration: "typedef" '{' alias_list '}'

  552 $@36: %empty

  553 alias_declaration: "typedef" $@36 single_alias ';'

  554 optional_public_or_private_enum: %empty
  555                                | "private"
  556                                | "public"

  557 enum_name: "name"

  558 $@37: %empty

  559 $@38: %empty

  560 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'

  561 $@39: %empty

  562 $@40: %empty

  563 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

  564 optional_structure_parent: %empty
  565                          | ':' name_in_namespace

  566 optional_sealed: %empty
  567                | "sealed"

  568 structure_name: optional_sealed "name" optional_structure_parent

  569 class_or_struct: "class"
  570                | "struct"

  571 optional_public_or_private_structure: %empty
  572                                     | "private"
  573                                     | "public"

  574 $@41: %empty

  575 $@42: %empty

  576 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

  577 variable_name_with_pos_list: "name"
  578                            | "$i" '(' expr ')'
  579                            | "name" "aka" "name"
  580                            | variable_name_with_pos_list ',' "name"
  581                            | variable_name_with_pos_list ',' "name" "aka" "name"

  582 basic_type_declaration: "bool"
  583                       | "string"
  584                       | "int"
  585                       | "int8"
  586                       | "int16"
  587                       | "int64"
  588                       | "int2"
  589                       | "int3"
  590                       | "int4"
  591                       | "uint"
  592                       | "uint8"
  593                       | "uint16"
  594                       | "uint64"
  595                       | "uint2"
  596                       | "uint3"
  597                       | "uint4"
  598                       | "float"
  599                       | "float2"
  600                       | "float3"
  601                       | "float4"
  602                       | "void"
  603                       | "range"
  604                       | "urange"
  605                       | "range64"
  606                       | "urange64"
  607                       | "double"
  608                       | "bitfield"

  609 enum_basic_type_declaration: "int"
  610                            | "int8"
  611                            | "int16"
  612                            | "uint"
  613                            | "uint8"
  614                            | "uint16"

  615 structure_type_declaration: name_in_namespace

  616 auto_type_declaration: "auto"
  617                      | "auto" '(' "name" ')'
  618                      | "$t" '(' expr ')'

  619 bitfield_bits: "name"
  620              | bitfield_bits ';' "name"

  621 bitfield_alias_bits: %empty
  622                    | bitfield_alias_bits ';'
  623                    | bitfield_alias_bits "name" ';'

  624 $@43: %empty

  625 $@44: %empty

  626 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' $@44

  627 table_type_pair: type_declaration
  628                | type_declaration ';' type_declaration

  629 type_declaration_no_options: basic_type_declaration
  630                            | auto_type_declaration
  631                            | bitfield_type_declaration
  632                            | structure_type_declaration
  633                            | type_declaration_no_options '[' expr ']'
  634                            | type_declaration_no_options '[' ']'
  635                            | type_declaration_no_options '-' '[' ']'
  636                            | type_declaration_no_options "explicit"
  637                            | type_declaration_no_options "const"
  638                            | type_declaration_no_options '-' "const"
  639                            | type_declaration_no_options '&'
  640                            | type_declaration_no_options '-' '&'
  641                            | type_declaration_no_options '#'
  642                            | type_declaration_no_options "implicit"
  643                            | type_declaration_no_options '-' '#'
  644                            | type_declaration_no_options "==" "const"
  645                            | type_declaration_no_options "==" '&'
  646                            | type_declaration_no_options '?'

  647 $@45: %empty

  648 $@46: %empty

  649 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' $@46
  650                            | type_declaration_no_options "??"

  651 $@47: %empty

  652 $@48: %empty

  653 type_declaration_no_options: "array" '<' $@47 type_declaration '>' $@48

  654 $@49: %empty

  655 $@50: %empty

  656 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' $@50

  657 $@51: %empty

  658 $@52: %empty

  659 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' $@52
  660                            | "block"

  661 $@53: %empty

  662 $@54: %empty

  663 type_declaration_no_options: "block" '<' $@53 type_declaration '>' $@54

  664 $@55: %empty

  665 $@56: %empty

  666 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' $@56
  667                            | "function"

  668 $@57: %empty

  669 $@58: %empty

  670 type_declaration_no_options: "function" '<' $@57 type_declaration '>' $@58

  671 $@59: %empty

  672 $@60: %empty

  673 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' $@60
  674                            | "lambda"

  675 $@61: %empty

  676 $@62: %empty

  677 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' $@62

  678 $@63: %empty

  679 $@64: %empty

  680 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' $@64

  681 $@65: %empty

  682 $@66: %empty

  683 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' $@66

  684 $@67: %empty

  685 $@68: %empty

  686 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' $@68

  687 type_declaration: type_declaration_no_options
  688                 | type_declaration '|' type_declaration_no_options
  689                 | type_declaration '|' '#'

  690 $@69: %empty

  691 $@70: %empty

  692 $@71: %empty

  693 $@72: %empty

  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 '}'

  695 $@73: %empty

  696 $@74: %empty

  697 $@75: %empty

  698 $@76: %empty

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}'

  700 make_decl: make_struct_decl
  701          | make_dim_decl
  702          | make_table_decl
  703          | array_comprehension
  704          | make_tuple_call

  705 make_struct_fields: "name" copy_or_move expr
  706                   | "name" ":=" expr
  707                   | make_struct_fields ',' "name" copy_or_move expr
  708                   | make_struct_fields ',' "name" ":=" expr
  709                   | "$f" '(' expr ')' copy_or_move expr
  710                   | "$f" '(' expr ')' ":=" expr
  711                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  712                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  713 make_struct_dim: make_struct_fields
  714                | make_struct_dim ';' make_struct_fields

  715 optional_block: %empty
  716               | "where" expr_block

  717 optional_trailing_semicolon_cur_cur: '}' '}'
  718                                    | ";}}"

  719 optional_trailing_semicolon_cur_sqr: '}' ']'
  720                                    | ";}]"

  721 optional_trailing_semicolon_sqr_sqr: ']' ']'
  722                                    | ";]]"

  723 optional_trailing_delim_sqr_sqr: ']' ']'
  724                                | ";]]"
  725                                | ",]]"

  726 optional_trailing_delim_cur_sqr: '}' ']'
  727                                | ";}]"
  728                                | ",}]"

  729 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  730                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  731                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  732                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  733                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  734                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  735 make_tuple: expr
  736           | expr "=>" expr
  737           | make_tuple ',' expr

  738 make_map_tuple: expr "=>" expr
  739               | expr

  740 make_tuple_call: "tuple" '(' expr_list ')'

  741 make_dim: make_tuple
  742         | make_dim ';' make_tuple

  743 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  744              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  745              | "array" '(' expr_list ')'

  746 $@77: %empty

  747 $@78: %empty

  748 make_dim_decl: "array" '<' $@77 type_declaration_no_options '>' $@78 '(' expr_list ')'
  749              | "fixed_array" '(' expr_list ')'

  750 $@79: %empty

  751 $@80: %empty

  752 make_dim_decl: "fixed_array" '<' $@79 type_declaration_no_options '>' $@80 '(' expr_list ')'

  753 make_table: make_map_tuple
  754           | make_table ';' make_map_tuple

  755 expr_map_tuple_list: make_map_tuple
  756                    | expr_map_tuple_list ',' make_map_tuple

  757 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur
  758                | "table" '(' expr_map_tuple_list ')'
  759                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  760                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

  761 array_comprehension_where: %empty
  762                          | ';' "where" expr

  763 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  764                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 106 122 377
    '#' (35) 641 643 689
    '$' (36) 19 304
    '%' (37) 34 40 142 389
    '&' (38) 150 307 396 509 518 639 640 645
    '(' (40) 97 104 110 117 118 257 258 296 297 298 349 350 351 352 354 407 415 416 417 418 420 421 422 423 452 454 455 456 457 458 460 461 462 463 464 465 466 467 468 469 493 520 578 617 618 709 710 711 712 731 732 734 740 745 748 749 752 758 759 760
    ')' (41) 97 104 110 117 118 257 258 296 297 298 349 350 351 352 354 407 415 416 417 418 420 421 422 423 452 454 455 456 457 458 460 461 462 463 464 465 466 467 468 469 493 520 578 617 618 709 710 711 712 731 732 734 740 745 748 749 752 758 759 760
    '*' (42) 140 387 419
    '+' (43) 138 379 385
    ',' (44) 49 86 99 113 279 300 312 350 522 523 580 581 707 708 711 712 737 756
    '-' (45) 139 380 386 635 638 640 643
    '.' (46) 41 167 169 170 362 363 366 409 411 413 462 464 465
    '/' (47) 42 141 388
    ':' (58) 51 52 120 280 425 497 500 510 511 524 525 526 563 565
    ';' (59) 14 15 72 73 215 219 220 227 228 233 234 235 265 270 280 281 298 485 487 490 495 499 502 504 505 524 525 527 541 542 543 549 550 553 620 622 623 628 714 742 754 760 762 763 764
    '<' (60) 143 242 254 286 289 292 295 297 298 358 361 390 422 423 428 434 439 626 649 653 656 659 663 666 670 673 677 680 683 686 748 752 759 760
    '=' (61) 78 90 91 92 93 94 95 97 308 325 343 344 345 506 514 543 548
    '>' (62) 144 242 254 286 289 292 295 297 298 358 361 391 422 423 428 434 439 626 649 653 656 659 663 666 670 673 677 680 683 686 748 752 759 760
    '?' (63) 179 180 425 436 439 440 467 646
    '@' (64) 305 306 355 358 361 469
    '[' (91) 115 165 349 350 408 409 490 633 634 635
    ']' (93) 115 165 166 280 281 314 349 350 408 409 410 411 471 490 633 634 635 719 721 723 726 763 764
    '^' (94) 152 398
    '{' (123) 213 214 537 551 560 563 576 694 699
    '|' (124) 151 397 688 689
    '}' (125) 213 214 537 551 560 563 576 694 699 717 719 726 764
    '~' (126) 123 378
    error (256) 238 366
    "lexer error" (258)
    "struct" (259) 570
    "class" (260) 569
    "let" (261) 274
    "def" (262) 206 487 489
    "while" (263) 75
    "if" (264) 60 72
    "static_if" (265) 61
    "else" (266) 58 64
    "for" (267) 73 763 764
    "recover" (268) 273
    "true" (269) 83 94 373
    "false" (270) 84 95 374
    "new" (271) 256 257 258 259
    "typeinfo" (272) 296 297 298
    "type" (273) 88 295 428 434 439
    "in" (274) 73 89 763 764
    "is" (275) 175 177 428 429 430 468
    "as" (276) 44 176 178 179 180 431 434 435 436 439 440 466 467
    "elif" (277) 55
    "static_elif" (278) 56
    "array" (279) 653 745 748
    "return" (280) 262 263 264 266 267
    "null" (281) 367
    "break" (282) 260
    "try" (283) 273
    "options" (284) 35
    "table" (285) 656 758 759 760
    "expect" (286) 47
    "const" (287) 476 637 638 644
    "require" (288) 36 101
    "operator" (289) 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
    "enum" (290) 560 563
    "finally" (291) 214
    "delete" (292) 173 250 251
    "deref" (293) 420
    "typedef" (294) 551 553
    "with" (295) 76
    "aka" (296) 521 523 579 581
    "assume" (297) 78
    "cast" (298) 286
    "override" (299) 473
    "abstract" (300) 487
    "upcast" (301) 289
    "iterator" (302) 659
    "var" (303) 275 492
    "addr" (304) 421
    "continue" (305) 261
    "where" (306) 716 762
    "pass" (307) 235
    "reinterpret" (308) 292
    "module" (309) 21
    "public" (310) 17 46 209 478 536 546 556 573
    "label" (311) 52 53
    "goto" (312) 53 54
    "implicit" (313) 642
    "explicit" (314) 251 636
    "shared" (315) 533
    "private" (316) 18 102 208 479 535 545 555 572
    "smart_ptr" (317) 649
    "unsafe" (318) 74 452
    "inscope" (319) 276
    "static" (320) 481
    "fixed_array" (321) 749 752
    "bool" (322) 181 582
    "void" (323) 602
    "string" (324) 182 583
    "auto" (325) 616 617
    "int" (326) 183 584 609
    "int2" (327) 184 588
    "int3" (328) 185 589
    "int4" (329) 186 590
    "uint" (330) 187 591 612
    "bitfield" (331) 608 626 699
    "uint2" (332) 188 595
    "uint3" (333) 189 596
    "uint4" (334) 190 597
    "float" (335) 191 598
    "float2" (336) 192 599
    "float3" (337) 193 600
    "float4" (338) 194 601
    "range" (339) 195 603
    "urange" (340) 196 604
    "range64" (341) 197 605
    "urange64" (342) 198 606
    "block" (343) 660 663 666
    "int64" (344) 199 587
    "uint64" (345) 200 594
    "double" (346) 201 607
    "function" (347) 667 670 673
    "lambda" (348) 674 677 680
    "int8" (349) 202 585 610
    "uint8" (350) 203 592 613
    "int16" (351) 204 586 611
    "uint16" (352) 205 593 614
    "tuple" (353) 683 740
    "variant" (354) 686 694
    "generator" (355) 422 423
    "yield" (356) 268 269 271 272
    "sealed" (357) 474 567
    "+=" (358) 124 334
    "-=" (359) 125 335
    "/=" (360) 127 337
    "*=" (361) 126 336
    "%=" (362) 128 338
    "&=" (363) 129 328
    "|=" (364) 130 329
    "^=" (365) 131 330
    "<<" (366) 157 381
    ">>" (367) 158 382
    "++" (368) 153 155 403 405
    "--" (369) 154 156 404 406
    "<=" (370) 148 394
    "<<=" (371) 159 339
    ">>=" (372) 160 340
    ">=" (373) 149 395
    "==" (374) 146 392 644 645
    "!=" (375) 147 393
    "->" (376) 351 352
    "<-" (377) 264 267 269 272 303 309 326 346 347 348 507 515
    "??" (378) 174 424 650
    "?." (379) 168 171 412 413 463 465
    "?[" (380) 166 410 411
    "<|" (381) 448
    " <|" (382) 243
    "$ <|" (383) 246 345 348
    "@ <|" (384) 244 343 346
    "@@ <|" (385) 245 344 347
    "|>" (386) 111 449 450
    ":=" (387) 170 172 310 327 516 706 708 710 712
    "<<<" (388) 161 383
    ">>>" (389) 162 384
    "<<<=" (390) 163 341
    ">>>=" (391) 164 342
    "=>" (392) 302 303 736 738
    "::" (393) 248 249
    "&&" (394) 107 135 399
    "||" (395) 108 136 400
    "^^" (396) 109 137 401
    "&&=" (397) 132 331
    "||=" (398) 133 332
    "^^=" (399) 134 333
    ".." (400) 145 402
    "$$" (401) 454
    "$i" (402) 354 455 520 578
    "$v" (403) 456
    "$b" (404) 457
    "$a" (405) 458 493
    "$t" (406) 618
    "$c" (407) 460 461 469
    "$f" (408) 462 463 464 465 466 467 468 709 710 711 712
    "..." (409) 459
    "[[" (410) 280 281 314 471 729 730 731 732 743 763
    "[{" (411) 733 734 744 764
    "{{" (412) 757
    "integer constant" <i> (413) 50 51 52 53 81 92 317
    "long integer constant" <i64> (414) 319
    "unsigned integer constant" <ui> (415) 318
    "unsigned long integer constant" <ui64> (416) 320
    "unsigned int8 constant" <ui> (417) 321
    "floating point constant" <fd> (418) 82 93 322
    "double constant" <d> (419) 323
    "name" <s> (420) 20 37 44 78 80 87 91 121 169 170 171 177 178 180 247 248 249 278 279 297 298 307 308 309 310 351 352 362 363 412 413 430 431 436 451 497 500 519 521 522 523 542 543 548 557 568 577 579 580 581 617 619 620 623 694 699 705 706 707 708
    "keyword" <s> (421) 38 239 242
    "start of the string" (422) 26 30
    STRING_CHARACTER <ch> (423) 22 24 31 32
    STRING_CHARACTER_ESC (424) 23 25
    "end of the string" (425) 26 30
    "{" (426) 29
    "}" (427) 29
    "end of failed eader macro" (428)
    ";}}" (429) 718
    ";}]" (430) 720 727
    ";]]" (431) 722 724
    ",]]" (432) 725
    ",}]" (433) 728
    UNARY_MINUS (434)
    UNARY_PLUS (435)
    PRE_INC (436)
    PRE_DEC (437)
    POST_INC (438)
    POST_DEC (439)
    DEREF (440)


Nonterminals, with rules where they appear

    $accept (213)
        on left: 0
    program (214)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14
    top_level_reader_macro (215)
        on left: 15
        on right: 13
    optional_public_or_private_module <b> (216)
        on left: 16 17 18
        on right: 21
    module_name <s> (217)
        on left: 19 20
        on right: 21
    module_declaration (218)
        on left: 21
        on right: 2
    character_sequence <s> (219)
        on left: 22 23 24 25
        on right: 24 25 26 28
    string_constant <s> (220)
        on left: 26
        on right: 79 90
    string_builder_body <pExpression> (221)
        on left: 27 28 29
        on right: 28 29 30
    string_builder <pExpression> (222)
        on left: 30
        on right: 371
    reader_character_sequence (223)
        on left: 31 32
        on right: 32 34
    expr_reader <pExpression> (224)
        on left: 34
        on right: 15 370
    $@1 (225)
        on left: 33
        on right: 34
    options_declaration (226)
        on left: 35
        on right: 9
    require_declaration (227)
        on left: 36
        on right: 8
    keyword_or_name <s> (228)
        on left: 37 38
        on right: 39 41 42
    require_module_name <s> (229)
        on left: 39 40 41 42
        on right: 40 41 42 43 44
    require_module (230)
        on left: 43 44
        on right: 36
    is_public_module <b> (231)
        on left: 45 46
        on right: 43 44
    expect_declaration (232)
        on left: 47
        on right: 7
    expect_list (233)
        on left: 48 49
        on right: 47 49
    expect_error (234)
        on left: 50 51
        on right: 48 49
    expression_label <pExpression> (235)
        on left: 52
        on right: 233
    expression_goto <pExpression> (236)
        on left: 53 54
        on right: 234
    elif_or_static_elif <b> (237)
        on left: 55 56
        on right: 59
    expression_else <pExpression> (238)
        on left: 57 58 59
        on right: 59 70
    if_or_static_if <b> (239)
        on left: 60 61
        on right: 70
    expression_else_one_liner <pExpression> (240)
        on left: 62 64
        on right: 72
    $@2 (241)
        on left: 63
        on right: 64
    expression_if_one_liner <pExpression> (242)
        on left: 65 66 67 68 69
        on right: 64 72
    expression_if_then_else <pExpression> (243)
        on left: 70 72
        on right: 231
    $@3 (244)
        on left: 71
        on right: 72
    expression_for_loop <pExpression> (245)
        on left: 73
        on right: 226
    expression_unsafe <pExpression> (246)
        on left: 74
        on right: 223
    expression_while_loop <pExpression> (247)
        on left: 75
        on right: 222
    expression_with <pExpression> (248)
        on left: 76
        on right: 224
    expression_with_alias <pExpression> (249)
        on left: 78
        on right: 225
    $@4 (250)
        on left: 77
        on right: 78
    annotation_argument_value <aa> (251)
        on left: 79 80 81 82 83 84
        on right: 85 86
    annotation_argument_value_list <aaList> (252)
        on left: 85 86
        on right: 86 97
    annotation_argument_name <s> (253)
        on left: 87 88 89
        on right: 90 91 92 93 94 95 96 97
    annotation_argument <aa> (254)
        on left: 90 91 92 93 94 95 96 97
        on right: 98 99
    annotation_argument_list <aaList> (255)
        on left: 98 99
        on right: 35 99 104 471
    annotation_declaration_name <s> (256)
        on left: 100 101 102
        on right: 103 104
    annotation_declaration_basic <fa> (257)
        on left: 103 104
        on right: 105
    annotation_declaration <fa> (258)
        on left: 105 106 107 108 109 110 111
        on right: 106 107 108 109 110 111 112 113
    annotation_list <faList> (259)
        on left: 112 113
        on right: 113 115 490
    optional_annotation_list <faList> (260)
        on left: 114 115
        on right: 206 316 487 489 560 563 576
    optional_function_argument_list <pVarDeclList> (261)
        on left: 116 117 118
        on right: 210 316 361 666 673 680
    optional_function_type <pTypeDecl> (262)
        on left: 119 120
        on right: 210 316 361 666 673 680
    function_name <s> (263)
        on left: 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205
        on right: 210
    global_function_declaration (264)
        on left: 206
        on right: 6
    optional_public_or_private_function <b> (265)
        on left: 207 208 209
        on right: 212
    function_declaration_header <pFuncDecl> (266)
        on left: 210
        on right: 212 487 489
    function_declaration <pFuncDecl> (267)
        on left: 212
        on right: 206
    $@5 (268)
        on left: 211
        on right: 212
    expression_block <pExpression> (269)
        on left: 213 214
        on right: 58 59 70 73 74 75 76 212 239 273 301 315 489
    expression_any <pExpression> (270)
        on left: 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235
        on right: 237
    expressions <pExpression> (271)
        on left: 236 237 238
        on right: 213 214 237 238
    expr_keyword <pExpression> (272)
        on left: 239
        on right: 217
    expression_keyword <pExpression> (273)
        on left: 242
        on right: 453
    $@6 (274)
        on left: 240
        on right: 242
    $@7 (275)
        on left: 241
        on right: 242
    expr_pipe <pExpression> (276)
        on left: 243 244 245 246
        on right: 216 266 267 271 272 513 526 528
    name_in_namespace <s> (277)
        on left: 247 248 249
        on right: 34 100 296 297 298 349 350 353 368 415 416 451 565 615
    expression_delete <pExpression> (278)
        on left: 250 251
        on right: 220
    new_type_declaration <pTypeDecl> (279)
        on left: 254 255
        on right: 256 257 258
    $@8 (280)
        on left: 252
        on right: 254
    $@9 (281)
        on left: 253
        on right: 254
    expr_new <pExpression> (282)
        on left: 256 257 258 259
        on right: 444
    expression_break <pExpression> (283)
        on left: 260
        on right: 68 227
    expression_continue <pExpression> (284)
        on left: 261
        on right: 69 228
    expression_return_no_pipe <pExpression> (285)
        on left: 262 263 264
        on right: 66 265
    expression_return <pExpression> (286)
        on left: 265 266 267
        on right: 229
    expression_yield_no_pipe <pExpression> (287)
        on left: 268 269
        on right: 67 270
    expression_yield <pExpression> (288)
        on left: 270 271 272
        on right: 230
    expression_try_catch <pExpression> (289)
        on left: 273
        on right: 232
    kwd_let <b> (290)
        on left: 274 275
        on right: 282 283 537 539
    optional_in_scope <b> (291)
        on left: 276 277
        on right: 282 283
    tuple_expansion <pNameList> (292)
        on left: 278 279
        on right: 279 280 281
    tuple_expansion_variable_declaration <pVarDecl> (293)
        on left: 280 281
        on right: 283
    expression_let <pExpression> (294)
        on left: 282 283
        on right: 221
    expr_cast <pExpression> (295)
        on left: 286 289 292
        on right: 443
    $@10 (296)
        on left: 284
        on right: 286
    $@11 (297)
        on left: 285
        on right: 286
    $@12 (298)
        on left: 287
        on right: 289
    $@13 (299)
        on left: 288
        on right: 289
    $@14 (300)
        on left: 290
        on right: 292
    $@15 (301)
        on left: 291
        on right: 292
    expr_type_decl <pExpression> (302)
        on left: 295
        on right: 442
    $@16 (303)
        on left: 293
        on right: 295
    $@17 (304)
        on left: 294
        on right: 295
    expr_type_info <pExpression> (305)
        on left: 296 297 298
        on right: 441
    expr_list <pExpression> (306)
        on left: 299 300
        on right: 73 258 263 264 300 350 352 416 418 461 740 745 748 749 752 763 764
    block_or_simple_block <pExpression> (307)
        on left: 301 302 303
        on right: 316
    block_or_lambda <i> (308)
        on left: 304 305 306
        on right: 316
    capture_entry <pCapt> (309)
        on left: 307 308 309 310
        on right: 311 312
    capture_list <pCaptList> (310)
        on left: 311 312
        on right: 312 314
    optional_capture_list <pCaptList> (311)
        on left: 313 314
        on right: 316 422 423
    expr_block <pExpression> (312)
        on left: 315 316
        on right: 243 244 245 246 343 344 345 346 347 348 447 716
    expr_numeric_const <pExpression> (313)
        on left: 317 318 319 320 321 322 323
        on right: 369
    expr_assign <pExpression> (314)
        on left: 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342
        on right: 219 243
    expr_assign_pipe <pExpression> (315)
        on left: 343 344 345 346 347 348
        on right: 218
    expr_named_call <pExpression> (316)
        on left: 349 350
        on right: 446
    expr_method_call <pExpression> (317)
        on left: 351 352
        on right: 445
    func_addr_name <pExpression> (318)
        on left: 353 354
        on right: 355 358 361
    func_addr_expr <pExpression> (319)
        on left: 355 358 361
        on right: 414
    $@18 (320)
        on left: 356
        on right: 358
    $@19 (321)
        on left: 357
        on right: 358
    $@20 (322)
        on left: 359
        on right: 361
    $@21 (323)
        on left: 360
        on right: 361
    expr_field <pExpression> (324)
        on left: 362 363 366
        on right: 375
    $@22 (325)
        on left: 364
        on right: 366
    $@23 (326)
        on left: 365
        on right: 366
    expr <pExpression> (327)
        on left: 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 428 429 430 431 434 435 436 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453
        on right
    $@24 (328)
        on left: 426
        on right: 428
    $@25 (329)
        on left: 427
        on right: 428
    $@26 (330)
        on left: 432
        on right: 434
    $@27 (331)
        on left: 433
        on right: 434
    $@28 (332)
        on left: 437
        on right: 439
    $@29 (333)
        on left: 438
        on right: 439
    expr_mtag <pExpression> (334)
        on left: 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469
        on right: 376
    optional_field_annotation <aaList> (335)
        on left: 470 471
        on right: 482 491 492 531 539
    optional_override <i> (336)
        on left: 472 473 474
        on right: 482 489
    optional_constant <b> (337)
        on left: 475 476
        on right: 487 489
    optional_public_or_private_member_variable <b> (338)
        on left: 477 478 479
        on right: 482 487 489
    optional_static_member_variable <b> (339)
        on left: 480 481
        on right: 482 489
    structure_variable_declaration <pVarDecl> (340)
        on left: 482
        on right: 485
    struct_variable_declaration_list <pVarDeclList> (341)
        on left: 483 485 487 489 490
        on right: 485 487 489 490 576
    $@30 (342)
        on left: 484
        on right: 485
    $@31 (343)
        on left: 486
        on right: 487
    $@32 (344)
        on left: 488
        on right: 489
    function_argument_declaration <pVarDecl> (345)
        on left: 491 492 493
        on right: 494 495
    function_argument_list <pVarDeclList> (346)
        on left: 494 495
        on right: 118 495
    tuple_type <pVarDecl> (347)
        on left: 496 497
        on right: 498 499
    tuple_type_list <pVarDeclList> (348)
        on left: 498 499
        on right: 499 683
    variant_type <pVarDecl> (349)
        on left: 500
        on right: 501 502 505
    variant_type_list <pVarDeclList> (350)
        on left: 501 502
        on right: 502 686
    variant_alias_type_list <pVarDeclList> (351)
        on left: 503 504 505
        on right: 504 505 694
    copy_or_move <b> (352)
        on left: 506 507
        on right: 511 512 513 705 707 709 711
    variable_declaration <pVarDecl> (353)
        on left: 508 509 510 511 512 513
        on right: 482 491 492
    copy_or_move_or_clone <i> (354)
        on left: 514 515 516
        on right: 280 281 525 526 527 528
    optional_ref <b> (355)
        on left: 517 518
        on right: 281 527 528
    let_variable_name_with_pos_list <pNameWithPosList> (356)
        on left: 519 520 521 522 523
        on right: 522 523 524 525 526 527 528
    let_variable_declaration <pVarDecl> (357)
        on left: 524 525 526 527 528
        on right: 282 531 539
    global_variable_declaration_list <pVarDeclList> (358)
        on left: 529 531
        on right: 531 537
    $@33 (359)
        on left: 530
        on right: 531
    optional_shared <b> (360)
        on left: 532 533
        on right: 21 537 539
    optional_public_or_private_variable <b> (361)
        on left: 534 535 536
        on right: 537 539
    global_let (362)
        on left: 537 539
        on right: 5
    $@34 (363)
        on left: 538
        on right: 539
    enum_list <pEnum> (364)
        on left: 540 541 542 543
        on right: 541 542 543 560 563
    optional_public_or_private_alias <b> (365)
        on left: 544 545 546
        on right: 548 694 699
    single_alias (366)
        on left: 548
        on right: 549 550 553
    $@35 (367)
        on left: 547
        on right: 548
    alias_list (368)
        on left: 549 550
        on right: 550 551
    alias_declaration (369)
        on left: 551 553
        on right: 10
    $@36 (370)
        on left: 552
        on right: 553
    optional_public_or_private_enum <b> (371)
        on left: 554 555 556
        on right: 560 563
    enum_name <pEnum> (372)
        on left: 557
        on right: 560 563
    enum_declaration (373)
        on left: 560 563
        on right: 4
    $@37 (374)
        on left: 558
        on right: 560
    $@38 (375)
        on left: 559
        on right: 560
    $@39 (376)
        on left: 561
        on right: 563
    $@40 (377)
        on left: 562
        on right: 563
    optional_structure_parent <s> (378)
        on left: 564 565
        on right: 568
    optional_sealed <b> (379)
        on left: 566 567
        on right: 568
    structure_name <pStructure> (380)
        on left: 568
        on right: 576
    class_or_struct <b> (381)
        on left: 569 570
        on right: 576
    optional_public_or_private_structure <b> (382)
        on left: 571 572 573
        on right: 576
    structure_declaration (383)
        on left: 576
        on right: 3
    $@41 (384)
        on left: 574
        on right: 576
    $@42 (385)
        on left: 575
        on right: 576
    variable_name_with_pos_list <pNameWithPosList> (386)
        on left: 577 578 579 580 581
        on right: 73 508 509 510 511 512 513 580 581 763 764
    basic_type_declaration <type> (387)
        on left: 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608
        on right: 417 418 429 435 440 450 629
    enum_basic_type_declaration <type> (388)
        on left: 609 610 611 612 613 614
        on right: 563
    structure_type_declaration <pTypeDecl> (389)
        on left: 615
        on right: 255 632
    auto_type_declaration <pTypeDecl> (390)
        on left: 616 617 618
        on right: 630
    bitfield_bits <pNameList> (391)
        on left: 619 620
        on right: 620 626
    bitfield_alias_bits <pNameList> (392)
        on left: 621 622 623
        on right: 622 623 699
    bitfield_type_declaration <pTypeDecl> (393)
        on left: 626
        on right: 631
    $@43 (394)
        on left: 624
        on right: 626
    $@44 (395)
        on left: 625
        on right: 626
    table_type_pair <aTypePair> (396)
        on left: 627 628
        on right: 656
    type_declaration_no_options <pTypeDecl> (397)
        on left: 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 649 650 653 656 659 660 663 666 667 670 673 674 677 680 683 686
        on right: 242 280 286 289 292 358 422 423 428 524 525 526 633 634 635 636 637 638 639 640 641 642 643 644 645 646 650 687 688 729 730 731 732 733 734 743 744 748 752 759 760
    $@45 (398)
        on left: 647
        on right: 649
    $@46 (399)
        on left: 648
        on right: 649
    $@47 (400)
        on left: 651
        on right: 653
    $@48 (401)
        on left: 652
        on right: 653
    $@49 (402)
        on left: 654
        on right: 656
    $@50 (403)
        on left: 655
        on right: 656
    $@51 (404)
        on left: 657
        on right: 659
    $@52 (405)
        on left: 658
        on right: 659
    $@53 (406)
        on left: 661
        on right: 663
    $@54 (407)
        on left: 662
        on right: 663
    $@55 (408)
        on left: 664
        on right: 666
    $@56 (409)
        on left: 665
        on right: 666
    $@57 (410)
        on left: 668
        on right: 670
    $@58 (411)
        on left: 669
        on right: 670
    $@59 (412)
        on left: 671
        on right: 673
    $@60 (413)
        on left: 672
        on right: 673
    $@61 (414)
        on left: 675
        on right: 677
    $@62 (415)
        on left: 676
        on right: 677
    $@63 (416)
        on left: 678
        on right: 680
    $@64 (417)
        on left: 679
        on right: 680
    $@65 (418)
        on left: 681
        on right: 683
    $@66 (419)
        on left: 682
        on right: 683
    $@67 (420)
        on left: 684
        on right: 686
    $@68 (421)
        on left: 685
        on right: 686
    type_declaration <pTypeDecl> (422)
        on left: 687 688 689
        on right: 120 254 295 434 439 496 497 500 510 511 548 627 628 649 653 659 663 670 677 688 689
    variant_alias_declaration (423)
        on left: 694
        on right: 11
    $@69 (424)
        on left: 690
        on right: 694
    $@70 (425)
        on left: 691
        on right: 694
    $@71 (426)
        on left: 692
        on right: 694
    $@72 (427)
        on left: 693
        on right: 694
    bitfield_alias_declaration (428)
        on left: 699
        on right: 12
    $@73 (429)
        on left: 695
        on right: 699
    $@74 (430)
        on left: 696
        on right: 699
    $@75 (431)
        on left: 697
        on right: 699
    $@76 (432)
        on left: 698
        on right: 699
    make_decl <pExpression> (433)
        on left: 700 701 702 703 704
        on right: 259 372
    make_struct_fields <pMakeStruct> (434)
        on left: 705 706 707 708 709 710 711 712
        on right: 349 350 707 708 711 712 713 714
    make_struct_dim <pExpression> (435)
        on left: 713 714
        on right: 714 729 732 733 734
    optional_block <pExpression> (436)
        on left: 715 716
        on right: 729 730 731 732 733 734
    optional_trailing_semicolon_cur_cur (437)
        on left: 717 718
        on right: 757
    optional_trailing_semicolon_cur_sqr (438)
        on left: 719 720
        on right: 744
    optional_trailing_semicolon_sqr_sqr (439)
        on left: 721 722
        on right: 743
    optional_trailing_delim_sqr_sqr (440)
        on left: 723 724 725
        on right: 729 730 731 732
    optional_trailing_delim_cur_sqr (441)
        on left: 726 727 728
        on right: 733 734
    make_struct_decl <pExpression> (442)
        on left: 729 730 731 732 733 734
        on right: 700
    make_tuple <pExpression> (443)
        on left: 735 736 737
        on right: 737 741 742
    make_map_tuple <pExpression> (444)
        on left: 738 739
        on right: 753 754 755 756
    make_tuple_call <pExpression> (445)
        on left: 740
        on right: 704
    make_dim <pExpression> (446)
        on left: 741 742
        on right: 742 743 744
    make_dim_decl <pExpression> (447)
        on left: 743 744 745 748 749 752
        on right: 701
    $@77 (448)
        on left: 746
        on right: 748
    $@78 (449)
        on left: 747
        on right: 748
    $@79 (450)
        on left: 750
        on right: 752
    $@80 (451)
        on left: 751
        on right: 752
    make_table <pExpression> (452)
        on left: 753 754
        on right: 754 757
    expr_map_tuple_list <pExpression> (453)
        on left: 755 756
        on right: 756 758 759 760
    make_table_decl <pExpression> (454)
        on left: 757 758 759 760
        on right: 702
    array_comprehension_where <pExpression> (455)
        on left: 761 762
        on right: 763 764
    array_comprehension <pExpression> (456)
        on left: 763 764
        on right: 703


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . top_level_reader_macro
   14        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '%'         shift, and go to state 12
    '['         shift, and go to state 13
    ';'         shift, and go to state 14

    $default  reduce using rule 114 (optional_annotation_list)

    top_level_reader_macro       go to state 15
    module_declaration           go to state 16
    expr_reader                  go to state 17
    options_declaration          go to state 18
    require_declaration          go to state 19
    expect_declaration           go to state 20
    optional_annotation_list     go to state 21
    global_function_declaration  go to state 22
    kwd_let                      go to state 23
    global_let                   go to state 24
    alias_declaration            go to state 25
    enum_declaration             go to state 26
    structure_declaration        go to state 27
    variant_alias_declaration    go to state 28
    bitfield_alias_declaration   go to state 29


State 2

    0 $accept: program $end .

    $default  accept


State 3

  274 kwd_let: "let" .

    $default  reduce using rule 274 (kwd_let)


State 4

   35 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 35


State 5

   47 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 36

    expect_list   go to state 37
    expect_error  go to state 38


State 6

   36 require_declaration: "require" . require_module

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40
    '%'        shift, and go to state 41

    keyword_or_name      go to state 42
    require_module_name  go to state 43
    require_module       go to state 44


State 7

  551 alias_declaration: "typedef" . '{' alias_list '}'
  553                  | "typedef" . $@36 single_alias ';'

    '{'  shift, and go to state 45

    $default  reduce using rule 552 ($@36)

    $@36  go to state 46


State 8

  275 kwd_let: "var" .

    $default  reduce using rule 275 (kwd_let)


State 9

   21 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 47
    '$'     shift, and go to state 48

    module_name  go to state 49


State 10

  699 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51

    $default  reduce using rule 544 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  694 variant_alias_declaration: "variant" . optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 '}'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51

    $default  reduce using rule 544 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

   34 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 54
    "name"  shift, and go to state 55

    name_in_namespace  go to state 56


State 13

  115 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 64
    annotation_list               go to state 65
    name_in_namespace             go to state 66


State 14

   14 program: program ';' .

    $default  reduce using rule 14 (program)


State 15

   13 program: program top_level_reader_macro .

    $default  reduce using rule 13 (program)


State 16

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 17

   15 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 67


State 18

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 19

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 20

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 21

  206 global_function_declaration: optional_annotation_list . "def" function_declaration
  560 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'
  563                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'
  576 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 68
    "class"   shift, and go to state 69
    "def"     shift, and go to state 70
    "enum"    shift, and go to state 71

    class_or_struct  go to state 72


State 22

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 23

  537 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  539           | kwd_let . optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 73

    $default  reduce using rule 532 (optional_shared)

    optional_shared  go to state 74


State 24

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 25

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 26

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 27

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 28

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 29

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   88 annotation_argument_name: "type" .

    $default  reduce using rule 88 (annotation_argument_name)


State 31

   89 annotation_argument_name: "in" .

    $default  reduce using rule 89 (annotation_argument_name)


State 32

   87 annotation_argument_name: "name" .

    $default  reduce using rule 87 (annotation_argument_name)


State 33

   90 annotation_argument: annotation_argument_name . '=' string_constant
   91                    | annotation_argument_name . '=' "name"
   92                    | annotation_argument_name . '=' "integer constant"
   93                    | annotation_argument_name . '=' "floating point constant"
   94                    | annotation_argument_name . '=' "true"
   95                    | annotation_argument_name . '=' "false"
   96                    | annotation_argument_name .
   97                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 75

    $default  reduce using rule 96 (annotation_argument)


State 34

   98 annotation_argument_list: annotation_argument .

    $default  reduce using rule 98 (annotation_argument_list)


State 35

   35 options_declaration: "options" annotation_argument_list .
   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 76

    $default  reduce using rule 35 (options_declaration)


State 36

   50 expect_error: "integer constant" .
   51             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 77

    $default  reduce using rule 50 (expect_error)


State 37

   47 expect_declaration: "expect" expect_list .
   49 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 78

    $default  reduce using rule 47 (expect_declaration)


State 38

   48 expect_list: expect_error .

    $default  reduce using rule 48 (expect_list)


State 39

   37 keyword_or_name: "name" .

    $default  reduce using rule 37 (keyword_or_name)


State 40

   38 keyword_or_name: "keyword" .

    $default  reduce using rule 38 (keyword_or_name)


State 41

   40 require_module_name: '%' . require_module_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40
    '%'        shift, and go to state 41

    keyword_or_name      go to state 42
    require_module_name  go to state 79


State 42

   39 require_module_name: keyword_or_name .

    $default  reduce using rule 39 (require_module_name)


State 43

   41 require_module_name: require_module_name . '.' keyword_or_name
   42                    | require_module_name . '/' keyword_or_name
   43 require_module: require_module_name . is_public_module
   44               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 80
    "public"  shift, and go to state 81
    '/'       shift, and go to state 82
    '.'       shift, and go to state 83

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 84


State 44

   36 require_declaration: "require" require_module .

    $default  reduce using rule 36 (require_declaration)


State 45

  551 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51

    $default  reduce using rule 544 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 85
    single_alias                      go to state 86
    alias_list                        go to state 87


State 46

  553 alias_declaration: "typedef" $@36 . single_alias ';'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51

    $default  reduce using rule 544 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 85
    single_alias                      go to state 88


State 47

   20 module_name: "name" .

    $default  reduce using rule 20 (module_name)


State 48

   19 module_name: '$' .

    $default  reduce using rule 19 (module_name)


State 49

   21 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 73

    $default  reduce using rule 532 (optional_shared)

    optional_shared  go to state 89


State 50

  546 optional_public_or_private_alias: "public" .

    $default  reduce using rule 546 (optional_public_or_private_alias)


State 51

  545 optional_public_or_private_alias: "private" .

    $default  reduce using rule 545 (optional_public_or_private_alias)


State 52

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}'

    $default  reduce using rule 695 ($@73)

    $@73  go to state 90


State 53

  694 variant_alias_declaration: "variant" optional_public_or_private_alias . $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 '}'

    $default  reduce using rule 690 ($@69)

    $@69  go to state 91


State 54

  249 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 92


State 55

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"

    "::"  shift, and go to state 93

    "::"      [reduce using rule 247 (name_in_namespace)]
    $default  reduce using rule 247 (name_in_namespace)


State 56

   34 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 33 ($@1)

    $@1  go to state 94


State 57

  101 annotation_declaration_name: "require" .

    $default  reduce using rule 101 (annotation_declaration_name)


State 58

  102 annotation_declaration_name: "private" .

    $default  reduce using rule 102 (annotation_declaration_name)


State 59

  111 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 95
    name_in_namespace             go to state 66


State 60

  106 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 96
    name_in_namespace             go to state 66


State 61

  110 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 97
    name_in_namespace             go to state 66


State 62

  103 annotation_declaration_basic: annotation_declaration_name .
  104                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 98

    $default  reduce using rule 103 (annotation_declaration_basic)


State 63

  105 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 105 (annotation_declaration)


State 64

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  112 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 112 (annotation_list)


State 65

  113 annotation_list: annotation_list . ',' annotation_declaration
  115 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 102
    ']'  shift, and go to state 103


State 66

  100 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 100 (annotation_declaration_name)


State 67

   15 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 15 (top_level_reader_macro)


State 68

  570 class_or_struct: "struct" .

    $default  reduce using rule 570 (class_or_struct)


State 69

  569 class_or_struct: "class" .

    $default  reduce using rule 569 (class_or_struct)


State 70

  206 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 104
    "private"  shift, and go to state 105

    $default  reduce using rule 207 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 106
    function_declaration                 go to state 107


State 71

  560 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'
  563                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "public"   shift, and go to state 108
    "private"  shift, and go to state 109

    $default  reduce using rule 554 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 110


State 72

  576 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 571 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 113


State 73

  533 optional_shared: "shared" .

    $default  reduce using rule 533 (optional_shared)


State 74

  537 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  539           | kwd_let optional_shared . optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 534 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 116


State 75

   90 annotation_argument: annotation_argument_name '=' . string_constant
   91                    | annotation_argument_name '=' . "name"
   92                    | annotation_argument_name '=' . "integer constant"
   93                    | annotation_argument_name '=' . "floating point constant"
   94                    | annotation_argument_name '=' . "true"
   95                    | annotation_argument_name '=' . "false"
   97                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 117
    "false"                    shift, and go to state 118
    "integer constant"         shift, and go to state 119
    "floating point constant"  shift, and go to state 120
    "name"                     shift, and go to state 121
    "start of the string"      shift, and go to state 122
    '('                        shift, and go to state 123

    string_constant  go to state 124


State 76

   99 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 125


State 77

   51 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 126


State 78

   49 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 36

    expect_error  go to state 127


State 79

   40 require_module_name: '%' require_module_name .
   41                    | require_module_name . '.' keyword_or_name
   42                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 83

    $default  reduce using rule 40 (require_module_name)


State 80

   44 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 128


State 81

   46 is_public_module: "public" .

    $default  reduce using rule 46 (is_public_module)


State 82

   42 require_module_name: require_module_name '/' . keyword_or_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40

    keyword_or_name  go to state 129


State 83

   41 require_module_name: require_module_name '.' . keyword_or_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40

    keyword_or_name  go to state 130


State 84

   43 require_module: require_module_name is_public_module .

    $default  reduce using rule 43 (require_module)


State 85

  548 single_alias: optional_public_or_private_alias . "name" $@35 '=' type_declaration

    "name"  shift, and go to state 131


State 86

  549 alias_list: single_alias . ';'

    ';'  shift, and go to state 132


State 87

  550 alias_list: alias_list . single_alias ';'
  551 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51
    '}'        shift, and go to state 133

    $default  reduce using rule 544 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 85
    single_alias                      go to state 134


State 88

  553 alias_declaration: "typedef" $@36 single_alias . ';'

    ';'  shift, and go to state 135


State 89

   21 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 136
    "private"  shift, and go to state 137

    $default  reduce using rule 16 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 138


State 90

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 . "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}'

    "name"  shift, and go to state 139


State 91

  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 . "name" $@70 '{' $@71 variant_alias_type_list $@72 '}'

    "name"  shift, and go to state 140


State 92

  249 name_in_namespace: "::" "name" .

    $default  reduce using rule 249 (name_in_namespace)


State 93

  248 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 141


State 94

   34 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 142

    reader_character_sequence  go to state 143


State 95

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  111                       | "|>" annotation_declaration .

    $default  reduce using rule 111 (annotation_declaration)


State 96

  106 annotation_declaration: '!' annotation_declaration .
  107                       | annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 106 (annotation_declaration)


State 97

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  110                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101
    ')'   shift, and go to state 144


State 98

  104 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 145


State 99

  107 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 146
    name_in_namespace             go to state 66


State 100

  108 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 147
    name_in_namespace             go to state 66


State 101

  109 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 148
    name_in_namespace             go to state 66


State 102

  113 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 149
    name_in_namespace             go to state 66


State 103

  115 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 115 (optional_annotation_list)


State 104

  209 optional_public_or_private_function: "public" .

    $default  reduce using rule 209 (optional_public_or_private_function)


State 105

  208 optional_public_or_private_function: "private" .

    $default  reduce using rule 208 (optional_public_or_private_function)


State 106

  212 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 211 ($@5)

    $@5  go to state 150


State 107

  206 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 206 (global_function_declaration)


State 108

  556 optional_public_or_private_enum: "public" .

    $default  reduce using rule 556 (optional_public_or_private_enum)


State 109

  555 optional_public_or_private_enum: "private" .

    $default  reduce using rule 555 (optional_public_or_private_enum)


State 110

  560 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@37 enum_list $@38 '}'
  563                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "name"  shift, and go to state 151

    enum_name  go to state 152


State 111

  573 optional_public_or_private_structure: "public" .

    $default  reduce using rule 573 (optional_public_or_private_structure)


State 112

  572 optional_public_or_private_structure: "private" .

    $default  reduce using rule 572 (optional_public_or_private_structure)


State 113

  576 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 574 ($@41)

    $@41  go to state 153


State 114

  536 optional_public_or_private_variable: "public" .

    $default  reduce using rule 536 (optional_public_or_private_variable)


State 115

  535 optional_public_or_private_variable: "private" .

    $default  reduce using rule 535 (optional_public_or_private_variable)


State 116

  537 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  539           | kwd_let optional_shared optional_public_or_private_variable . $@34 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 154

    $default  reduce using rule 538 ($@34)

    $@34  go to state 155


State 117

   94 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 94 (annotation_argument)


State 118

   95 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 95 (annotation_argument)


State 119

   92 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 92 (annotation_argument)


State 120

   93 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 93 (annotation_argument)


State 121

   91 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 91 (annotation_argument)


State 122

   26 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 156
    STRING_CHARACTER_ESC  shift, and go to state 157

    character_sequence  go to state 158


State 123

   97 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 122

    string_constant                 go to state 164
    annotation_argument_value       go to state 165
    annotation_argument_value_list  go to state 166


State 124

   90 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 90 (annotation_argument)


State 125

   99 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 99 (annotation_argument_list)


State 126

   51 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 51 (expect_error)


State 127

   49 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 49 (expect_list)


State 128

   44 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 81

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 167


State 129

   42 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 42 (require_module_name)


State 130

   41 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 131

  548 single_alias: optional_public_or_private_alias "name" . $@35 '=' type_declaration

    $default  reduce using rule 547 ($@35)

    $@35  go to state 168


State 132

  549 alias_list: single_alias ';' .

    $default  reduce using rule 549 (alias_list)


State 133

  551 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 551 (alias_declaration)


State 134

  550 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 169


State 135

  553 alias_declaration: "typedef" $@36 single_alias ';' .

    $default  reduce using rule 553 (alias_declaration)


State 136

   17 optional_public_or_private_module: "public" .

    $default  reduce using rule 17 (optional_public_or_private_module)


State 137

   18 optional_public_or_private_module: "private" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 138

   21 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 21 (module_declaration)


State 139

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" . $@74 '{' $@75 bitfield_alias_bits $@76 '}'

    $default  reduce using rule 696 ($@74)

    $@74  go to state 170


State 140

  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" . $@70 '{' $@71 variant_alias_type_list $@72 '}'

    $default  reduce using rule 691 ($@70)

    $@70  go to state 171


State 141

  248 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 248 (name_in_namespace)


State 142

   31 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 31 (reader_character_sequence)


State 143

   32 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   34 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 172

    $default  reduce using rule 34 (expr_reader)


State 144

  110 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 110 (annotation_declaration)


State 145

   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  104 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 76
    ')'  shift, and go to state 173


State 146

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration "&&" annotation_declaration .
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 107 (annotation_declaration)


State 147

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration "||" annotation_declaration .
  109                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 99
    "^^"  shift, and go to state 101

    $default  reduce using rule 108 (annotation_declaration)


State 148

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  109                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 99

    $default  reduce using rule 109 (annotation_declaration)


State 149

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  113 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 113 (annotation_list)


State 150

  212 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 204


State 151

  557 enum_name: "name" .

    $default  reduce using rule 557 (enum_name)


State 152

  560 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@37 enum_list $@38 '}'
  563                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    ':'  shift, and go to state 205
    '{'  shift, and go to state 206


State 153

  576 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 . structure_name $@42 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 207

    $default  reduce using rule 566 (optional_sealed)

    optional_sealed  go to state 208
    structure_name   go to state 209


State 154

  537 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 529 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 210


State 155

  539 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 211

    $default  reduce using rule 470 (optional_field_annotation)

    optional_field_annotation  go to state 212


State 156

   22 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 157

   23 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 158

   24 character_sequence: character_sequence . STRING_CHARACTER
   25                   | character_sequence . STRING_CHARACTER_ESC
   26 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 213
    STRING_CHARACTER_ESC  shift, and go to state 214
    "end of the string"   shift, and go to state 215


State 159

   83 annotation_argument_value: "true" .

    $default  reduce using rule 83 (annotation_argument_value)


State 160

   84 annotation_argument_value: "false" .

    $default  reduce using rule 84 (annotation_argument_value)


State 161

   81 annotation_argument_value: "integer constant" .

    $default  reduce using rule 81 (annotation_argument_value)


State 162

   82 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 82 (annotation_argument_value)


State 163

   80 annotation_argument_value: "name" .

    $default  reduce using rule 80 (annotation_argument_value)


State 164

   79 annotation_argument_value: string_constant .

    $default  reduce using rule 79 (annotation_argument_value)


State 165

   85 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 85 (annotation_argument_value_list)


State 166

   86 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   97 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 216
    ')'  shift, and go to state 217


State 167

   44 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 44 (require_module)


State 168

  548 single_alias: optional_public_or_private_alias "name" $@35 . '=' type_declaration

    '='  shift, and go to state 218


State 169

  550 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 550 (alias_list)


State 170

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 . '{' $@75 bitfield_alias_bits $@76 '}'

    '{'  shift, and go to state 219


State 171

  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 . '{' $@71 variant_alias_type_list $@72 '}'

    '{'  shift, and go to state 220


State 172

   32 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 173

  104 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 104 (annotation_declaration_basic)


State 174

  122 function_name: "operator" . '!'
  123              | "operator" . '~'
  124              | "operator" . "+="
  125              | "operator" . "-="
  126              | "operator" . "*="
  127              | "operator" . "/="
  128              | "operator" . "%="
  129              | "operator" . "&="
  130              | "operator" . "|="
  131              | "operator" . "^="
  132              | "operator" . "&&="
  133              | "operator" . "||="
  134              | "operator" . "^^="
  135              | "operator" . "&&"
  136              | "operator" . "||"
  137              | "operator" . "^^"
  138              | "operator" . '+'
  139              | "operator" . '-'
  140              | "operator" . '*'
  141              | "operator" . '/'
  142              | "operator" . '%'
  143              | "operator" . '<'
  144              | "operator" . '>'
  145              | "operator" . ".."
  146              | "operator" . "=="
  147              | "operator" . "!="
  148              | "operator" . "<="
  149              | "operator" . ">="
  150              | "operator" . '&'
  151              | "operator" . '|'
  152              | "operator" . '^'
  155              | "operator" . "++"
  156              | "operator" . "--"
  157              | "operator" . "<<"
  158              | "operator" . ">>"
  159              | "operator" . "<<="
  160              | "operator" . ">>="
  161              | "operator" . "<<<"
  162              | "operator" . ">>>"
  163              | "operator" . "<<<="
  164              | "operator" . ">>>="
  165              | "operator" . '[' ']'
  166              | "operator" . "?[" ']'
  167              | "operator" . '.'
  168              | "operator" . "?."
  169              | "operator" . '.' "name"
  170              | "operator" . '.' "name" ":="
  171              | "operator" . "?." "name"
  172              | "operator" . ":="
  173              | "operator" . "delete"
  174              | "operator" . "??"
  175              | "operator" . "is"
  176              | "operator" . "as"
  177              | "operator" . "is" "name"
  178              | "operator" . "as" "name"
  179              | "operator" . '?' "as"
  180              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 221
    "as"      shift, and go to state 222
    "delete"  shift, and go to state 223
    "+="      shift, and go to state 224
    "-="      shift, and go to state 225
    "/="      shift, and go to state 226
    "*="      shift, and go to state 227
    "%="      shift, and go to state 228
    "&="      shift, and go to state 229
    "|="      shift, and go to state 230
    "^="      shift, and go to state 231
    "<<"      shift, and go to state 232
    ">>"      shift, and go to state 233
    "++"      shift, and go to state 234
    "--"      shift, and go to state 235
    "<="      shift, and go to state 236
    "<<="     shift, and go to state 237
    ">>="     shift, and go to state 238
    ">="      shift, and go to state 239
    "=="      shift, and go to state 240
    "!="      shift, and go to state 241
    "??"      shift, and go to state 242
    "?."      shift, and go to state 243
    "?["      shift, and go to state 244
    ":="      shift, and go to state 245
    "<<<"     shift, and go to state 246
    ">>>"     shift, and go to state 247
    "<<<="    shift, and go to state 248
    ">>>="    shift, and go to state 249
    "&&"      shift, and go to state 250
    "||"      shift, and go to state 251
    "^^"      shift, and go to state 252
    "&&="     shift, and go to state 253
    "||="     shift, and go to state 254
    "^^="     shift, and go to state 255
    ".."      shift, and go to state 256
    '?'       shift, and go to state 257
    '|'       shift, and go to state 258
    '^'       shift, and go to state 259
    '&'       shift, and go to state 260
    '<'       shift, and go to state 261
    '>'       shift, and go to state 262
    '-'       shift, and go to state 263
    '+'       shift, and go to state 264
    '*'       shift, and go to state 265
    '/'       shift, and go to state 266
    '%'       shift, and go to state 267
    '~'       shift, and go to state 268
    '!'       shift, and go to state 269
    '.'       shift, and go to state 270
    '['       shift, and go to state 271


State 175

  181 function_name: "bool" .

    $default  reduce using rule 181 (function_name)


State 176

  182 function_name: "string" .

    $default  reduce using rule 182 (function_name)


State 177

  183 function_name: "int" .

    $default  reduce using rule 183 (function_name)


State 178

  184 function_name: "int2" .

    $default  reduce using rule 184 (function_name)


State 179

  185 function_name: "int3" .

    $default  reduce using rule 185 (function_name)


State 180

  186 function_name: "int4" .

    $default  reduce using rule 186 (function_name)


State 181

  187 function_name: "uint" .

    $default  reduce using rule 187 (function_name)


State 182

  188 function_name: "uint2" .

    $default  reduce using rule 188 (function_name)


State 183

  189 function_name: "uint3" .

    $default  reduce using rule 189 (function_name)


State 184

  190 function_name: "uint4" .

    $default  reduce using rule 190 (function_name)


State 185

  191 function_name: "float" .

    $default  reduce using rule 191 (function_name)


State 186

  192 function_name: "float2" .

    $default  reduce using rule 192 (function_name)


State 187

  193 function_name: "float3" .

    $default  reduce using rule 193 (function_name)


State 188

  194 function_name: "float4" .

    $default  reduce using rule 194 (function_name)


State 189

  195 function_name: "range" .

    $default  reduce using rule 195 (function_name)


State 190

  196 function_name: "urange" .

    $default  reduce using rule 196 (function_name)


State 191

  197 function_name: "range64" .

    $default  reduce using rule 197 (function_name)


State 192

  198 function_name: "urange64" .

    $default  reduce using rule 198 (function_name)


State 193

  199 function_name: "int64" .

    $default  reduce using rule 199 (function_name)


State 194

  200 function_name: "uint64" .

    $default  reduce using rule 200 (function_name)


State 195

  201 function_name: "double" .

    $default  reduce using rule 201 (function_name)


State 196

  202 function_name: "int8" .

    $default  reduce using rule 202 (function_name)


State 197

  203 function_name: "uint8" .

    $default  reduce using rule 203 (function_name)


State 198

  204 function_name: "int16" .

    $default  reduce using rule 204 (function_name)


State 199

  205 function_name: "uint16" .

    $default  reduce using rule 205 (function_name)


State 200

  153 function_name: "++" . "operator"

    "operator"  shift, and go to state 272


State 201

  154 function_name: "--" . "operator"

    "operator"  shift, and go to state 273


State 202

  121 function_name: "name" .

    $default  reduce using rule 121 (function_name)


State 203

  210 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 275


State 204

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 277


State 205

  563 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "int"     shift, and go to state 278
    "uint"    shift, and go to state 279
    "int8"    shift, and go to state 280
    "uint8"   shift, and go to state 281
    "int16"   shift, and go to state 282
    "uint16"  shift, and go to state 283

    enum_basic_type_declaration  go to state 284


State 206

  560 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@37 enum_list $@38 '}'

    $default  reduce using rule 558 ($@37)

    $@37  go to state 285


State 207

  567 optional_sealed: "sealed" .

    $default  reduce using rule 567 (optional_sealed)


State 208

  568 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 286


State 209

  576 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name . $@42 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 575 ($@42)

    $@42  go to state 287


State 210

  531 global_variable_declaration_list: global_variable_declaration_list . $@33 optional_field_annotation let_variable_declaration
  537 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 288

    $default  reduce using rule 530 ($@33)

    $@33  go to state 289


State 211

  471 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 290


State 212

  539 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 291
    "name"  shift, and go to state 292

    let_variable_name_with_pos_list  go to state 293
    let_variable_declaration         go to state 294


State 213

   24 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 24 (character_sequence)


State 214

   25 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 25 (character_sequence)


State 215

   26 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 26 (string_constant)


State 216

   86 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 122

    string_constant            go to state 164
    annotation_argument_value  go to state 295


State 217

   97 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 97 (annotation_argument)


State 218

  548 single_alias: optional_public_or_private_alias "name" $@35 '=' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 340


State 219

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' . $@75 bitfield_alias_bits $@76 '}'

    $default  reduce using rule 697 ($@75)

    $@75  go to state 341


State 220

  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' . $@71 variant_alias_type_list $@72 '}'

    $default  reduce using rule 692 ($@71)

    $@71  go to state 342


State 221

  175 function_name: "operator" "is" .
  177              | "operator" "is" . "name"

    "name"  shift, and go to state 343

    $default  reduce using rule 175 (function_name)


State 222

  176 function_name: "operator" "as" .
  178              | "operator" "as" . "name"

    "name"  shift, and go to state 344

    $default  reduce using rule 176 (function_name)


State 223

  173 function_name: "operator" "delete" .

    $default  reduce using rule 173 (function_name)


State 224

  124 function_name: "operator" "+=" .

    $default  reduce using rule 124 (function_name)


State 225

  125 function_name: "operator" "-=" .

    $default  reduce using rule 125 (function_name)


State 226

  127 function_name: "operator" "/=" .

    $default  reduce using rule 127 (function_name)


State 227

  126 function_name: "operator" "*=" .

    $default  reduce using rule 126 (function_name)


State 228

  128 function_name: "operator" "%=" .

    $default  reduce using rule 128 (function_name)


State 229

  129 function_name: "operator" "&=" .

    $default  reduce using rule 129 (function_name)


State 230

  130 function_name: "operator" "|=" .

    $default  reduce using rule 130 (function_name)


State 231

  131 function_name: "operator" "^=" .

    $default  reduce using rule 131 (function_name)


State 232

  157 function_name: "operator" "<<" .

    $default  reduce using rule 157 (function_name)


State 233

  158 function_name: "operator" ">>" .

    $default  reduce using rule 158 (function_name)


State 234

  155 function_name: "operator" "++" .

    $default  reduce using rule 155 (function_name)


State 235

  156 function_name: "operator" "--" .

    $default  reduce using rule 156 (function_name)


State 236

  148 function_name: "operator" "<=" .

    $default  reduce using rule 148 (function_name)


State 237

  159 function_name: "operator" "<<=" .

    $default  reduce using rule 159 (function_name)


State 238

  160 function_name: "operator" ">>=" .

    $default  reduce using rule 160 (function_name)


State 239

  149 function_name: "operator" ">=" .

    $default  reduce using rule 149 (function_name)


State 240

  146 function_name: "operator" "==" .

    $default  reduce using rule 146 (function_name)


State 241

  147 function_name: "operator" "!=" .

    $default  reduce using rule 147 (function_name)


State 242

  174 function_name: "operator" "??" .

    $default  reduce using rule 174 (function_name)


State 243

  168 function_name: "operator" "?." .
  171              | "operator" "?." . "name"

    "name"  shift, and go to state 345

    $default  reduce using rule 168 (function_name)


State 244

  166 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 346


State 245

  172 function_name: "operator" ":=" .

    $default  reduce using rule 172 (function_name)


State 246

  161 function_name: "operator" "<<<" .

    $default  reduce using rule 161 (function_name)


State 247

  162 function_name: "operator" ">>>" .

    $default  reduce using rule 162 (function_name)


State 248

  163 function_name: "operator" "<<<=" .

    $default  reduce using rule 163 (function_name)


State 249

  164 function_name: "operator" ">>>=" .

    $default  reduce using rule 164 (function_name)


State 250

  135 function_name: "operator" "&&" .

    $default  reduce using rule 135 (function_name)


State 251

  136 function_name: "operator" "||" .

    $default  reduce using rule 136 (function_name)


State 252

  137 function_name: "operator" "^^" .

    $default  reduce using rule 137 (function_name)


State 253

  132 function_name: "operator" "&&=" .

    $default  reduce using rule 132 (function_name)


State 254

  133 function_name: "operator" "||=" .

    $default  reduce using rule 133 (function_name)


State 255

  134 function_name: "operator" "^^=" .

    $default  reduce using rule 134 (function_name)


State 256

  145 function_name: "operator" ".." .

    $default  reduce using rule 145 (function_name)


State 257

  179 function_name: "operator" '?' . "as"
  180              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 347


State 258

  151 function_name: "operator" '|' .

    $default  reduce using rule 151 (function_name)


State 259

  152 function_name: "operator" '^' .

    $default  reduce using rule 152 (function_name)


State 260

  150 function_name: "operator" '&' .

    $default  reduce using rule 150 (function_name)


State 261

  143 function_name: "operator" '<' .

    $default  reduce using rule 143 (function_name)


State 262

  144 function_name: "operator" '>' .

    $default  reduce using rule 144 (function_name)


State 263

  139 function_name: "operator" '-' .

    $default  reduce using rule 139 (function_name)


State 264

  138 function_name: "operator" '+' .

    $default  reduce using rule 138 (function_name)


State 265

  140 function_name: "operator" '*' .

    $default  reduce using rule 140 (function_name)


State 266

  141 function_name: "operator" '/' .

    $default  reduce using rule 141 (function_name)


State 267

  142 function_name: "operator" '%' .

    $default  reduce using rule 142 (function_name)


State 268

  123 function_name: "operator" '~' .

    $default  reduce using rule 123 (function_name)


State 269

  122 function_name: "operator" '!' .

    $default  reduce using rule 122 (function_name)


State 270

  167 function_name: "operator" '.' .
  169              | "operator" '.' . "name"
  170              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 348

    $default  reduce using rule 167 (function_name)


State 271

  165 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 349


State 272

  153 function_name: "++" "operator" .

    $default  reduce using rule 153 (function_name)


State 273

  154 function_name: "--" "operator" .

    $default  reduce using rule 154 (function_name)


State 274

  117 optional_function_argument_list: '(' . ')'
  118                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 350
    "[["  shift, and go to state 211
    ')'   shift, and go to state 351

    $default  reduce using rule 470 (optional_field_annotation)

    optional_field_annotation      go to state 352
    function_argument_declaration  go to state 353
    function_argument_list         go to state 354


State 275

  210 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 356


State 276

  213 expression_block: '{' . expressions '}'
  214                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 236 (expressions)

    expressions  go to state 357


State 277

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 212 (function_declaration)


State 278

  609 enum_basic_type_declaration: "int" .

    $default  reduce using rule 609 (enum_basic_type_declaration)


State 279

  612 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 612 (enum_basic_type_declaration)


State 280

  610 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 610 (enum_basic_type_declaration)


State 281

  613 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 613 (enum_basic_type_declaration)


State 282

  611 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 611 (enum_basic_type_declaration)


State 283

  614 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 614 (enum_basic_type_declaration)


State 284

  563 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@39 enum_list $@40 '}'

    '{'  shift, and go to state 358


State 285

  560 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 . enum_list $@38 '}'

    $default  reduce using rule 540 (enum_list)

    enum_list  go to state 359


State 286

  568 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 360

    $default  reduce using rule 564 (optional_structure_parent)

    optional_structure_parent  go to state 361


State 287

  576 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 362


State 288

  537 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 537 (global_let)


State 289

  531 global_variable_declaration_list: global_variable_declaration_list $@33 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 211

    $default  reduce using rule 470 (optional_field_annotation)

    optional_field_annotation  go to state 363


State 290

   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  471 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 76
    ']'  shift, and go to state 364


State 291

  520 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 365


State 292

  519 let_variable_name_with_pos_list: "name" .
  521                                | "name" . "aka" "name"

    "aka"  shift, and go to state 366

    $default  reduce using rule 519 (let_variable_name_with_pos_list)


State 293

  522 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  523                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  524 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  525                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  526                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  527                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  528                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 367
    ':'  shift, and go to state 368
    '&'  shift, and go to state 369

    $default  reduce using rule 517 (optional_ref)

    optional_ref  go to state 370


State 294

  539 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 539 (global_let)


State 295

   86 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 86 (annotation_argument_value_list)


State 296

  653 type_declaration_no_options: "array" . '<' $@47 type_declaration '>' $@48

    '<'  shift, and go to state 371


State 297

  656 type_declaration_no_options: "table" . '<' $@49 table_type_pair '>' $@50

    '<'  shift, and go to state 372


State 298

  659 type_declaration_no_options: "iterator" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 373


State 299

  649 type_declaration_no_options: "smart_ptr" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 374


State 300

  582 basic_type_declaration: "bool" .

    $default  reduce using rule 582 (basic_type_declaration)


State 301

  602 basic_type_declaration: "void" .

    $default  reduce using rule 602 (basic_type_declaration)


State 302

  583 basic_type_declaration: "string" .

    $default  reduce using rule 583 (basic_type_declaration)


State 303

  616 auto_type_declaration: "auto" .
  617                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 375

    '('       [reduce using rule 616 (auto_type_declaration)]
    $default  reduce using rule 616 (auto_type_declaration)


State 304

  584 basic_type_declaration: "int" .

    $default  reduce using rule 584 (basic_type_declaration)


State 305

  588 basic_type_declaration: "int2" .

    $default  reduce using rule 588 (basic_type_declaration)


State 306

  589 basic_type_declaration: "int3" .

    $default  reduce using rule 589 (basic_type_declaration)


State 307

  590 basic_type_declaration: "int4" .

    $default  reduce using rule 590 (basic_type_declaration)


State 308

  591 basic_type_declaration: "uint" .

    $default  reduce using rule 591 (basic_type_declaration)


State 309

  608 basic_type_declaration: "bitfield" .
  626 bitfield_type_declaration: "bitfield" . '<' $@43 bitfield_bits '>' $@44

    '<'  shift, and go to state 376

    $default  reduce using rule 608 (basic_type_declaration)


State 310

  595 basic_type_declaration: "uint2" .

    $default  reduce using rule 595 (basic_type_declaration)


State 311

  596 basic_type_declaration: "uint3" .

    $default  reduce using rule 596 (basic_type_declaration)


State 312

  597 basic_type_declaration: "uint4" .

    $default  reduce using rule 597 (basic_type_declaration)


State 313

  598 basic_type_declaration: "float" .

    $default  reduce using rule 598 (basic_type_declaration)


State 314

  599 basic_type_declaration: "float2" .

    $default  reduce using rule 599 (basic_type_declaration)


State 315

  600 basic_type_declaration: "float3" .

    $default  reduce using rule 600 (basic_type_declaration)


State 316

  601 basic_type_declaration: "float4" .

    $default  reduce using rule 601 (basic_type_declaration)


State 317

  603 basic_type_declaration: "range" .

    $default  reduce using rule 603 (basic_type_declaration)


State 318

  604 basic_type_declaration: "urange" .

    $default  reduce using rule 604 (basic_type_declaration)


State 319

  605 basic_type_declaration: "range64" .

    $default  reduce using rule 605 (basic_type_declaration)


State 320

  606 basic_type_declaration: "urange64" .

    $default  reduce using rule 606 (basic_type_declaration)


State 321

  660 type_declaration_no_options: "block" .
  663                            | "block" . '<' $@53 type_declaration '>' $@54
  666                            | "block" . '<' $@55 optional_function_argument_list optional_function_type '>' $@56

    '<'  shift, and go to state 377

    $default  reduce using rule 660 (type_declaration_no_options)


State 322

  587 basic_type_declaration: "int64" .

    $default  reduce using rule 587 (basic_type_declaration)


State 323

  594 basic_type_declaration: "uint64" .

    $default  reduce using rule 594 (basic_type_declaration)


State 324

  607 basic_type_declaration: "double" .

    $default  reduce using rule 607 (basic_type_declaration)


State 325

  667 type_declaration_no_options: "function" .
  670                            | "function" . '<' $@57 type_declaration '>' $@58
  673                            | "function" . '<' $@59 optional_function_argument_list optional_function_type '>' $@60

    '<'  shift, and go to state 378

    $default  reduce using rule 667 (type_declaration_no_options)


State 326

  674 type_declaration_no_options: "lambda" .
  677                            | "lambda" . '<' $@61 type_declaration '>' $@62
  680                            | "lambda" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 379

    $default  reduce using rule 674 (type_declaration_no_options)


State 327

  585 basic_type_declaration: "int8" .

    $default  reduce using rule 585 (basic_type_declaration)


State 328

  592 basic_type_declaration: "uint8" .

    $default  reduce using rule 592 (basic_type_declaration)


State 329

  586 basic_type_declaration: "int16" .

    $default  reduce using rule 586 (basic_type_declaration)


State 330

  593 basic_type_declaration: "uint16" .

    $default  reduce using rule 593 (basic_type_declaration)


State 331

  683 type_declaration_no_options: "tuple" . '<' $@65 tuple_type_list '>' $@66

    '<'  shift, and go to state 380


State 332

  686 type_declaration_no_options: "variant" . '<' $@67 variant_type_list '>' $@68

    '<'  shift, and go to state 381


State 333

  618 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 382


State 334

  615 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 615 (structure_type_declaration)


State 335

  629 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 629 (type_declaration_no_options)


State 336

  632 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 632 (type_declaration_no_options)


State 337

  630 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 630 (type_declaration_no_options)


State 338

  631 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 631 (type_declaration_no_options)


State 339

  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"
  687 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392

    $default  reduce using rule 687 (type_declaration)


State 340

  548 single_alias: optional_public_or_private_alias "name" $@35 '=' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 548 (single_alias)


State 341

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 . bitfield_alias_bits $@76 '}'

    $default  reduce using rule 621 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 394


State 342

  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 . variant_alias_type_list $@72 '}'

    $default  reduce using rule 503 (variant_alias_type_list)

    variant_alias_type_list  go to state 395


State 343

  177 function_name: "operator" "is" "name" .

    $default  reduce using rule 177 (function_name)


State 344

  178 function_name: "operator" "as" "name" .

    $default  reduce using rule 178 (function_name)


State 345

  171 function_name: "operator" "?." "name" .

    $default  reduce using rule 171 (function_name)


State 346

  166 function_name: "operator" "?[" ']' .

    $default  reduce using rule 166 (function_name)


State 347

  179 function_name: "operator" '?' "as" .
  180              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 396

    $default  reduce using rule 179 (function_name)


State 348

  169 function_name: "operator" '.' "name" .
  170              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 397

    $default  reduce using rule 169 (function_name)


State 349

  165 function_name: "operator" '[' ']' .

    $default  reduce using rule 165 (function_name)


State 350

  493 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 398


State 351

  117 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 117 (optional_function_argument_list)


State 352

  491 function_argument_declaration: optional_field_annotation . variable_declaration
  492                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 399
    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_declaration         go to state 402
    variable_name_with_pos_list  go to state 403


State 353

  494 function_argument_list: function_argument_declaration .

    $default  reduce using rule 494 (function_argument_list)


State 354

  118 optional_function_argument_list: '(' function_argument_list . ')'
  495 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 404
    ';'  shift, and go to state 405


State 355

  120 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 406


State 356

  210 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 210 (function_declaration_header)


State 357

  213 expression_block: '{' expressions . '}'
  214                 | '{' expressions . '}' "finally" '{' expressions '}'
  237 expressions: expressions . expression_any
  238            | expressions . error

    error                             shift, and go to state 407
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 408
    "if"                              shift, and go to state 409
    "static_if"                       shift, and go to state 410
    "for"                             shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "return"                          shift, and go to state 418
    "null"                            shift, and go to state 419
    "break"                           shift, and go to state 420
    "try"                             shift, and go to state 421
    "table"                           shift, and go to state 422
    "delete"                          shift, and go to state 423
    "deref"                           shift, and go to state 424
    "with"                            shift, and go to state 425
    "assume"                          shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 430
    "pass"                            shift, and go to state 431
    "reinterpret"                     shift, and go to state 432
    "label"                           shift, and go to state 433
    "goto"                            shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "yield"                           shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 463
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    ';'                               shift, and go to state 473
    '{'                               shift, and go to state 276
    '}'                               shift, and go to state 474

    string_builder             go to state 475
    expr_reader                go to state 476
    expression_label           go to state 477
    expression_goto            go to state 478
    if_or_static_if            go to state 479
    expression_if_one_liner    go to state 480
    expression_if_then_else    go to state 481
    expression_for_loop        go to state 482
    expression_unsafe          go to state 483
    expression_while_loop      go to state 484
    expression_with            go to state 485
    expression_with_alias      go to state 486
    expression_block           go to state 487
    expression_any             go to state 488
    expr_keyword               go to state 489
    expression_keyword         go to state 490
    expr_pipe                  go to state 491
    name_in_namespace          go to state 492
    expression_delete          go to state 493
    expr_new                   go to state 494
    expression_break           go to state 495
    expression_continue        go to state 496
    expression_return_no_pipe  go to state 497
    expression_return          go to state 498
    expression_yield_no_pipe   go to state 499
    expression_yield           go to state 500
    expression_try_catch       go to state 501
    kwd_let                    go to state 502
    expression_let             go to state 503
    expr_cast                  go to state 504
    expr_type_decl             go to state 505
    expr_type_info             go to state 506
    block_or_lambda            go to state 507
    expr_block                 go to state 508
    expr_numeric_const         go to state 509
    expr_assign                go to state 510
    expr_assign_pipe           go to state 511
    expr_named_call            go to state 512
    expr_method_call           go to state 513
    func_addr_expr             go to state 514
    expr_field                 go to state 515
    expr                       go to state 516
    expr_mtag                  go to state 517
    basic_type_declaration     go to state 518
    make_decl                  go to state 519
    make_struct_decl           go to state 520
    make_tuple_call            go to state 521
    make_dim_decl              go to state 522
    make_table_decl            go to state 523
    array_comprehension        go to state 524


State 358

  563 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@39 enum_list $@40 '}'

    $default  reduce using rule 561 ($@39)

    $@39  go to state 525


State 359

  541 enum_list: enum_list . ';'
  542          | enum_list . "name" ';'
  543          | enum_list . "name" '=' expr ';'
  560 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list . $@38 '}'

    "name"  shift, and go to state 526
    ';'     shift, and go to state 527

    $default  reduce using rule 559 ($@38)

    $@38  go to state 528


State 360

  565 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 54
    "name"  shift, and go to state 55

    name_in_namespace  go to state 529


State 361

  568 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 568 (structure_name)


State 362

  576 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 483 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 530


State 363

  531 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 291
    "name"  shift, and go to state 292

    let_variable_name_with_pos_list  go to state 293
    let_variable_declaration         go to state 531


State 364

  471 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 532


State 365

  520 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 535
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 366

  521 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 536


State 367

  522 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  523                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 537


State 368

  524 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  525                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  526                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 538


State 369

  518 optional_ref: '&' .

    $default  reduce using rule 518 (optional_ref)


State 370

  527 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  528                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 539
    ":="  shift, and go to state 540
    '='   shift, and go to state 541

    copy_or_move_or_clone  go to state 542


State 371

  653 type_declaration_no_options: "array" '<' . $@47 type_declaration '>' $@48

    $default  reduce using rule 651 ($@47)

    $@47  go to state 543


State 372

  656 type_declaration_no_options: "table" '<' . $@49 table_type_pair '>' $@50

    $default  reduce using rule 654 ($@49)

    $@49  go to state 544


State 373

  659 type_declaration_no_options: "iterator" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 657 ($@51)

    $@51  go to state 545


State 374

  649 type_declaration_no_options: "smart_ptr" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 647 ($@45)

    $@45  go to state 546


State 375

  617 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 547


State 376

  626 bitfield_type_declaration: "bitfield" '<' . $@43 bitfield_bits '>' $@44

    $default  reduce using rule 624 ($@43)

    $@43  go to state 548


State 377

  663 type_declaration_no_options: "block" '<' . $@53 type_declaration '>' $@54
  666                            | "block" '<' . $@55 optional_function_argument_list optional_function_type '>' $@56

    ':'       reduce using rule 664 ($@55)
    '>'       reduce using rule 664 ($@55)
    '('       reduce using rule 664 ($@55)
    $default  reduce using rule 661 ($@53)

    $@53  go to state 549
    $@55  go to state 550


State 378

  670 type_declaration_no_options: "function" '<' . $@57 type_declaration '>' $@58
  673                            | "function" '<' . $@59 optional_function_argument_list optional_function_type '>' $@60

    ':'       reduce using rule 671 ($@59)
    '>'       reduce using rule 671 ($@59)
    '('       reduce using rule 671 ($@59)
    $default  reduce using rule 668 ($@57)

    $@57  go to state 551
    $@59  go to state 552


State 379

  677 type_declaration_no_options: "lambda" '<' . $@61 type_declaration '>' $@62
  680                            | "lambda" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 678 ($@63)
    '>'       reduce using rule 678 ($@63)
    '('       reduce using rule 678 ($@63)
    $default  reduce using rule 675 ($@61)

    $@61  go to state 553
    $@63  go to state 554


State 380

  683 type_declaration_no_options: "tuple" '<' . $@65 tuple_type_list '>' $@66

    $default  reduce using rule 681 ($@65)

    $@65  go to state 555


State 381

  686 type_declaration_no_options: "variant" '<' . $@67 variant_type_list '>' $@68

    $default  reduce using rule 684 ($@67)

    $@67  go to state 556


State 382

  618 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 557
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 383

  637 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 637 (type_declaration_no_options)


State 384

  642 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 642 (type_declaration_no_options)


State 385

  636 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 636 (type_declaration_no_options)


State 386

  644 type_declaration_no_options: type_declaration_no_options "==" . "const"
  645                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 558
    '&'      shift, and go to state 559


State 387

  650 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 650 (type_declaration_no_options)


State 388

  646 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 646 (type_declaration_no_options)


State 389

  639 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 639 (type_declaration_no_options)


State 390

  635 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  638                            | type_declaration_no_options '-' . "const"
  640                            | type_declaration_no_options '-' . '&'
  643                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 560
    '&'      shift, and go to state 561
    '['      shift, and go to state 562
    '#'      shift, and go to state 563


State 391

  633 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  634                            | type_declaration_no_options '[' . ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    ']'                               shift, and go to state 564
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 565
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 392

  641 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 641 (type_declaration_no_options)


State 393

  688 type_declaration: type_declaration '|' . type_declaration_no_options
  689                 | type_declaration '|' . '#'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55
    '#'          shift, and go to state 566

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 567


State 394

  622 bitfield_alias_bits: bitfield_alias_bits . ';'
  623                    | bitfield_alias_bits . "name" ';'
  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits . $@76 '}'

    "name"  shift, and go to state 568
    ';'     shift, and go to state 569

    $default  reduce using rule 698 ($@76)

    $@76  go to state 570


State 395

  504 variant_alias_type_list: variant_alias_type_list . ';'
  505                        | variant_alias_type_list . variant_type ';'
  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list . $@72 '}'

    "name"  shift, and go to state 571
    ';'     shift, and go to state 572

    $default  reduce using rule 693 ($@72)

    variant_type  go to state 573
    $@72          go to state 574


State 396

  180 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 180 (function_name)


State 397

  170 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 170 (function_name)


State 398

  493 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 575
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 399

  492 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_declaration         go to state 576
    variable_name_with_pos_list  go to state 403


State 400

  578 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 577


State 401

  577 variable_name_with_pos_list: "name" .
  579                            | "name" . "aka" "name"

    "aka"  shift, and go to state 578

    $default  reduce using rule 577 (variable_name_with_pos_list)


State 402

  491 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 491 (function_argument_declaration)


State 403

  508 variable_declaration: variable_name_with_pos_list .
  509                     | variable_name_with_pos_list . '&'
  510                     | variable_name_with_pos_list . ':' type_declaration
  511                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  512                     | variable_name_with_pos_list . copy_or_move expr
  513                     | variable_name_with_pos_list . copy_or_move expr_pipe
  580 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  581                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 579
    ','   shift, and go to state 580
    '='   shift, and go to state 581
    ':'   shift, and go to state 582
    '&'   shift, and go to state 583

    $default  reduce using rule 508 (variable_declaration)

    copy_or_move  go to state 584


State 404

  118 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 118 (optional_function_argument_list)


State 405

  495 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 350
    "[["  shift, and go to state 211

    $default  reduce using rule 470 (optional_field_annotation)

    optional_field_annotation      go to state 352
    function_argument_declaration  go to state 585


State 406

  120 optional_function_type: ':' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 120 (optional_function_type)


State 407

  238 expressions: expressions error .

    $default  reduce using rule 238 (expressions)


State 408

   75 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 586
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 409

   60 if_or_static_if: "if" .

    $default  reduce using rule 60 (if_or_static_if)


State 410

   61 if_or_static_if: "static_if" .

    $default  reduce using rule 61 (if_or_static_if)


State 411

   73 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_name_with_pos_list  go to state 587


State 412

  373 expr: "true" .

    $default  reduce using rule 373 (expr)


State 413

  374 expr: "false" .

    $default  reduce using rule 374 (expr)


State 414

  256 expr_new: "new" . new_type_declaration
  257         | "new" . new_type_declaration '(' ')'
  258         | "new" . new_type_declaration '(' expr_list ')'
  259         | "new" . make_decl

    "array"        shift, and go to state 417
    "table"        shift, and go to state 422
    "fixed_array"  shift, and go to state 436
    "tuple"        shift, and go to state 438
    "::"           shift, and go to state 54
    "[["           shift, and go to state 453
    "[{"           shift, and go to state 454
    "{{"           shift, and go to state 455
    "name"         shift, and go to state 55
    '<'            shift, and go to state 588

    name_in_namespace           go to state 334
    new_type_declaration        go to state 589
    structure_type_declaration  go to state 590
    make_decl                   go to state 591
    make_struct_decl            go to state 520
    make_tuple_call             go to state 521
    make_dim_decl               go to state 522
    make_table_decl             go to state 523
    array_comprehension         go to state 524


State 415

  296 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  297               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  298               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 592


State 416

  295 expr_type_decl: "type" . '<' $@16 type_declaration '>' $@17

    '<'  shift, and go to state 593


State 417

  745 make_dim_decl: "array" . '(' expr_list ')'
  748              | "array" . '<' $@77 type_declaration_no_options '>' $@78 '(' expr_list ')'

    '<'  shift, and go to state 594
    '('  shift, and go to state 595


State 418

  262 expression_return_no_pipe: "return" .
  263                          | "return" . expr_list
  264                          | "return" . "<-" expr_list
  266 expression_return: "return" . expr_pipe
  267                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 596
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    $default  reduce using rule 262 (expression_return_no_pipe)

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    expr_pipe               go to state 597
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 598
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_assign             go to state 599
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 600
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 419

  367 expr: "null" .

    $default  reduce using rule 367 (expr)


State 420

  260 expression_break: "break" .

    $default  reduce using rule 260 (expression_break)


State 421

  273 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 601


State 422

  758 make_table_decl: "table" . '(' expr_map_tuple_list ')'
  759                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  760                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    '<'  shift, and go to state 602
    '('  shift, and go to state 603


State 423

  250 expression_delete: "delete" . expr
  251                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "explicit"                        shift, and go to state 604
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 605
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 424

  420 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 606


State 425

   76 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 607
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 426

   78 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 608


State 427

  286 expr_cast: "cast" . '<' $@10 type_declaration_no_options '>' $@11 expr

    '<'  shift, and go to state 609


State 428

  289 expr_cast: "upcast" . '<' $@12 type_declaration_no_options '>' $@13 expr

    '<'  shift, and go to state 610


State 429

  421 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 611


State 430

  261 expression_continue: "continue" .

    $default  reduce using rule 261 (expression_continue)


State 431

  235 expression_any: "pass" . ';'

    ';'  shift, and go to state 612


State 432

  292 expr_cast: "reinterpret" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 613


State 433

   52 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 614


State 434

   53 expression_goto: "goto" . "label" "integer constant"
   54                | "goto" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "label"                           shift, and go to state 615
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 616
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 435

   74 expression_unsafe: "unsafe" . expression_block
  452 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 617
    '{'  shift, and go to state 276

    expression_block  go to state 618


State 436

  749 make_dim_decl: "fixed_array" . '(' expr_list ')'
  752              | "fixed_array" . '<' $@79 type_declaration_no_options '>' $@80 '(' expr_list ')'

    '<'  shift, and go to state 619
    '('  shift, and go to state 620


State 437

  608 basic_type_declaration: "bitfield" .

    $default  reduce using rule 608 (basic_type_declaration)


State 438

  740 make_tuple_call: "tuple" . '(' expr_list ')'

    '('  shift, and go to state 621


State 439

  422 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  423     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 622


State 440

  268 expression_yield_no_pipe: "yield" . expr
  269                         | "yield" . "<-" expr
  271 expression_yield: "yield" . expr_pipe
  272                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 623
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    expr_pipe               go to state 624
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_assign             go to state 599
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 625
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 441

  403 expr: "++" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 626
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 442

  404 expr: "--" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 627
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 443

  246 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 629


State 444

  244 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 630


State 445

  245 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 631


State 446

  454 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 632


State 447

  455 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 633


State 448

  456 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 634


State 449

  457 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 635


State 450

  458 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 636


State 451

  460 expr_mtag: "$c" . '(' expr ')' '(' ')'
  461          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 637


State 452

  459 expr_mtag: "..." .

    $default  reduce using rule 459 (expr_mtag)


State 453

  729 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  730                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  731                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  732                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  743 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  763 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 638
    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 639


State 454

  733 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  734                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  744 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  764 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 640
    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 641


State 455

  757 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 642
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_map_tuple          go to state 643
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table              go to state 644
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 456

  317 expr_numeric_const: "integer constant" .

    $default  reduce using rule 317 (expr_numeric_const)


State 457

  319 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 319 (expr_numeric_const)


State 458

  318 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 318 (expr_numeric_const)


State 459

  320 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 320 (expr_numeric_const)


State 460

  321 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 321 (expr_numeric_const)


State 461

  322 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 322 (expr_numeric_const)


State 462

  323 expr_numeric_const: "double constant" .

    $default  reduce using rule 323 (expr_numeric_const)


State 463

  239 expr_keyword: "keyword" . expr expression_block
  242 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '<'                               shift, and go to state 645
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 646
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 464

   30 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 27 (string_builder_body)

    string_builder_body  go to state 647


State 465

  380 expr: '-' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 648
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 466

  379 expr: '+' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 649
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 467

  419 expr: '*' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 650
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 468

  378 expr: '~' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 651
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 469

  377 expr: '!' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 652
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 470

  407 expr: '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 653
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 471

  304 block_or_lambda: '$' .

    $default  reduce using rule 304 (block_or_lambda)


State 472

  305 block_or_lambda: '@' .
  306                | '@' . '@'
  355 func_addr_expr: '@' . '@' func_addr_name
  358               | '@' . '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  361               | '@' . '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  469 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 654

    $default  reduce using rule 305 (block_or_lambda)


State 473

  215 expression_any: ';' .

    $default  reduce using rule 215 (expression_any)


State 474

  213 expression_block: '{' expressions '}' .
  214                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 655

    $default  reduce using rule 213 (expression_block)


State 475

  371 expr: string_builder .

    $default  reduce using rule 371 (expr)


State 476

  370 expr: expr_reader .

    $default  reduce using rule 370 (expr)


State 477

  233 expression_any: expression_label . ';'

    ';'  shift, and go to state 656


State 478

  234 expression_any: expression_goto . ';'

    ';'  shift, and go to state 657


State 479

   70 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 658
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 480

   72 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 659


State 481

  231 expression_any: expression_if_then_else .

    $default  reduce using rule 231 (expression_any)


State 482

  226 expression_any: expression_for_loop .

    $default  reduce using rule 226 (expression_any)


State 483

  223 expression_any: expression_unsafe .

    $default  reduce using rule 223 (expression_any)


State 484

  222 expression_any: expression_while_loop .

    $default  reduce using rule 222 (expression_any)


State 485

  224 expression_any: expression_with .

    $default  reduce using rule 224 (expression_any)


State 486

  225 expression_any: expression_with_alias .

    $default  reduce using rule 225 (expression_any)


State 487

  315 expr_block: expression_block .

    $default  reduce using rule 315 (expr_block)


State 488

  237 expressions: expressions expression_any .

    $default  reduce using rule 237 (expressions)


State 489

  217 expression_any: expr_keyword .

    $default  reduce using rule 217 (expression_any)


State 490

  453 expr: expression_keyword .

    $default  reduce using rule 453 (expr)


State 491

  216 expression_any: expr_pipe .

    $default  reduce using rule 216 (expression_any)


State 492

  349 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  350                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  368 expr: name_in_namespace .
  415     | name_in_namespace . '(' ')'
  416     | name_in_namespace . '(' expr_list ')'
  451     | name_in_namespace . "name"

    "name"  shift, and go to state 660
    '('     shift, and go to state 661

    "name"    [reduce using rule 368 (expr)]
    '('       [reduce using rule 368 (expr)]
    $default  reduce using rule 368 (expr)


State 493

  220 expression_any: expression_delete . ';'

    ';'  shift, and go to state 662


State 494

  444 expr: expr_new .

    $default  reduce using rule 444 (expr)


State 495

   68 expression_if_one_liner: expression_break .
  227 expression_any: expression_break . ';'

    ';'  shift, and go to state 663

    $default  reduce using rule 68 (expression_if_one_liner)


State 496

   69 expression_if_one_liner: expression_continue .
  228 expression_any: expression_continue . ';'

    ';'  shift, and go to state 664

    $default  reduce using rule 69 (expression_if_one_liner)


State 497

   66 expression_if_one_liner: expression_return_no_pipe .
  265 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 665

    $default  reduce using rule 66 (expression_if_one_liner)


State 498

  229 expression_any: expression_return .

    $default  reduce using rule 229 (expression_any)


State 499

   67 expression_if_one_liner: expression_yield_no_pipe .
  270 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 666

    $default  reduce using rule 67 (expression_if_one_liner)


State 500

  230 expression_any: expression_yield .

    $default  reduce using rule 230 (expression_any)


State 501

  232 expression_any: expression_try_catch .

    $default  reduce using rule 232 (expression_any)


State 502

  282 expression_let: kwd_let . optional_in_scope let_variable_declaration
  283               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 667

    $default  reduce using rule 277 (optional_in_scope)

    optional_in_scope  go to state 668


State 503

  221 expression_any: expression_let .

    $default  reduce using rule 221 (expression_any)


State 504

  443 expr: expr_cast .

    $default  reduce using rule 443 (expr)


State 505

  442 expr: expr_type_decl .

    $default  reduce using rule 442 (expr)


State 506

  441 expr: expr_type_info .

    $default  reduce using rule 441 (expr)


State 507

  316 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 13

    $default  reduce using rule 114 (optional_annotation_list)

    optional_annotation_list  go to state 669


State 508

  447 expr: expr_block .

    $default  reduce using rule 447 (expr)


State 509

  369 expr: expr_numeric_const .

    $default  reduce using rule 369 (expr)


State 510

  219 expression_any: expr_assign . ';'
  243 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 670
    ';'    shift, and go to state 671


State 511

  218 expression_any: expr_assign_pipe .

    $default  reduce using rule 218 (expression_any)


State 512

  446 expr: expr_named_call .

    $default  reduce using rule 446 (expr)


State 513

  445 expr: expr_method_call .

    $default  reduce using rule 445 (expr)


State 514

  414 expr: func_addr_expr .

    $default  reduce using rule 414 (expr)


State 515

  375 expr: expr_field .

    $default  reduce using rule 375 (expr)


State 516

   65 expression_if_one_liner: expr .
  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  343 expr_assign_pipe: expr . '=' "@ <|" expr_block
  344                 | expr . '=' "@@ <|" expr_block
  345                 | expr . '=' "$ <|" expr_block
  346                 | expr . "<-" "@ <|" expr_block
  347                 | expr . "<-" "@@ <|" expr_block
  348                 | expr . "<-" "$ <|" expr_block
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 672
    "as"    shift, and go to state 673
    "+="    shift, and go to state 674
    "-="    shift, and go to state 675
    "/="    shift, and go to state 676
    "*="    shift, and go to state 677
    "%="    shift, and go to state 678
    "&="    shift, and go to state 679
    "|="    shift, and go to state 680
    "^="    shift, and go to state 681
    "<<"    shift, and go to state 682
    ">>"    shift, and go to state 683
    "++"    shift, and go to state 684
    "--"    shift, and go to state 685
    "<="    shift, and go to state 686
    "<<="   shift, and go to state 687
    ">>="   shift, and go to state 688
    ">="    shift, and go to state 689
    "=="    shift, and go to state 690
    "!="    shift, and go to state 691
    "->"    shift, and go to state 692
    "<-"    shift, and go to state 693
    "??"    shift, and go to state 694
    "?."    shift, and go to state 695
    "?["    shift, and go to state 696
    "<|"    shift, and go to state 697
    "|>"    shift, and go to state 698
    ":="    shift, and go to state 699
    "<<<"   shift, and go to state 700
    ">>>"   shift, and go to state 701
    "<<<="  shift, and go to state 702
    ">>>="  shift, and go to state 703
    "&&"    shift, and go to state 704
    "||"    shift, and go to state 705
    "^^"    shift, and go to state 706
    "&&="   shift, and go to state 707
    "||="   shift, and go to state 708
    "^^="   shift, and go to state 709
    ".."    shift, and go to state 710
    '='     shift, and go to state 711
    '?'     shift, and go to state 712
    '|'     shift, and go to state 713
    '^'     shift, and go to state 714
    '&'     shift, and go to state 715
    '<'     shift, and go to state 716
    '>'     shift, and go to state 717
    '-'     shift, and go to state 718
    '+'     shift, and go to state 719
    '*'     shift, and go to state 720
    '/'     shift, and go to state 721
    '%'     shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724

    "if"      reduce using rule 65 (expression_if_one_liner)
    $default  reduce using rule 324 (expr_assign)


State 517

  376 expr: expr_mtag .

    $default  reduce using rule 376 (expr)


State 518

  417 expr: basic_type_declaration . '(' ')'
  418     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 725


State 519

  372 expr: make_decl .

    $default  reduce using rule 372 (expr)


State 520

  700 make_decl: make_struct_decl .

    $default  reduce using rule 700 (make_decl)


State 521

  704 make_decl: make_tuple_call .

    $default  reduce using rule 704 (make_decl)


State 522

  701 make_decl: make_dim_decl .

    $default  reduce using rule 701 (make_decl)


State 523

  702 make_decl: make_table_decl .

    $default  reduce using rule 702 (make_decl)


State 524

  703 make_decl: array_comprehension .

    $default  reduce using rule 703 (make_decl)


State 525

  563 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 . enum_list $@40 '}'

    $default  reduce using rule 540 (enum_list)

    enum_list  go to state 726


State 526

  542 enum_list: enum_list "name" . ';'
  543          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 727
    ';'  shift, and go to state 728


State 527

  541 enum_list: enum_list ';' .

    $default  reduce using rule 541 (enum_list)


State 528

  560 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 . '}'

    '}'  shift, and go to state 729


State 529

  565 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 565 (optional_structure_parent)


State 530

  485 struct_variable_declaration_list: struct_variable_declaration_list . $@30 structure_variable_declaration ';'
  487                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  489                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  490                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  576 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 730
    '}'  shift, and go to state 731

    "def"     reduce using rule 114 (optional_annotation_list)
    $default  reduce using rule 484 ($@30)

    optional_annotation_list  go to state 732
    $@30                      go to state 733


State 531

  531 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 531 (global_variable_declaration_list)


State 532

  471 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 471 (optional_field_annotation)


State 533

  452 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 617


State 534

  242 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    '<'  shift, and go to state 645


State 535

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  520 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 734


State 536

  521 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 521 (let_variable_name_with_pos_list)


State 537

  522 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  523                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 735

    $default  reduce using rule 522 (let_variable_name_with_pos_list)


State 538

  524 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  525                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  526                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "<-"        shift, and go to state 539
    "??"        shift, and go to state 387
    ":="        shift, and go to state 540
    '='         shift, and go to state 541
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    ';'         shift, and go to state 736
    '#'         shift, and go to state 392

    copy_or_move_or_clone  go to state 737


State 539

  515 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 515 (copy_or_move_or_clone)


State 540

  516 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 516 (copy_or_move_or_clone)


State 541

  514 copy_or_move_or_clone: '=' .

    $default  reduce using rule 514 (copy_or_move_or_clone)


State 542

  527 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  528                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    expr_pipe               go to state 738
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_assign             go to state 599
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 739
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 543

  653 type_declaration_no_options: "array" '<' $@47 . type_declaration '>' $@48

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 740


State 544

  656 type_declaration_no_options: "table" '<' $@49 . table_type_pair '>' $@50

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    table_type_pair              go to state 741
    type_declaration_no_options  go to state 339
    type_declaration             go to state 742


State 545

  659 type_declaration_no_options: "iterator" '<' $@51 . type_declaration '>' $@52

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 743


State 546

  649 type_declaration_no_options: "smart_ptr" '<' $@45 . type_declaration '>' $@46

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 744


State 547

  617 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 745


State 548

  626 bitfield_type_declaration: "bitfield" '<' $@43 . bitfield_bits '>' $@44

    "name"  shift, and go to state 746

    bitfield_bits  go to state 747


State 549

  663 type_declaration_no_options: "block" '<' $@53 . type_declaration '>' $@54

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 748


State 550

  666 type_declaration_no_options: "block" '<' $@55 . optional_function_argument_list optional_function_type '>' $@56

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 749


State 551

  670 type_declaration_no_options: "function" '<' $@57 . type_declaration '>' $@58

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 750


State 552

  673 type_declaration_no_options: "function" '<' $@59 . optional_function_argument_list optional_function_type '>' $@60

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 751


State 553

  677 type_declaration_no_options: "lambda" '<' $@61 . type_declaration '>' $@62

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 752


State 554

  680 type_declaration_no_options: "lambda" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 753


State 555

  683 type_declaration_no_options: "tuple" '<' $@65 . tuple_type_list '>' $@66

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 754

    name_in_namespace            go to state 334
    tuple_type                   go to state 755
    tuple_type_list              go to state 756
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 757


State 556

  686 type_declaration_no_options: "variant" '<' $@67 . variant_type_list '>' $@68

    "name"  shift, and go to state 571

    variant_type       go to state 758
    variant_type_list  go to state 759


State 557

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  618 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 760


State 558

  644 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 644 (type_declaration_no_options)


State 559

  645 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 645 (type_declaration_no_options)


State 560

  638 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 638 (type_declaration_no_options)


State 561

  640 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 640 (type_declaration_no_options)


State 562

  635 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 761


State 563

  643 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 643 (type_declaration_no_options)


State 564

  634 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 634 (type_declaration_no_options)


State 565

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  633 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ']'    shift, and go to state 762


State 566

  689 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 689 (type_declaration)


State 567

  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"
  688 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392

    $default  reduce using rule 688 (type_declaration)


State 568

  623 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 763


State 569

  622 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 622 (bitfield_alias_bits)


State 570

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 . '}'

    '}'  shift, and go to state 764


State 571

  500 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 765


State 572

  504 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 504 (variant_alias_type_list)


State 573

  505 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 766


State 574

  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 . '}'

    '}'  shift, and go to state 767


State 575

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  493 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 768


State 576

  492 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 492 (function_argument_declaration)


State 577

  578 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 769
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 578

  579 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 770


State 579

  507 copy_or_move: "<-" .

    $default  reduce using rule 507 (copy_or_move)


State 580

  580 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  581                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 771


State 581

  506 copy_or_move: '=' .

    $default  reduce using rule 506 (copy_or_move)


State 582

  510 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  511                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 772


State 583

  509 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 509 (variable_declaration)


State 584

  512 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  513                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    expr_pipe               go to state 773
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_assign             go to state 599
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 774
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 585

  495 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 495 (function_argument_list)


State 586

   75 expression_while_loop: "while" expr . expression_block
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    '{'    shift, and go to state 276

    expression_block  go to state 775


State 587

   73 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  580 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  581                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 776
    ','   shift, and go to state 580


State 588

  254 new_type_declaration: '<' . $@8 type_declaration '>' $@9

    $default  reduce using rule 252 ($@8)

    $@8  go to state 777


State 589

  256 expr_new: "new" new_type_declaration .
  257         | "new" new_type_declaration . '(' ')'
  258         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 778

    '('       [reduce using rule 256 (expr_new)]
    $default  reduce using rule 256 (expr_new)


State 590

  255 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 255 (new_type_declaration)


State 591

  259 expr_new: "new" make_decl .

    $default  reduce using rule 259 (expr_new)


State 592

  296 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  297               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  298               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 54
    "name"  shift, and go to state 55

    name_in_namespace  go to state 779


State 593

  295 expr_type_decl: "type" '<' . $@16 type_declaration '>' $@17

    $default  reduce using rule 293 ($@16)

    $@16  go to state 780


State 594

  748 make_dim_decl: "array" '<' . $@77 type_declaration_no_options '>' $@78 '(' expr_list ')'

    $default  reduce using rule 746 ($@77)

    $@77  go to state 781


State 595

  745 make_dim_decl: "array" '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 782
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 596

  264 expression_return_no_pipe: "return" "<-" . expr_list
  267 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    expr_pipe               go to state 784
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 785
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_assign             go to state 599
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 600
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 597

  266 expression_return: "return" expr_pipe .

    $default  reduce using rule 266 (expression_return)


State 598

  263 expression_return_no_pipe: "return" expr_list .
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 786

    $default  reduce using rule 263 (expression_return_no_pipe)


State 599

  243 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 670


State 600

  299 expr_list: expr .
  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 672
    "as"    shift, and go to state 673
    "+="    shift, and go to state 674
    "-="    shift, and go to state 675
    "/="    shift, and go to state 676
    "*="    shift, and go to state 677
    "%="    shift, and go to state 678
    "&="    shift, and go to state 679
    "|="    shift, and go to state 680
    "^="    shift, and go to state 681
    "<<"    shift, and go to state 682
    ">>"    shift, and go to state 683
    "++"    shift, and go to state 684
    "--"    shift, and go to state 685
    "<="    shift, and go to state 686
    "<<="   shift, and go to state 687
    ">>="   shift, and go to state 688
    ">="    shift, and go to state 689
    "=="    shift, and go to state 690
    "!="    shift, and go to state 691
    "->"    shift, and go to state 692
    "<-"    shift, and go to state 787
    "??"    shift, and go to state 694
    "?."    shift, and go to state 695
    "?["    shift, and go to state 696
    "<|"    shift, and go to state 697
    "|>"    shift, and go to state 698
    ":="    shift, and go to state 699
    "<<<"   shift, and go to state 700
    ">>>"   shift, and go to state 701
    "<<<="  shift, and go to state 702
    ">>>="  shift, and go to state 703
    "&&"    shift, and go to state 704
    "||"    shift, and go to state 705
    "^^"    shift, and go to state 706
    "&&="   shift, and go to state 707
    "||="   shift, and go to state 708
    "^^="   shift, and go to state 709
    ".."    shift, and go to state 710
    '='     shift, and go to state 788
    '?'     shift, and go to state 712
    '|'     shift, and go to state 713
    '^'     shift, and go to state 714
    '&'     shift, and go to state 715
    '<'     shift, and go to state 716
    '>'     shift, and go to state 717
    '-'     shift, and go to state 718
    '+'     shift, and go to state 719
    '*'     shift, and go to state 720
    '/'     shift, and go to state 721
    '%'     shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724

    " <|"     reduce using rule 324 (expr_assign)
    $default  reduce using rule 299 (expr_list)


State 601

  273 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 789


State 602

  759 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  760                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 790


State 603

  758 make_table_decl: "table" '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 642
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_map_tuple          go to state 791
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    expr_map_tuple_list     go to state 792
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 604

  251 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 793
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 605

  250 expression_delete: "delete" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 250 (expression_delete)


State 606

  420 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 794
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 607

   76 expression_with: "with" expr . expression_block
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    '{'    shift, and go to state 276

    expression_block  go to state 795


State 608

   78 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 796


State 609

  286 expr_cast: "cast" '<' . $@10 type_declaration_no_options '>' $@11 expr

    $default  reduce using rule 284 ($@10)

    $@10  go to state 797


State 610

  289 expr_cast: "upcast" '<' . $@12 type_declaration_no_options '>' $@13 expr

    $default  reduce using rule 287 ($@12)

    $@12  go to state 798


State 611

  421 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 799
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 612

  235 expression_any: "pass" ';' .

    $default  reduce using rule 235 (expression_any)


State 613

  292 expr_cast: "reinterpret" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 290 ($@14)

    $@14  go to state 800


State 614

   52 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 801


State 615

   53 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 802


State 616

   54 expression_goto: "goto" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 54 (expression_goto)


State 617

  452 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 803
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 618

   74 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 74 (expression_unsafe)


State 619

  752 make_dim_decl: "fixed_array" '<' . $@79 type_declaration_no_options '>' $@80 '(' expr_list ')'

    $default  reduce using rule 750 ($@79)

    $@79  go to state 804


State 620

  749 make_dim_decl: "fixed_array" '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 805
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 621

  740 make_tuple_call: "tuple" '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 806
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 622

  422 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  423     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 807


State 623

  269 expression_yield_no_pipe: "yield" "<-" . expr
  272 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    expr_pipe               go to state 808
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_assign             go to state 599
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 809
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 624

  271 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 271 (expression_yield)


State 625

  268 expression_yield_no_pipe: "yield" expr .
  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 672
    "as"    shift, and go to state 673
    "+="    shift, and go to state 674
    "-="    shift, and go to state 675
    "/="    shift, and go to state 676
    "*="    shift, and go to state 677
    "%="    shift, and go to state 678
    "&="    shift, and go to state 679
    "|="    shift, and go to state 680
    "^="    shift, and go to state 681
    "<<"    shift, and go to state 682
    ">>"    shift, and go to state 683
    "++"    shift, and go to state 684
    "--"    shift, and go to state 685
    "<="    shift, and go to state 686
    "<<="   shift, and go to state 687
    ">>="   shift, and go to state 688
    ">="    shift, and go to state 689
    "=="    shift, and go to state 690
    "!="    shift, and go to state 691
    "->"    shift, and go to state 692
    "<-"    shift, and go to state 787
    "??"    shift, and go to state 694
    "?."    shift, and go to state 695
    "?["    shift, and go to state 696
    "<|"    shift, and go to state 697
    "|>"    shift, and go to state 698
    ":="    shift, and go to state 699
    "<<<"   shift, and go to state 700
    ">>>"   shift, and go to state 701
    "<<<="  shift, and go to state 702
    ">>>="  shift, and go to state 703
    "&&"    shift, and go to state 704
    "||"    shift, and go to state 705
    "^^"    shift, and go to state 706
    "&&="   shift, and go to state 707
    "||="   shift, and go to state 708
    "^^="   shift, and go to state 709
    ".."    shift, and go to state 710
    '='     shift, and go to state 788
    '?'     shift, and go to state 712
    '|'     shift, and go to state 713
    '^'     shift, and go to state 714
    '&'     shift, and go to state 715
    '<'     shift, and go to state 716
    '>'     shift, and go to state 717
    '-'     shift, and go to state 718
    '+'     shift, and go to state 719
    '*'     shift, and go to state 720
    '/'     shift, and go to state 721
    '%'     shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724

    " <|"     reduce using rule 324 (expr_assign)
    $default  reduce using rule 268 (expression_yield_no_pipe)


State 626

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  403     | "++" expr .
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 403 (expr)


State 627

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  404     | "--" expr .
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 404 (expr)


State 628

  305 block_or_lambda: '@' .
  306                | '@' . '@'

    '@'  shift, and go to state 810

    $default  reduce using rule 305 (block_or_lambda)


State 629

  246 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 246 (expr_pipe)


State 630

  244 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 244 (expr_pipe)


State 631

  245 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 245 (expr_pipe)


State 632

  454 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 811
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 633

  455 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 812
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 634

  456 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 813
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 635

  457 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 814
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 636

  458 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 815
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 637

  460 expr_mtag: "$c" '(' . expr ')' '(' ')'
  461          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 816
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 638

  763 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_name_with_pos_list  go to state 817


State 639

  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"
  729 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  730                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  731                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  732                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  743 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "const"                           shift, and go to state 383
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "where"                           shift, and go to state 818
    "reinterpret"                     shift, and go to state 432
    "implicit"                        shift, and go to state 384
    "explicit"                        shift, and go to state 385
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "=="                              shift, and go to state 386
    "??"                              shift, and go to state 387
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "$f"                              shift, and go to state 819
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 820
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '?'                               shift, and go to state 388
    '&'                               shift, and go to state 389
    '-'                               shift, and go to state 821
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '['                               shift, and go to state 391
    '('                               shift, and go to state 822
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276
    '#'                               shift, and go to state 392

    $default  reduce using rule 715 (optional_block)

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 823
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_fields      go to state 824
    make_struct_dim         go to state 825
    optional_block          go to state 826
    make_struct_decl        go to state 520
    make_tuple              go to state 827
    make_tuple_call         go to state 521
    make_dim                go to state 828
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 640

  764 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_name_with_pos_list  go to state 829


State 641

  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"
  733 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  734                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  744 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "const"                           shift, and go to state 383
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "implicit"                        shift, and go to state 384
    "explicit"                        shift, and go to state 385
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "=="                              shift, and go to state 386
    "??"                              shift, and go to state 387
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "$f"                              shift, and go to state 819
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 820
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '?'                               shift, and go to state 388
    '&'                               shift, and go to state 389
    '-'                               shift, and go to state 821
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '['                               shift, and go to state 391
    '('                               shift, and go to state 830
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276
    '#'                               shift, and go to state 392

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 823
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_fields      go to state 824
    make_struct_dim         go to state 831
    make_struct_decl        go to state 520
    make_tuple              go to state 827
    make_tuple_call         go to state 521
    make_dim                go to state 832
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 642

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  738 make_map_tuple: expr . "=>" expr
  739               | expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "=>"   shift, and go to state 833
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 739 (make_map_tuple)


State 643

  753 make_table: make_map_tuple .

    $default  reduce using rule 753 (make_table)


State 644

  754 make_table: make_table . ';' make_map_tuple
  757 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 834
    ';'    shift, and go to state 835
    '}'    shift, and go to state 836

    optional_trailing_semicolon_cur_cur  go to state 837


State 645

  242 expression_keyword: "keyword" '<' . $@6 type_declaration_no_options '>' $@7 expr

    $default  reduce using rule 240 ($@6)

    $@6  go to state 838


State 646

  239 expr_keyword: "keyword" expr . expression_block
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    '{'    shift, and go to state 276

    expression_block  go to state 839


State 647

   28 string_builder_body: string_builder_body . character_sequence
   29                    | string_builder_body . "{" expr "}"
   30 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 156
    STRING_CHARACTER_ESC  shift, and go to state 157
    "end of the string"   shift, and go to state 840
    "{"                   shift, and go to state 841

    character_sequence  go to state 842


State 648

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  380 expr: '-' expr .
  381     | expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 380 (expr)


State 649

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  379 expr: '+' expr .
  381     | expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 379 (expr)


State 650

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  419     | '*' expr .
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 419 (expr)


State 651

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  378 expr: '~' expr .
  381     | expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 378 (expr)


State 652

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  377 expr: '!' expr .
  381     | expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 377 (expr)


State 653

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  407     | '(' expr . ')'
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 843


State 654

  306 block_or_lambda: '@' '@' .
  355 func_addr_expr: '@' '@' . func_addr_name
  358               | '@' '@' . '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  361               | '@' '@' . '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  469 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 54
    "$i"    shift, and go to state 844
    "$c"    shift, and go to state 845
    "name"  shift, and go to state 55
    '<'     shift, and go to state 846

    $default  reduce using rule 306 (block_or_lambda)

    name_in_namespace  go to state 847
    func_addr_name     go to state 848


State 655

  214 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 849


State 656

  233 expression_any: expression_label ';' .

    $default  reduce using rule 233 (expression_any)


State 657

  234 expression_any: expression_goto ';' .

    $default  reduce using rule 234 (expression_any)


State 658

   70 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    '{'    shift, and go to state 276

    expression_block  go to state 850


State 659

   72 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 71 ($@3)

    $@3  go to state 851


State 660

  451 expr: name_in_namespace "name" .

    $default  reduce using rule 451 (expr)


State 661

  349 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  350                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  415 expr: name_in_namespace '(' . ')'
  416     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '['                               shift, and go to state 852
    '('                               shift, and go to state 470
    ')'                               shift, and go to state 853
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 854
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 662

  220 expression_any: expression_delete ';' .

    $default  reduce using rule 220 (expression_any)


State 663

  227 expression_any: expression_break ';' .

    $default  reduce using rule 227 (expression_any)


State 664

  228 expression_any: expression_continue ';' .

    $default  reduce using rule 228 (expression_any)


State 665

  265 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 265 (expression_return)


State 666

  270 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 270 (expression_yield)


State 667

  276 optional_in_scope: "inscope" .

    $default  reduce using rule 276 (optional_in_scope)


State 668

  282 expression_let: kwd_let optional_in_scope . let_variable_declaration
  283               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 291
    "[["    shift, and go to state 855
    "name"  shift, and go to state 292

    tuple_expansion_variable_declaration  go to state 856
    let_variable_name_with_pos_list       go to state 293
    let_variable_declaration              go to state 857


State 669

  316 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 858

    $default  reduce using rule 313 (optional_capture_list)

    optional_capture_list  go to state 859


State 670

  243 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 860


State 671

  219 expression_any: expr_assign ';' .

    $default  reduce using rule 219 (expression_any)


State 672

  428 expr: expr "is" . "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr "is" . basic_type_declaration
  430     | expr "is" . "name"
  468 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 861
    "bool"      shift, and go to state 300
    "void"      shift, and go to state 301
    "string"    shift, and go to state 302
    "int"       shift, and go to state 304
    "int2"      shift, and go to state 305
    "int3"      shift, and go to state 306
    "int4"      shift, and go to state 307
    "uint"      shift, and go to state 308
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 310
    "uint3"     shift, and go to state 311
    "uint4"     shift, and go to state 312
    "float"     shift, and go to state 313
    "float2"    shift, and go to state 314
    "float3"    shift, and go to state 315
    "float4"    shift, and go to state 316
    "range"     shift, and go to state 317
    "urange"    shift, and go to state 318
    "range64"   shift, and go to state 319
    "urange64"  shift, and go to state 320
    "int64"     shift, and go to state 322
    "uint64"    shift, and go to state 323
    "double"    shift, and go to state 324
    "int8"      shift, and go to state 327
    "uint8"     shift, and go to state 328
    "int16"     shift, and go to state 329
    "uint16"    shift, and go to state 330
    "$f"        shift, and go to state 862
    "name"      shift, and go to state 863

    basic_type_declaration  go to state 864


State 673

  431 expr: expr "as" . "name"
  434     | expr "as" . "type" '<' $@26 type_declaration '>' $@27
  435     | expr "as" . basic_type_declaration
  466 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 865
    "bool"      shift, and go to state 300
    "void"      shift, and go to state 301
    "string"    shift, and go to state 302
    "int"       shift, and go to state 304
    "int2"      shift, and go to state 305
    "int3"      shift, and go to state 306
    "int4"      shift, and go to state 307
    "uint"      shift, and go to state 308
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 310
    "uint3"     shift, and go to state 311
    "uint4"     shift, and go to state 312
    "float"     shift, and go to state 313
    "float2"    shift, and go to state 314
    "float3"    shift, and go to state 315
    "float4"    shift, and go to state 316
    "range"     shift, and go to state 317
    "urange"    shift, and go to state 318
    "range64"   shift, and go to state 319
    "urange64"  shift, and go to state 320
    "int64"     shift, and go to state 322
    "uint64"    shift, and go to state 323
    "double"    shift, and go to state 324
    "int8"      shift, and go to state 327
    "uint8"     shift, and go to state 328
    "int16"     shift, and go to state 329
    "uint16"    shift, and go to state 330
    "$f"        shift, and go to state 866
    "name"      shift, and go to state 867

    basic_type_declaration  go to state 868


State 674

  334 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 869
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 675

  335 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 870
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 676

  337 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 871
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 677

  336 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 872
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 678

  338 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 873
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 679

  328 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 874
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 680

  329 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 875
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 681

  330 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 876
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 682

  381 expr: expr "<<" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 877
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 683

  382 expr: expr ">>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 878
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 684

  405 expr: expr "++" .

    $default  reduce using rule 405 (expr)


State 685

  406 expr: expr "--" .

    $default  reduce using rule 406 (expr)


State 686

  394 expr: expr "<=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 879
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 687

  339 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 880
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 688

  340 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 881
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 689

  395 expr: expr ">=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 882
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 690

  392 expr: expr "==" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 883
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 691

  393 expr: expr "!=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 884
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 692

  351 expr_method_call: expr "->" . "name" '(' ')'
  352                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 885


State 693

  326 expr_assign: expr "<-" . expr
  346 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  347                 | expr "<-" . "@@ <|" expr_block
  348                 | expr "<-" . "$ <|" expr_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 886
    "@ <|"                            shift, and go to state 887
    "@@ <|"                           shift, and go to state 888
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 889
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 694

  424 expr: expr "??" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 890
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 695

  412 expr: expr "?." . "name"
  463 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 891
    "name"  shift, and go to state 892


State 696

  410 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 893
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 697

  448 expr: expr "<|" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 894
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 698

  449 expr: expr "|>" . expr
  450     | expr "|>" . basic_type_declaration

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 895
    expr_mtag               go to state 517
    basic_type_declaration  go to state 896
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 699

  327 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 897
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 700

  383 expr: expr "<<<" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 898
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 701

  384 expr: expr ">>>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 899
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 702

  341 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 900
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 703

  342 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 901
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 704

  399 expr: expr "&&" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 902
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 705

  400 expr: expr "||" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 903
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 706

  401 expr: expr "^^" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 904
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 707

  331 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 905
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 708

  332 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 906
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 709

  333 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 907
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 710

  402 expr: expr ".." . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 908
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 711

  325 expr_assign: expr '=' . expr
  343 expr_assign_pipe: expr '=' . "@ <|" expr_block
  344                 | expr '=' . "@@ <|" expr_block
  345                 | expr '=' . "$ <|" expr_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 909
    "@ <|"                            shift, and go to state 910
    "@@ <|"                           shift, and go to state 911
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 912
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 712

  425 expr: expr '?' . expr ':' expr
  436     | expr '?' . "as" "name"
  439     | expr '?' . "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr '?' . "as" basic_type_declaration
  467 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "as"                              shift, and go to state 913
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 914
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 713

  397 expr: expr '|' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 915
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 714

  398 expr: expr '^' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 916
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 715

  396 expr: expr '&' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 917
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 716

  390 expr: expr '<' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 918
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 717

  391 expr: expr '>' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 919
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 718

  386 expr: expr '-' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 920
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 719

  385 expr: expr '+' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 921
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 720

  387 expr: expr '*' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 922
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 721

  388 expr: expr '/' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 923
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 722

  389 expr: expr '%' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 924
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 723

  362 expr_field: expr '.' . "name"
  363           | expr '.' . '.' "name"
  366           | expr '.' . $@22 error $@23
  409 expr: expr '.' . '[' expr ']'
  411     | expr '.' . "?[" expr ']'
  413     | expr '.' . "?." "name"
  462 expr_mtag: expr '.' . "$f" '(' expr ')'
  464          | expr '.' . '.' "$f" '(' expr ')'
  465          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 925
    "?["    shift, and go to state 926
    "$f"    shift, and go to state 927
    "name"  shift, and go to state 928
    '.'     shift, and go to state 929
    '['     shift, and go to state 930

    $default  reduce using rule 364 ($@22)

    $@22  go to state 931


State 724

  408 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 932
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 725

  417 expr: basic_type_declaration '(' . ')'
  418     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    ')'                               shift, and go to state 933
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 934
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 726

  541 enum_list: enum_list . ';'
  542          | enum_list . "name" ';'
  543          | enum_list . "name" '=' expr ';'
  563 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list . $@40 '}'

    "name"  shift, and go to state 526
    ';'     shift, and go to state 527

    $default  reduce using rule 562 ($@40)

    $@40  go to state 935


State 727

  543 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 936
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 728

  542 enum_list: enum_list "name" ';' .

    $default  reduce using rule 542 (enum_list)


State 729

  560 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}' .

    $default  reduce using rule 560 (enum_declaration)


State 730

  115 optional_annotation_list: '[' . annotation_list ']'
  490 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 64
    annotation_list               go to state 937
    name_in_namespace             go to state 66


State 731

  576 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 576 (structure_declaration)


State 732

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  489                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "def"  shift, and go to state 938


State 733

  485 struct_variable_declaration_list: struct_variable_declaration_list $@30 . structure_variable_declaration ';'

    "[["  shift, and go to state 211

    $default  reduce using rule 470 (optional_field_annotation)

    optional_field_annotation       go to state 939
    structure_variable_declaration  go to state 940


State 734

  520 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 520 (let_variable_name_with_pos_list)


State 735

  523 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 941


State 736

  524 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 524 (let_variable_declaration)


State 737

  525 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  526                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    expr_pipe               go to state 942
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_assign             go to state 599
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 943
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 738

  528 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 528 (let_variable_declaration)


State 739

  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  527 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 672
    "as"    shift, and go to state 673
    "+="    shift, and go to state 674
    "-="    shift, and go to state 675
    "/="    shift, and go to state 676
    "*="    shift, and go to state 677
    "%="    shift, and go to state 678
    "&="    shift, and go to state 679
    "|="    shift, and go to state 680
    "^="    shift, and go to state 681
    "<<"    shift, and go to state 682
    ">>"    shift, and go to state 683
    "++"    shift, and go to state 684
    "--"    shift, and go to state 685
    "<="    shift, and go to state 686
    "<<="   shift, and go to state 687
    ">>="   shift, and go to state 688
    ">="    shift, and go to state 689
    "=="    shift, and go to state 690
    "!="    shift, and go to state 691
    "->"    shift, and go to state 692
    "<-"    shift, and go to state 787
    "??"    shift, and go to state 694
    "?."    shift, and go to state 695
    "?["    shift, and go to state 696
    "<|"    shift, and go to state 697
    "|>"    shift, and go to state 698
    ":="    shift, and go to state 699
    "<<<"   shift, and go to state 700
    ">>>"   shift, and go to state 701
    "<<<="  shift, and go to state 702
    ">>>="  shift, and go to state 703
    "&&"    shift, and go to state 704
    "||"    shift, and go to state 705
    "^^"    shift, and go to state 706
    "&&="   shift, and go to state 707
    "||="   shift, and go to state 708
    "^^="   shift, and go to state 709
    ".."    shift, and go to state 710
    '='     shift, and go to state 788
    '?'     shift, and go to state 712
    '|'     shift, and go to state 713
    '^'     shift, and go to state 714
    '&'     shift, and go to state 715
    '<'     shift, and go to state 716
    '>'     shift, and go to state 717
    '-'     shift, and go to state 718
    '+'     shift, and go to state 719
    '*'     shift, and go to state 720
    '/'     shift, and go to state 721
    '%'     shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724
    ';'     shift, and go to state 944

    $default  reduce using rule 324 (expr_assign)


State 740

  653 type_declaration_no_options: "array" '<' $@47 type_declaration . '>' $@48
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 945


State 741

  656 type_declaration_no_options: "table" '<' $@49 table_type_pair . '>' $@50

    '>'  shift, and go to state 946


State 742

  627 table_type_pair: type_declaration .
  628                | type_declaration . ';' type_declaration
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    ';'  shift, and go to state 947

    $default  reduce using rule 627 (table_type_pair)


State 743

  659 type_declaration_no_options: "iterator" '<' $@51 type_declaration . '>' $@52
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 948


State 744

  649 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration . '>' $@46
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 949


State 745

  617 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 617 (auto_type_declaration)


State 746

  619 bitfield_bits: "name" .

    $default  reduce using rule 619 (bitfield_bits)


State 747

  620 bitfield_bits: bitfield_bits . ';' "name"
  626 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits . '>' $@44

    '>'  shift, and go to state 950
    ';'  shift, and go to state 951


State 748

  663 type_declaration_no_options: "block" '<' $@53 type_declaration . '>' $@54
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 952


State 749

  666 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list . optional_function_type '>' $@56

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 953


State 750

  670 type_declaration_no_options: "function" '<' $@57 type_declaration . '>' $@58
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 954


State 751

  673 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list . optional_function_type '>' $@60

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 955


State 752

  677 type_declaration_no_options: "lambda" '<' $@61 type_declaration . '>' $@62
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 956


State 753

  680 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 957


State 754

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"
  497 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 93
    ':'   shift, and go to state 958

    $default  reduce using rule 247 (name_in_namespace)


State 755

  498 tuple_type_list: tuple_type .

    $default  reduce using rule 498 (tuple_type_list)


State 756

  499 tuple_type_list: tuple_type_list . ';' tuple_type
  683 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list . '>' $@66

    '>'  shift, and go to state 959
    ';'  shift, and go to state 960


State 757

  496 tuple_type: type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 496 (tuple_type)


State 758

  501 variant_type_list: variant_type .

    $default  reduce using rule 501 (variant_type_list)


State 759

  502 variant_type_list: variant_type_list . ';' variant_type
  686 type_declaration_no_options: "variant" '<' $@67 variant_type_list . '>' $@68

    '>'  shift, and go to state 961
    ';'  shift, and go to state 962


State 760

  618 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 618 (auto_type_declaration)


State 761

  635 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 635 (type_declaration_no_options)


State 762

  633 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 633 (type_declaration_no_options)


State 763

  623 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 623 (bitfield_alias_bits)


State 764

  699 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}' .

    $default  reduce using rule 699 (bitfield_alias_declaration)


State 765

  500 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 963


State 766

  505 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 505 (variant_alias_type_list)


State 767

  694 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 '}' .

    $default  reduce using rule 694 (variant_alias_declaration)


State 768

  493 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 493 (function_argument_declaration)


State 769

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  578 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 964


State 770

  579 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 579 (variable_name_with_pos_list)


State 771

  580 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  581                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 965

    $default  reduce using rule 580 (variable_name_with_pos_list)


State 772

  510 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  511                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 579
    '='   shift, and go to state 581
    '|'   shift, and go to state 393

    $default  reduce using rule 510 (variable_declaration)

    copy_or_move  go to state 966


State 773

  513 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 513 (variable_declaration)


State 774

  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  512 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 672
    "as"    shift, and go to state 673
    "+="    shift, and go to state 674
    "-="    shift, and go to state 675
    "/="    shift, and go to state 676
    "*="    shift, and go to state 677
    "%="    shift, and go to state 678
    "&="    shift, and go to state 679
    "|="    shift, and go to state 680
    "^="    shift, and go to state 681
    "<<"    shift, and go to state 682
    ">>"    shift, and go to state 683
    "++"    shift, and go to state 684
    "--"    shift, and go to state 685
    "<="    shift, and go to state 686
    "<<="   shift, and go to state 687
    ">>="   shift, and go to state 688
    ">="    shift, and go to state 689
    "=="    shift, and go to state 690
    "!="    shift, and go to state 691
    "->"    shift, and go to state 692
    "<-"    shift, and go to state 787
    "??"    shift, and go to state 694
    "?."    shift, and go to state 695
    "?["    shift, and go to state 696
    "<|"    shift, and go to state 697
    "|>"    shift, and go to state 698
    ":="    shift, and go to state 699
    "<<<"   shift, and go to state 700
    ">>>"   shift, and go to state 701
    "<<<="  shift, and go to state 702
    ">>>="  shift, and go to state 703
    "&&"    shift, and go to state 704
    "||"    shift, and go to state 705
    "^^"    shift, and go to state 706
    "&&="   shift, and go to state 707
    "||="   shift, and go to state 708
    "^^="   shift, and go to state 709
    ".."    shift, and go to state 710
    '='     shift, and go to state 788
    '?'     shift, and go to state 712
    '|'     shift, and go to state 713
    '^'     shift, and go to state 714
    '&'     shift, and go to state 715
    '<'     shift, and go to state 716
    '>'     shift, and go to state 717
    '-'     shift, and go to state 718
    '+'     shift, and go to state 719
    '*'     shift, and go to state 720
    '/'     shift, and go to state 721
    '%'     shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724

    " <|"     reduce using rule 324 (expr_assign)
    $default  reduce using rule 512 (variable_declaration)


State 775

   75 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 75 (expression_while_loop)


State 776

   73 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 967
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 777

  254 new_type_declaration: '<' $@8 . type_declaration '>' $@9

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 968


State 778

  257 expr_new: "new" new_type_declaration '(' . ')'
  258         | "new" new_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    ')'                               shift, and go to state 969
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 970
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 779

  296 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  297               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  298               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '<'                               shift, and go to state 971
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 972
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 780

  295 expr_type_decl: "type" '<' $@16 . type_declaration '>' $@17

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 973


State 781

  748 make_dim_decl: "array" '<' $@77 . type_declaration_no_options '>' $@78 '(' expr_list ')'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 974


State 782

  300 expr_list: expr_list . ',' expr
  745 make_dim_decl: "array" '(' expr_list . ')'

    ','  shift, and go to state 786
    ')'  shift, and go to state 975


State 783

  299 expr_list: expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 299 (expr_list)


State 784

  267 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 267 (expression_return)


State 785

  264 expression_return_no_pipe: "return" "<-" expr_list .
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 786

    $default  reduce using rule 264 (expression_return_no_pipe)


State 786

  300 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 976
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 787

  326 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 889
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 788

  325 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 912
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 789

  273 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 977


State 790

  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"
  759 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'
  760                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 978
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    ';'         shift, and go to state 979
    '#'         shift, and go to state 392


State 791

  755 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 755 (expr_map_tuple_list)


State 792

  756 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  758 make_table_decl: "table" '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 980
    ')'  shift, and go to state 981


State 793

  251 expression_delete: "delete" "explicit" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 251 (expression_delete)


State 794

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  420     | "deref" '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 982


State 795

   76 expression_with: "with" expr expression_block .

    $default  reduce using rule 76 (expression_with)


State 796

   78 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 77 ($@4)

    $@4  go to state 983


State 797

  286 expr_cast: "cast" '<' $@10 . type_declaration_no_options '>' $@11 expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 984


State 798

  289 expr_cast: "upcast" '<' $@12 . type_declaration_no_options '>' $@13 expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 985


State 799

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  421     | "addr" '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 986


State 800

  292 expr_cast: "reinterpret" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 987


State 801

   52 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 52 (expression_label)


State 802

   53 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 53 (expression_goto)


State 803

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  452     | "unsafe" '(' expr . ')'
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 988


State 804

  752 make_dim_decl: "fixed_array" '<' $@79 . type_declaration_no_options '>' $@80 '(' expr_list ')'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 989


State 805

  300 expr_list: expr_list . ',' expr
  749 make_dim_decl: "fixed_array" '(' expr_list . ')'

    ','  shift, and go to state 786
    ')'  shift, and go to state 990


State 806

  300 expr_list: expr_list . ',' expr
  740 make_tuple_call: "tuple" '(' expr_list . ')'

    ','  shift, and go to state 786
    ')'  shift, and go to state 991


State 807

  422 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  423     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 992
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 808

  272 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 272 (expression_yield)


State 809

  269 expression_yield_no_pipe: "yield" "<-" expr .
  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 672
    "as"    shift, and go to state 673
    "+="    shift, and go to state 674
    "-="    shift, and go to state 675
    "/="    shift, and go to state 676
    "*="    shift, and go to state 677
    "%="    shift, and go to state 678
    "&="    shift, and go to state 679
    "|="    shift, and go to state 680
    "^="    shift, and go to state 681
    "<<"    shift, and go to state 682
    ">>"    shift, and go to state 683
    "++"    shift, and go to state 684
    "--"    shift, and go to state 685
    "<="    shift, and go to state 686
    "<<="   shift, and go to state 687
    ">>="   shift, and go to state 688
    ">="    shift, and go to state 689
    "=="    shift, and go to state 690
    "!="    shift, and go to state 691
    "->"    shift, and go to state 692
    "<-"    shift, and go to state 787
    "??"    shift, and go to state 694
    "?."    shift, and go to state 695
    "?["    shift, and go to state 696
    "<|"    shift, and go to state 697
    "|>"    shift, and go to state 698
    ":="    shift, and go to state 699
    "<<<"   shift, and go to state 700
    ">>>"   shift, and go to state 701
    "<<<="  shift, and go to state 702
    ">>>="  shift, and go to state 703
    "&&"    shift, and go to state 704
    "||"    shift, and go to state 705
    "^^"    shift, and go to state 706
    "&&="   shift, and go to state 707
    "||="   shift, and go to state 708
    "^^="   shift, and go to state 709
    ".."    shift, and go to state 710
    '='     shift, and go to state 788
    '?'     shift, and go to state 712
    '|'     shift, and go to state 713
    '^'     shift, and go to state 714
    '&'     shift, and go to state 715
    '<'     shift, and go to state 716
    '>'     shift, and go to state 717
    '-'     shift, and go to state 718
    '+'     shift, and go to state 719
    '*'     shift, and go to state 720
    '/'     shift, and go to state 721
    '%'     shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724

    " <|"     reduce using rule 324 (expr_assign)
    $default  reduce using rule 269 (expression_yield_no_pipe)


State 810

  306 block_or_lambda: '@' '@' .

    $default  reduce using rule 306 (block_or_lambda)


State 811

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  454 expr_mtag: "$$" '(' expr . ')'
  462          | expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 993


State 812

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  455 expr_mtag: "$i" '(' expr . ')'
  462          | expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 994


State 813

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  456 expr_mtag: "$v" '(' expr . ')'
  462          | expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 995


State 814

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  457 expr_mtag: "$b" '(' expr . ')'
  462          | expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 996


State 815

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  458 expr_mtag: "$a" '(' expr . ')'
  462          | expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 997


State 816

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  460 expr_mtag: "$c" '(' expr . ')' '(' ')'
  461          | "$c" '(' expr . ')' '(' expr_list ')'
  462          | expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 998


State 817

  580 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  581                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  763 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 999
    ','   shift, and go to state 580


State 818

  716 optional_block: "where" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 1000


State 819

  709 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  710                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1001


State 820

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"
  705 make_struct_fields: "name" . copy_or_move expr
  706                   | "name" . ":=" expr

    "<-"  shift, and go to state 579
    ":="  shift, and go to state 1002
    "::"  shift, and go to state 93
    '='   shift, and go to state 581

    $default  reduce using rule 247 (name_in_namespace)

    copy_or_move  go to state 1003


State 821

  380 expr: '-' . expr
  635 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  638                            | type_declaration_no_options '-' . "const"
  640                            | type_declaration_no_options '-' . '&'
  643                            | type_declaration_no_options '-' . '#'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "const"                           shift, and go to state 560
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '&'                               shift, and go to state 561
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '['                               shift, and go to state 562
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276
    '#'                               shift, and go to state 563

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 648
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 822

  407 expr: '(' . expr ')'
  731 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  732                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    ')'                               shift, and go to state 1004
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 653
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 823

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  735 make_tuple: expr .
  736           | expr . "=>" expr

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "=>"   shift, and go to state 1005
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 735 (make_tuple)


State 824

  707 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  708                   | make_struct_fields . ',' "name" ":=" expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  713 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1006

    $default  reduce using rule 713 (make_struct_dim)


State 825

  714 make_struct_dim: make_struct_dim . ';' make_struct_fields
  729 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 818
    ';'      shift, and go to state 1007

    $default  reduce using rule 715 (optional_block)

    optional_block  go to state 1008


State 826

  730 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1009
    ",]]"  shift, and go to state 1010
    ']'    shift, and go to state 1011

    optional_trailing_delim_sqr_sqr  go to state 1012


State 827

  737 make_tuple: make_tuple . ',' expr
  741 make_dim: make_tuple .

    ','  shift, and go to state 1013

    $default  reduce using rule 741 (make_dim)


State 828

  742 make_dim: make_dim . ';' make_tuple
  743 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1014
    ']'    shift, and go to state 1015
    ';'    shift, and go to state 1016

    optional_trailing_semicolon_sqr_sqr  go to state 1017


State 829

  580 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  581                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  764 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1018
    ','   shift, and go to state 580


State 830

  407 expr: '(' . expr ')'
  734 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    ')'                               shift, and go to state 1019
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 653
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 831

  714 make_struct_dim: make_struct_dim . ';' make_struct_fields
  733 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 818
    ';'      shift, and go to state 1007

    $default  reduce using rule 715 (optional_block)

    optional_block  go to state 1020


State 832

  742 make_dim: make_dim . ';' make_tuple
  744 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1021
    ';'    shift, and go to state 1016
    '}'    shift, and go to state 1022

    optional_trailing_semicolon_cur_sqr  go to state 1023


State 833

  738 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1024
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 834

  718 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 718 (optional_trailing_semicolon_cur_cur)


State 835

  754 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 642
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_map_tuple          go to state 1025
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 836

  717 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1026


State 837

  757 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 757 (make_table_decl)


State 838

  242 expression_keyword: "keyword" '<' $@6 . type_declaration_no_options '>' $@7 expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 1027


State 839

  239 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 239 (expr_keyword)


State 840

   30 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 30 (string_builder)


State 841

   29 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1028
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 842

   24 character_sequence: character_sequence . STRING_CHARACTER
   25                   | character_sequence . STRING_CHARACTER_ESC
   28 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 213
    STRING_CHARACTER_ESC  shift, and go to state 214

    STRING_CHARACTER      [reduce using rule 28 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 28 (string_builder_body)]
    $default              reduce using rule 28 (string_builder_body)


State 843

  407 expr: '(' expr ')' .

    $default  reduce using rule 407 (expr)


State 844

  354 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1029


State 845

  469 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1030


State 846

  358 func_addr_expr: '@' '@' '<' . $@18 type_declaration_no_options '>' $@19 func_addr_name
  361               | '@' '@' '<' . $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    ':'       reduce using rule 359 ($@20)
    '>'       reduce using rule 359 ($@20)
    '('       reduce using rule 359 ($@20)
    $default  reduce using rule 356 ($@18)

    $@18  go to state 1031
    $@20  go to state 1032


State 847

  353 func_addr_name: name_in_namespace .

    $default  reduce using rule 353 (func_addr_name)


State 848

  355 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 355 (func_addr_expr)


State 849

  214 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 236 (expressions)

    expressions  go to state 1033


State 850

   70 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1034
    "elif"         shift, and go to state 1035
    "static_elif"  shift, and go to state 1036

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1037
    expression_else      go to state 1038


State 851

   72 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1039
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 852

  349 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 819
    "name"  shift, and go to state 1040

    make_struct_fields  go to state 1041


State 853

  415 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 415 (expr)


State 854

  300 expr_list: expr_list . ',' expr
  350 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  416 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1043


State 855

  280 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1044

    tuple_expansion  go to state 1045


State 856

  283 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 283 (expression_let)


State 857

  282 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 282 (expression_let)


State 858

  314 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1046
    ":="  shift, and go to state 1047
    '='   shift, and go to state 1048
    '&'   shift, and go to state 1049

    capture_entry  go to state 1050
    capture_list   go to state 1051


State 859

  316 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 1052


State 860

  243 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 243 (expr_pipe)


State 861

  428 expr: expr "is" "type" . '<' $@24 type_declaration_no_options '>' $@25

    '<'  shift, and go to state 1053


State 862

  468 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1054


State 863

  430 expr: expr "is" "name" .

    $default  reduce using rule 430 (expr)


State 864

  429 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 429 (expr)


State 865

  434 expr: expr "as" "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 1055


State 866

  466 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1056


State 867

  431 expr: expr "as" "name" .

    $default  reduce using rule 431 (expr)


State 868

  435 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 435 (expr)


State 869

  334 expr_assign: expr "+=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 334 (expr_assign)


State 870

  335 expr_assign: expr "-=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 335 (expr_assign)


State 871

  337 expr_assign: expr "/=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 337 (expr_assign)


State 872

  336 expr_assign: expr "*=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 336 (expr_assign)


State 873

  338 expr_assign: expr "%=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 338 (expr_assign)


State 874

  328 expr_assign: expr "&=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 328 (expr_assign)


State 875

  329 expr_assign: expr "|=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 329 (expr_assign)


State 876

  330 expr_assign: expr "^=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 330 (expr_assign)


State 877

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  381     | expr "<<" expr .
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '-'   shift, and go to state 718
    '+'   shift, and go to state 719
    '*'   shift, and go to state 720
    '/'   shift, and go to state 721
    '%'   shift, and go to state 722
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 381 (expr)


State 878

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  382     | expr ">>" expr .
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '-'   shift, and go to state 718
    '+'   shift, and go to state 719
    '*'   shift, and go to state 720
    '/'   shift, and go to state 721
    '%'   shift, and go to state 722
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 382 (expr)


State 879

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  394     | expr "<=" expr .
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 394 (expr)


State 880

  339 expr_assign: expr "<<=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 339 (expr_assign)


State 881

  340 expr_assign: expr ">>=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 340 (expr_assign)


State 882

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  395     | expr ">=" expr .
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 395 (expr)


State 883

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  392     | expr "==" expr .
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 392 (expr)


State 884

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  393     | expr "!=" expr .
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 393 (expr)


State 885

  351 expr_method_call: expr "->" "name" . '(' ')'
  352                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1057


State 886

  348 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 1058


State 887

  346 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 1059


State 888

  347 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 1060


State 889

  326 expr_assign: expr "<-" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 326 (expr_assign)


State 890

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  424     | expr "??" expr .
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 424 (expr)


State 891

  463 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1061


State 892

  412 expr: expr "?." "name" .

    $default  reduce using rule 412 (expr)


State 893

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  410     | expr "?[" expr . ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ']'    shift, and go to state 1062


State 894

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  448     | expr "<|" expr .
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 692
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 448 (expr)


State 895

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  449     | expr "|>" expr .
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 692
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 449 (expr)


State 896

  417 expr: basic_type_declaration . '(' ')'
  418     | basic_type_declaration . '(' expr_list ')'
  450     | expr "|>" basic_type_declaration .

    '('  shift, and go to state 725

    $default  reduce using rule 450 (expr)


State 897

  327 expr_assign: expr ":=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 327 (expr_assign)


State 898

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  383     | expr "<<<" expr .
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '-'   shift, and go to state 718
    '+'   shift, and go to state 719
    '*'   shift, and go to state 720
    '/'   shift, and go to state 721
    '%'   shift, and go to state 722
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 383 (expr)


State 899

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  384     | expr ">>>" expr .
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '-'   shift, and go to state 718
    '+'   shift, and go to state 719
    '*'   shift, and go to state 720
    '/'   shift, and go to state 721
    '%'   shift, and go to state 722
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 384 (expr)


State 900

  341 expr_assign: expr "<<<=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 341 (expr_assign)


State 901

  342 expr_assign: expr ">>>=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 342 (expr_assign)


State 902

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  399     | expr "&&" expr .
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 399 (expr)


State 903

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  400     | expr "||" expr .
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "^^"   shift, and go to state 706
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 400 (expr)


State 904

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  401     | expr "^^" expr .
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 401 (expr)


State 905

  331 expr_assign: expr "&&=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 331 (expr_assign)


State 906

  332 expr_assign: expr "||=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 332 (expr_assign)


State 907

  333 expr_assign: expr "^^=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 333 (expr_assign)


State 908

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  402     | expr ".." expr .
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    ".."  error (nonassociative)

    $default  reduce using rule 402 (expr)


State 909

  345 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 1063


State 910

  343 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 1064


State 911

  344 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 471
    '@'  shift, and go to state 628
    '{'  shift, and go to state 276

    expression_block  go to state 487
    block_or_lambda   go to state 507
    expr_block        go to state 1065


State 912

  325 expr_assign: expr '=' expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 325 (expr_assign)


State 913

  436 expr: expr '?' "as" . "name"
  439     | expr '?' "as" . "type" '<' $@28 type_declaration '>' $@29
  440     | expr '?' "as" . basic_type_declaration
  467 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1066
    "bool"      shift, and go to state 300
    "void"      shift, and go to state 301
    "string"    shift, and go to state 302
    "int"       shift, and go to state 304
    "int2"      shift, and go to state 305
    "int3"      shift, and go to state 306
    "int4"      shift, and go to state 307
    "uint"      shift, and go to state 308
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 310
    "uint3"     shift, and go to state 311
    "uint4"     shift, and go to state 312
    "float"     shift, and go to state 313
    "float2"    shift, and go to state 314
    "float3"    shift, and go to state 315
    "float4"    shift, and go to state 316
    "range"     shift, and go to state 317
    "urange"    shift, and go to state 318
    "range64"   shift, and go to state 319
    "urange64"  shift, and go to state 320
    "int64"     shift, and go to state 322
    "uint64"    shift, and go to state 323
    "double"    shift, and go to state 324
    "int8"      shift, and go to state 327
    "uint8"     shift, and go to state 328
    "int16"     shift, and go to state 329
    "uint16"    shift, and go to state 330
    "$f"        shift, and go to state 1067
    "name"      shift, and go to state 1068

    basic_type_declaration  go to state 1069


State 914

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  425     | expr '?' expr . ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    ':'    shift, and go to state 1070
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724


State 915

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  397     | expr '|' expr .
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 397 (expr)


State 916

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  398     | expr '^' expr .
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 398 (expr)


State 917

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  396     | expr '&' expr .
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 396 (expr)


State 918

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  390     | expr '<' expr .
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 390 (expr)


State 919

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  391     | expr '>' expr .
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 391 (expr)


State 920

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  386     | expr '-' expr .
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '*'   shift, and go to state 720
    '/'   shift, and go to state 721
    '%'   shift, and go to state 722
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 386 (expr)


State 921

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  385     | expr '+' expr .
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '*'   shift, and go to state 720
    '/'   shift, and go to state 721
    '%'   shift, and go to state 722
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 385 (expr)


State 922

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  387     | expr '*' expr .
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 387 (expr)


State 923

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  388     | expr '/' expr .
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 388 (expr)


State 924

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  389     | expr '%' expr .
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 672
    "as"  shift, and go to state 673
    "++"  shift, and go to state 684
    "--"  shift, and go to state 685
    "->"  shift, and go to state 692
    "??"  shift, and go to state 694
    "?."  shift, and go to state 695
    "?["  shift, and go to state 696
    "<|"  shift, and go to state 697
    "|>"  shift, and go to state 698
    '.'   shift, and go to state 723
    '['   shift, and go to state 724

    $default  reduce using rule 389 (expr)


State 925

  413 expr: expr '.' "?." . "name"
  465 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1071
    "name"  shift, and go to state 1072


State 926

  411 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1073
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 927

  462 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1074


State 928

  362 expr_field: expr '.' "name" .

    $default  reduce using rule 362 (expr_field)


State 929

  363 expr_field: expr '.' '.' . "name"
  464 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1075
    "name"  shift, and go to state 1076


State 930

  409 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1077
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 931

  366 expr_field: expr '.' $@22 . error $@23

    error  shift, and go to state 1078


State 932

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  408     | expr '[' expr . ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ']'    shift, and go to state 1079


State 933

  417 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 417 (expr)


State 934

  300 expr_list: expr_list . ',' expr
  418 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 786
    ')'  shift, and go to state 1080


State 935

  563 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 . '}'

    '}'  shift, and go to state 1081


State 936

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  543 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ';'    shift, and go to state 1082


State 937

  113 annotation_list: annotation_list . ',' annotation_declaration
  115 optional_annotation_list: '[' annotation_list . ']'
  490 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 102
    ']'  shift, and go to state 1083


State 938

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  489                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "public"   shift, and go to state 1084
    "private"  shift, and go to state 1085

    $default  reduce using rule 477 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1086


State 939

  482 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1087

    $default  reduce using rule 480 (optional_static_member_variable)

    optional_static_member_variable  go to state 1088


State 940

  485 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration . ';'

    ';'  shift, and go to state 1089


State 941

  523 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 523 (let_variable_name_with_pos_list)


State 942

  526 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 526 (let_variable_declaration)


State 943

  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  525 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 672
    "as"    shift, and go to state 673
    "+="    shift, and go to state 674
    "-="    shift, and go to state 675
    "/="    shift, and go to state 676
    "*="    shift, and go to state 677
    "%="    shift, and go to state 678
    "&="    shift, and go to state 679
    "|="    shift, and go to state 680
    "^="    shift, and go to state 681
    "<<"    shift, and go to state 682
    ">>"    shift, and go to state 683
    "++"    shift, and go to state 684
    "--"    shift, and go to state 685
    "<="    shift, and go to state 686
    "<<="   shift, and go to state 687
    ">>="   shift, and go to state 688
    ">="    shift, and go to state 689
    "=="    shift, and go to state 690
    "!="    shift, and go to state 691
    "->"    shift, and go to state 692
    "<-"    shift, and go to state 787
    "??"    shift, and go to state 694
    "?."    shift, and go to state 695
    "?["    shift, and go to state 696
    "<|"    shift, and go to state 697
    "|>"    shift, and go to state 698
    ":="    shift, and go to state 699
    "<<<"   shift, and go to state 700
    ">>>"   shift, and go to state 701
    "<<<="  shift, and go to state 702
    ">>>="  shift, and go to state 703
    "&&"    shift, and go to state 704
    "||"    shift, and go to state 705
    "^^"    shift, and go to state 706
    "&&="   shift, and go to state 707
    "||="   shift, and go to state 708
    "^^="   shift, and go to state 709
    ".."    shift, and go to state 710
    '='     shift, and go to state 788
    '?'     shift, and go to state 712
    '|'     shift, and go to state 713
    '^'     shift, and go to state 714
    '&'     shift, and go to state 715
    '<'     shift, and go to state 716
    '>'     shift, and go to state 717
    '-'     shift, and go to state 718
    '+'     shift, and go to state 719
    '*'     shift, and go to state 720
    '/'     shift, and go to state 721
    '%'     shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724
    ';'     shift, and go to state 1090

    $default  reduce using rule 324 (expr_assign)


State 944

  527 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 527 (let_variable_declaration)


State 945

  653 type_declaration_no_options: "array" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 652 ($@48)

    $@48  go to state 1091


State 946

  656 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' . $@50

    $default  reduce using rule 655 ($@50)

    $@50  go to state 1092


State 947

  628 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 1093


State 948

  659 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 658 ($@52)

    $@52  go to state 1094


State 949

  649 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 648 ($@46)

    $@46  go to state 1095


State 950

  626 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' . $@44

    $default  reduce using rule 625 ($@44)

    $@44  go to state 1096


State 951

  620 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1097


State 952

  663 type_declaration_no_options: "block" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 662 ($@54)

    $@54  go to state 1098


State 953

  666 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type . '>' $@56

    '>'  shift, and go to state 1099


State 954

  670 type_declaration_no_options: "function" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 669 ($@58)

    $@58  go to state 1100


State 955

  673 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type . '>' $@60

    '>'  shift, and go to state 1101


State 956

  677 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 676 ($@62)

    $@62  go to state 1102


State 957

  680 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1103


State 958

  497 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 1104


State 959

  683 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' . $@66

    $default  reduce using rule 682 ($@66)

    $@66  go to state 1105


State 960

  499 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 754

    name_in_namespace            go to state 334
    tuple_type                   go to state 1106
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 757


State 961

  686 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' . $@68

    $default  reduce using rule 685 ($@68)

    $@68  go to state 1107


State 962

  502 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 571

    variant_type  go to state 1108


State 963

  500 variant_type: "name" ':' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 500 (variant_type)


State 964

  578 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 578 (variable_name_with_pos_list)


State 965

  581 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1109


State 966

  511 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1110
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 967

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 786
    ';'  shift, and go to state 1111


State 968

  254 new_type_declaration: '<' $@8 type_declaration . '>' $@9
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 1112


State 969

  257 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 257 (expr_new)


State 970

  258 expr_new: "new" new_type_declaration '(' expr_list . ')'
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 786
    ')'  shift, and go to state 1113


State 971

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  298               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1114


State 972

  296 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1115


State 973

  295 expr_type_decl: "type" '<' $@16 type_declaration . '>' $@17
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 1116


State 974

  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"
  748 make_dim_decl: "array" '<' $@77 type_declaration_no_options . '>' $@78 '(' expr_list ')'

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1117
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 975

  745 make_dim_decl: "array" '(' expr_list ')' .

    $default  reduce using rule 745 (make_dim_decl)


State 976

  300 expr_list: expr_list ',' expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 300 (expr_list)


State 977

  273 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 273 (expression_try_catch)


State 978

  759 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1118


State 979

  760 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 1119


State 980

  756 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 642
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_map_tuple          go to state 1120
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 981

  758 make_table_decl: "table" '(' expr_map_tuple_list ')' .

    $default  reduce using rule 758 (make_table_decl)


State 982

  420 expr: "deref" '(' expr ')' .

    $default  reduce using rule 420 (expr)


State 983

   78 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1121
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 984

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options . '>' $@11 expr
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1122
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 985

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options . '>' $@13 expr
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1123
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 986

  421 expr: "addr" '(' expr ')' .

    $default  reduce using rule 421 (expr)


State 987

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options . '>' $@15 expr
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1124
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 988

  452 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 452 (expr)


State 989

  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"
  752 make_dim_decl: "fixed_array" '<' $@79 type_declaration_no_options . '>' $@80 '(' expr_list ')'

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1125
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 990

  749 make_dim_decl: "fixed_array" '(' expr_list ')' .

    $default  reduce using rule 749 (make_dim_decl)


State 991

  740 make_tuple_call: "tuple" '(' expr_list ')' .

    $default  reduce using rule 740 (make_tuple_call)


State 992

  422 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  423     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 858

    $default  reduce using rule 313 (optional_capture_list)

    optional_capture_list  go to state 1126


State 993

  454 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 994

  455 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 995

  456 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 996

  457 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 997

  458 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 998

  460 expr_mtag: "$c" '(' expr ')' . '(' ')'
  461          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1127


State 999

  763 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 1128
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1000

  716 optional_block: "where" expr_block .

    $default  reduce using rule 716 (optional_block)


State 1001

  709 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  710                   | "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1129
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1002

  706 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1130
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1003

  705 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1131
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1004

  731 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  732                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 818
    "$f"     shift, and go to state 819
    "name"   shift, and go to state 1040

    $default  reduce using rule 715 (optional_block)

    make_struct_fields  go to state 824
    make_struct_dim     go to state 1132
    optional_block      go to state 1133


State 1005

  736 make_tuple: expr "=>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1134
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1006

  707 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  708                   | make_struct_fields ',' . "name" ":=" expr
  711                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  712                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1135
    "name"  shift, and go to state 1136


State 1007

  714 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 819
    "name"  shift, and go to state 1040

    make_struct_fields  go to state 1137


State 1008

  729 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1009
    ",]]"  shift, and go to state 1010
    ']'    shift, and go to state 1011

    optional_trailing_delim_sqr_sqr  go to state 1138


State 1009

  724 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 724 (optional_trailing_delim_sqr_sqr)


State 1010

  725 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 725 (optional_trailing_delim_sqr_sqr)


State 1011

  723 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1139


State 1012

  730 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 730 (make_struct_decl)


State 1013

  737 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1140
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1014

  722 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 722 (optional_trailing_semicolon_sqr_sqr)


State 1015

  721 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1141


State 1016

  742 make_dim: make_dim ';' . make_tuple

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 823
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple              go to state 1142
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1017

  743 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 743 (make_dim_decl)


State 1018

  764 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 1143
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1019

  734 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 819
    "name"  shift, and go to state 1040

    make_struct_fields  go to state 824
    make_struct_dim     go to state 1144


State 1020

  733 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1145
    ",}]"  shift, and go to state 1146
    '}'    shift, and go to state 1147

    optional_trailing_delim_cur_sqr  go to state 1148


State 1021

  720 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 720 (optional_trailing_semicolon_cur_sqr)


State 1022

  719 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1149


State 1023

  744 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 744 (make_dim_decl)


State 1024

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  738 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 738 (make_map_tuple)


State 1025

  754 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 754 (make_table)


State 1026

  717 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 717 (optional_trailing_semicolon_cur_cur)


State 1027

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options . '>' $@7 expr
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1150
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 1028

   29 string_builder_body: string_builder_body "{" expr . "}"
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    "}"    shift, and go to state 1151
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724


State 1029

  354 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1152
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1030

  469 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1153
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1031

  358 func_addr_expr: '@' '@' '<' $@18 . type_declaration_no_options '>' $@19 func_addr_name

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 1154


State 1032

  361 func_addr_expr: '@' '@' '<' $@20 . optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 1155


State 1033

  214 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  237 expressions: expressions . expression_any
  238            | expressions . error

    error                             shift, and go to state 407
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 408
    "if"                              shift, and go to state 409
    "static_if"                       shift, and go to state 410
    "for"                             shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "return"                          shift, and go to state 418
    "null"                            shift, and go to state 419
    "break"                           shift, and go to state 420
    "try"                             shift, and go to state 421
    "table"                           shift, and go to state 422
    "delete"                          shift, and go to state 423
    "deref"                           shift, and go to state 424
    "with"                            shift, and go to state 425
    "assume"                          shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 430
    "pass"                            shift, and go to state 431
    "reinterpret"                     shift, and go to state 432
    "label"                           shift, and go to state 433
    "goto"                            shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "yield"                           shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "$ <|"                            shift, and go to state 443
    "@ <|"                            shift, and go to state 444
    "@@ <|"                           shift, and go to state 445
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 463
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    ';'                               shift, and go to state 473
    '{'                               shift, and go to state 276
    '}'                               shift, and go to state 1156

    string_builder             go to state 475
    expr_reader                go to state 476
    expression_label           go to state 477
    expression_goto            go to state 478
    if_or_static_if            go to state 479
    expression_if_one_liner    go to state 480
    expression_if_then_else    go to state 481
    expression_for_loop        go to state 482
    expression_unsafe          go to state 483
    expression_while_loop      go to state 484
    expression_with            go to state 485
    expression_with_alias      go to state 486
    expression_block           go to state 487
    expression_any             go to state 488
    expr_keyword               go to state 489
    expression_keyword         go to state 490
    expr_pipe                  go to state 491
    name_in_namespace          go to state 492
    expression_delete          go to state 493
    expr_new                   go to state 494
    expression_break           go to state 495
    expression_continue        go to state 496
    expression_return_no_pipe  go to state 497
    expression_return          go to state 498
    expression_yield_no_pipe   go to state 499
    expression_yield           go to state 500
    expression_try_catch       go to state 501
    kwd_let                    go to state 502
    expression_let             go to state 503
    expr_cast                  go to state 504
    expr_type_decl             go to state 505
    expr_type_info             go to state 506
    block_or_lambda            go to state 507
    expr_block                 go to state 508
    expr_numeric_const         go to state 509
    expr_assign                go to state 510
    expr_assign_pipe           go to state 511
    expr_named_call            go to state 512
    expr_method_call           go to state 513
    func_addr_expr             go to state 514
    expr_field                 go to state 515
    expr                       go to state 516
    expr_mtag                  go to state 517
    basic_type_declaration     go to state 518
    make_decl                  go to state 519
    make_struct_decl           go to state 520
    make_tuple_call            go to state 521
    make_dim_decl              go to state 522
    make_table_decl            go to state 523
    array_comprehension        go to state 524


State 1034

   58 expression_else: "else" . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 1157


State 1035

   55 elif_or_static_elif: "elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1036

   56 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1037

   59 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1158
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1038

   70 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 70 (expression_if_then_else)


State 1039

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1159
    "is"    shift, and go to state 672
    "as"    shift, and go to state 673
    "<<"    shift, and go to state 682
    ">>"    shift, and go to state 683
    "++"    shift, and go to state 684
    "--"    shift, and go to state 685
    "<="    shift, and go to state 686
    ">="    shift, and go to state 689
    "=="    shift, and go to state 690
    "!="    shift, and go to state 691
    "->"    shift, and go to state 692
    "??"    shift, and go to state 694
    "?."    shift, and go to state 695
    "?["    shift, and go to state 696
    "<|"    shift, and go to state 697
    "|>"    shift, and go to state 698
    "<<<"   shift, and go to state 700
    ">>>"   shift, and go to state 701
    "&&"    shift, and go to state 704
    "||"    shift, and go to state 705
    "^^"    shift, and go to state 706
    ".."    shift, and go to state 710
    '?'     shift, and go to state 712
    '|'     shift, and go to state 713
    '^'     shift, and go to state 714
    '&'     shift, and go to state 715
    '<'     shift, and go to state 716
    '>'     shift, and go to state 717
    '-'     shift, and go to state 718
    '+'     shift, and go to state 719
    '*'     shift, and go to state 720
    '/'     shift, and go to state 721
    '%'     shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724

    $default  reduce using rule 62 (expression_else_one_liner)

    expression_else_one_liner  go to state 1160


State 1040

  705 make_struct_fields: "name" . copy_or_move expr
  706                   | "name" . ":=" expr

    "<-"  shift, and go to state 579
    ":="  shift, and go to state 1002
    '='   shift, and go to state 581

    copy_or_move  go to state 1003


State 1041

  349 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  707 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  708                   | make_struct_fields . ',' "name" ":=" expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1006
    ']'  shift, and go to state 1161


State 1042

  300 expr_list: expr_list ',' . expr
  350 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '['                               shift, and go to state 1162
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 976
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1043

  416 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 416 (expr)


State 1044

  278 tuple_expansion: "name" .

    $default  reduce using rule 278 (tuple_expansion)


State 1045

  279 tuple_expansion: tuple_expansion . ',' "name"
  280 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1163
    ']'  shift, and go to state 1164


State 1046

  309 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1165


State 1047

  310 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1166


State 1048

  308 capture_entry: '=' . "name"

    "name"  shift, and go to state 1167


State 1049

  307 capture_entry: '&' . "name"

    "name"  shift, and go to state 1168


State 1050

  311 capture_list: capture_entry .

    $default  reduce using rule 311 (capture_list)


State 1051

  312 capture_list: capture_list . ',' capture_entry
  314 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1169
    ']'  shift, and go to state 1170


State 1052

  316 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 1171


State 1053

  428 expr: expr "is" "type" '<' . $@24 type_declaration_no_options '>' $@25

    $default  reduce using rule 426 ($@24)

    $@24  go to state 1172


State 1054

  468 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1173
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1055

  434 expr: expr "as" "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 432 ($@26)

    $@26  go to state 1174


State 1056

  466 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1175
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1057

  351 expr_method_call: expr "->" "name" '(' . ')'
  352                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    ')'                               shift, and go to state 1176
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 1177
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1058

  348 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 348 (expr_assign_pipe)


State 1059

  346 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 346 (expr_assign_pipe)


State 1060

  347 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 347 (expr_assign_pipe)


State 1061

  463 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1178
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1062

  410 expr: expr "?[" expr ']' .

    $default  reduce using rule 410 (expr)


State 1063

  345 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 345 (expr_assign_pipe)


State 1064

  343 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 343 (expr_assign_pipe)


State 1065

  344 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 344 (expr_assign_pipe)


State 1066

  439 expr: expr '?' "as" "type" . '<' $@28 type_declaration '>' $@29

    '<'  shift, and go to state 1179


State 1067

  467 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1180


State 1068

  436 expr: expr '?' "as" "name" .

    $default  reduce using rule 436 (expr)


State 1069

  440 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 440 (expr)


State 1070

  425 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1181
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1071

  465 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1182


State 1072

  413 expr: expr '.' "?." "name" .

    $default  reduce using rule 413 (expr)


State 1073

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  411     | expr '.' "?[" expr . ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ']'    shift, and go to state 1183


State 1074

  462 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1184
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1075

  464 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1185


State 1076

  363 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 363 (expr_field)


State 1077

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  409     | expr '.' '[' expr . ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ']'    shift, and go to state 1186


State 1078

  366 expr_field: expr '.' $@22 error . $@23

    $default  reduce using rule 365 ($@23)

    $@23  go to state 1187


State 1079

  408 expr: expr '[' expr ']' .

    $default  reduce using rule 408 (expr)


State 1080

  418 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 418 (expr)


State 1081

  563 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}' .

    $default  reduce using rule 563 (enum_declaration)


State 1082

  543 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 543 (enum_list)


State 1083

  115 optional_annotation_list: '[' annotation_list ']' .
  490 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1188

    $default  reduce using rule 115 (optional_annotation_list)


State 1084

  478 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 478 (optional_public_or_private_member_variable)


State 1085

  479 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 479 (optional_public_or_private_member_variable)


State 1086

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@31 function_declaration_header ';'
  489                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "abstract"  shift, and go to state 1189
    "static"    shift, and go to state 1087

    $default  reduce using rule 480 (optional_static_member_variable)

    optional_static_member_variable  go to state 1190


State 1087

  481 optional_static_member_variable: "static" .

    $default  reduce using rule 481 (optional_static_member_variable)


State 1088

  482 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1191
    "sealed"    shift, and go to state 1192

    $default  reduce using rule 472 (optional_override)

    optional_override  go to state 1193


State 1089

  485 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';' .

    $default  reduce using rule 485 (struct_variable_declaration_list)


State 1090

  525 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 525 (let_variable_declaration)


State 1091

  653 type_declaration_no_options: "array" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 653 (type_declaration_no_options)


State 1092

  656 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' $@50 .

    $default  reduce using rule 656 (type_declaration_no_options)


State 1093

  628 table_type_pair: type_declaration ';' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 628 (table_type_pair)


State 1094

  659 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 659 (type_declaration_no_options)


State 1095

  649 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 649 (type_declaration_no_options)


State 1096

  626 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' $@44 .

    $default  reduce using rule 626 (bitfield_type_declaration)


State 1097

  620 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 620 (bitfield_bits)


State 1098

  663 type_declaration_no_options: "block" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 663 (type_declaration_no_options)


State 1099

  666 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' . $@56

    $default  reduce using rule 665 ($@56)

    $@56  go to state 1194


State 1100

  670 type_declaration_no_options: "function" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 670 (type_declaration_no_options)


State 1101

  673 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' . $@60

    $default  reduce using rule 672 ($@60)

    $@60  go to state 1195


State 1102

  677 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 677 (type_declaration_no_options)


State 1103

  680 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 679 ($@64)

    $@64  go to state 1196


State 1104

  497 tuple_type: "name" ':' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 497 (tuple_type)


State 1105

  683 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' $@66 .

    $default  reduce using rule 683 (type_declaration_no_options)


State 1106

  499 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 499 (tuple_type_list)


State 1107

  686 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' $@68 .

    $default  reduce using rule 686 (type_declaration_no_options)


State 1108

  502 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 502 (variant_type_list)


State 1109

  581 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 581 (variable_name_with_pos_list)


State 1110

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  511 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 511 (variable_declaration)


State 1111

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 1197


State 1112

  254 new_type_declaration: '<' $@8 type_declaration '>' . $@9

    $default  reduce using rule 253 ($@9)

    $@9  go to state 1198


State 1113

  258 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 258 (expr_new)


State 1114

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  298               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1199
    ';'  shift, and go to state 1200


State 1115

  296 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 296 (expr_type_info)


State 1116

  295 expr_type_decl: "type" '<' $@16 type_declaration '>' . $@17

    $default  reduce using rule 294 ($@17)

    $@17  go to state 1201


State 1117

  748 make_dim_decl: "array" '<' $@77 type_declaration_no_options '>' . $@78 '(' expr_list ')'

    $default  reduce using rule 747 ($@78)

    $@78  go to state 1202


State 1118

  759 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 642
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_map_tuple          go to state 791
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    expr_map_tuple_list     go to state 1203
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1119

  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"
  760 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1204
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 1120

  756 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 756 (expr_map_tuple_list)


State 1121

   78 expression_with_alias: "assume" "name" '=' $@4 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 78 (expression_with_alias)


State 1122

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' . $@11 expr

    $default  reduce using rule 285 ($@11)

    $@11  go to state 1205


State 1123

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' . $@13 expr

    $default  reduce using rule 288 ($@13)

    $@13  go to state 1206


State 1124

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 291 ($@15)

    $@15  go to state 1207


State 1125

  752 make_dim_decl: "fixed_array" '<' $@79 type_declaration_no_options '>' . $@80 '(' expr_list ')'

    $default  reduce using rule 751 ($@80)

    $@80  go to state 1208


State 1126

  422 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1209


State 1127

  460 expr_mtag: "$c" '(' expr ')' '(' . ')'
  461          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    ')'                               shift, and go to state 1210
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 1211
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1128

  300 expr_list: expr_list . ',' expr
  763 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 786
    ';'  shift, and go to state 1212


State 1129

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  710                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1213


State 1130

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  706 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 706 (make_struct_fields)


State 1131

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  705 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 705 (make_struct_fields)


State 1132

  714 make_struct_dim: make_struct_dim . ';' make_struct_fields
  732 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 818
    ';'      shift, and go to state 1007

    $default  reduce using rule 715 (optional_block)

    optional_block  go to state 1214


State 1133

  731 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1009
    ",]]"  shift, and go to state 1010
    ']'    shift, and go to state 1011

    optional_trailing_delim_sqr_sqr  go to state 1215


State 1134

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  736 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 736 (make_tuple)


State 1135

  711 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  712                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1216


State 1136

  707 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  708                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 579
    ":="  shift, and go to state 1217
    '='   shift, and go to state 581

    copy_or_move  go to state 1218


State 1137

  707 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  708                   | make_struct_fields . ',' "name" ":=" expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  714 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1006

    $default  reduce using rule 714 (make_struct_dim)


State 1138

  729 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 729 (make_struct_decl)


State 1139

  723 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 723 (optional_trailing_delim_sqr_sqr)


State 1140

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  737 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 737 (make_tuple)


State 1141

  721 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 721 (optional_trailing_semicolon_sqr_sqr)


State 1142

  737 make_tuple: make_tuple . ',' expr
  742 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1013

    $default  reduce using rule 742 (make_dim)


State 1143

  300 expr_list: expr_list . ',' expr
  764 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 786
    ';'  shift, and go to state 1219


State 1144

  714 make_struct_dim: make_struct_dim . ';' make_struct_fields
  734 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 818
    ';'      shift, and go to state 1007

    $default  reduce using rule 715 (optional_block)

    optional_block  go to state 1220


State 1145

  727 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 727 (optional_trailing_delim_cur_sqr)


State 1146

  728 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 728 (optional_trailing_delim_cur_sqr)


State 1147

  726 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1221


State 1148

  733 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 733 (make_struct_decl)


State 1149

  719 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 719 (optional_trailing_semicolon_cur_sqr)


State 1150

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' . $@7 expr

    $default  reduce using rule 241 ($@7)

    $@7  go to state 1222


State 1151

   29 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 29 (string_builder_body)


State 1152

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  354 func_addr_name: "$i" '(' expr . ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1223


State 1153

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  469          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1224


State 1154

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options . '>' $@19 func_addr_name
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1225
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 1155

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list . optional_function_type '>' $@21 func_addr_name

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 1226


State 1156

  214 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 214 (expression_block)


State 1157

   58 expression_else: "else" expression_block .

    $default  reduce using rule 58 (expression_else)


State 1158

   59 expression_else: elif_or_static_elif expr . expression_block expression_else
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    '{'    shift, and go to state 276

    expression_block  go to state 1227


State 1159

   64 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 63 ($@2)

    $@2  go to state 1228


State 1160

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1229


State 1161

  349 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1230


State 1162

  350 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 819
    "name"  shift, and go to state 1040

    make_struct_fields  go to state 1231


State 1163

  279 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1232


State 1164

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1233


State 1165

  309 capture_entry: "<-" "name" .

    $default  reduce using rule 309 (capture_entry)


State 1166

  310 capture_entry: ":=" "name" .

    $default  reduce using rule 310 (capture_entry)


State 1167

  308 capture_entry: '=' "name" .

    $default  reduce using rule 308 (capture_entry)


State 1168

  307 capture_entry: '&' "name" .

    $default  reduce using rule 307 (capture_entry)


State 1169

  312 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1046
    ":="  shift, and go to state 1047
    '='   shift, and go to state 1048
    '&'   shift, and go to state 1049

    capture_entry  go to state 1234


State 1170

  314 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1235


State 1171

  316 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1236
    '{'   shift, and go to state 276

    expression_block       go to state 1237
    block_or_simple_block  go to state 1238


State 1172

  428 expr: expr "is" "type" '<' $@24 . type_declaration_no_options '>' $@25

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 1239


State 1173

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  468          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1240


State 1174

  434 expr: expr "as" "type" '<' $@26 . type_declaration '>' $@27

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 1241


State 1175

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  466          | expr "as" "$f" '(' expr . ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1242


State 1176

  351 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 351 (expr_method_call)


State 1177

  300 expr_list: expr_list . ',' expr
  352 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 786
    ')'  shift, and go to state 1243


State 1178

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  463          | expr "?." "$f" '(' expr . ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1244


State 1179

  439 expr: expr '?' "as" "type" '<' . $@28 type_declaration '>' $@29

    $default  reduce using rule 437 ($@28)

    $@28  go to state 1245


State 1180

  467 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1246
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1181

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  425     | expr '?' expr ':' expr .
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 425 (expr)


State 1182

  465 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1247
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1183

  411 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 411 (expr)


State 1184

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr '.' "$f" '(' expr . ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1248


State 1185

  464 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1249
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1186

  409 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 409 (expr)


State 1187

  366 expr_field: expr '.' $@22 error $@23 .

    $default  reduce using rule 366 (expr_field)


State 1188

  490 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 490 (struct_variable_declaration_list)


State 1189

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@31 function_declaration_header ';'

    "const"  shift, and go to state 1250

    $default  reduce using rule 475 (optional_constant)

    optional_constant  go to state 1251


State 1190

  489 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@32 function_declaration_header expression_block

    "override"  shift, and go to state 1191
    "sealed"    shift, and go to state 1192

    $default  reduce using rule 472 (optional_override)

    optional_override  go to state 1252


State 1191

  473 optional_override: "override" .

    $default  reduce using rule 473 (optional_override)


State 1192

  474 optional_override: "sealed" .

    $default  reduce using rule 474 (optional_override)


State 1193

  482 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1084
    "private"  shift, and go to state 1085

    $default  reduce using rule 477 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1253


State 1194

  666 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' $@56 .

    $default  reduce using rule 666 (type_declaration_no_options)


State 1195

  673 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' $@60 .

    $default  reduce using rule 673 (type_declaration_no_options)


State 1196

  680 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 680 (type_declaration_no_options)


State 1197

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 73 (expression_for_loop)


State 1198

  254 new_type_declaration: '<' $@8 type_declaration '>' $@9 .

    $default  reduce using rule 254 (new_type_declaration)


State 1199

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1254
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1200

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1255


State 1201

  295 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17 .

    $default  reduce using rule 295 (expr_type_decl)


State 1202

  748 make_dim_decl: "array" '<' $@77 type_declaration_no_options '>' $@78 . '(' expr_list ')'

    '('  shift, and go to state 1256


State 1203

  756 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  759 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 980
    ')'  shift, and go to state 1257


State 1204

  760 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1258


State 1205

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1259
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1206

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1260
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1207

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1261
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1208

  752 make_dim_decl: "fixed_array" '<' $@79 type_declaration_no_options '>' $@80 . '(' expr_list ')'

    '('  shift, and go to state 1262


State 1209

  422 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    ')'                               shift, and go to state 1263
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1264
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1210

  460 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 460 (expr_mtag)


State 1211

  300 expr_list: expr_list . ',' expr
  461 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 786
    ')'  shift, and go to state 1265


State 1212

  763 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1266
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1213

  709 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  710                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 579
    ":="  shift, and go to state 1267
    '='   shift, and go to state 581

    copy_or_move  go to state 1268


State 1214

  732 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1009
    ",]]"  shift, and go to state 1010
    ']'    shift, and go to state 1011

    optional_trailing_delim_sqr_sqr  go to state 1269


State 1215

  731 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 731 (make_struct_decl)


State 1216

  711 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  712                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1270
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1217

  708 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1271
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1218

  707 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1272
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1219

  764 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1273
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1220

  734 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1145
    ",}]"  shift, and go to state 1146
    '}'    shift, and go to state 1147

    optional_trailing_delim_cur_sqr  go to state 1274


State 1221

  726 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 726 (optional_trailing_delim_cur_sqr)


State 1222

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1275
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1223

  354 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 354 (func_addr_name)


State 1224

  469 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 1225

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' . $@19 func_addr_name

    $default  reduce using rule 357 ($@19)

    $@19  go to state 1276


State 1226

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type . '>' $@21 func_addr_name

    '>'  shift, and go to state 1277


State 1227

   59 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1034
    "elif"         shift, and go to state 1035
    "static_elif"  shift, and go to state 1036

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1037
    expression_else      go to state 1278


State 1228

   64 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "return"                          shift, and go to state 1279
    "null"                            shift, and go to state 419
    "break"                           shift, and go to state 420
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 430
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "yield"                           shift, and go to state 1280
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder             go to state 475
    expr_reader                go to state 476
    expression_if_one_liner    go to state 1281
    expression_block           go to state 487
    expression_keyword         go to state 490
    name_in_namespace          go to state 492
    expr_new                   go to state 494
    expression_break           go to state 1282
    expression_continue        go to state 1283
    expression_return_no_pipe  go to state 1284
    expression_yield_no_pipe   go to state 1285
    expr_cast                  go to state 504
    expr_type_decl             go to state 505
    expr_type_info             go to state 506
    block_or_lambda            go to state 507
    expr_block                 go to state 508
    expr_numeric_const         go to state 509
    expr_named_call            go to state 512
    expr_method_call           go to state 513
    func_addr_expr             go to state 514
    expr_field                 go to state 515
    expr                       go to state 1286
    expr_mtag                  go to state 517
    basic_type_declaration     go to state 518
    make_decl                  go to state 519
    make_struct_decl           go to state 520
    make_tuple_call            go to state 521
    make_dim_decl              go to state 522
    make_table_decl            go to state 523
    array_comprehension        go to state 524


State 1229

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 72 (expression_if_then_else)


State 1230

  349 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 349 (expr_named_call)


State 1231

  350 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  707 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  708                   | make_struct_fields . ',' "name" ":=" expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1006
    ']'  shift, and go to state 1287


State 1232

  279 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 279 (tuple_expansion)


State 1233

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1288
    '&'  shift, and go to state 369

    $default  reduce using rule 517 (optional_ref)

    optional_ref  go to state 1289


State 1234

  312 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 312 (capture_list)


State 1235

  314 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 314 (optional_capture_list)


State 1236

  302 block_or_simple_block: "=>" . expr
  303                      | "=>" . "<-" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1290
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1291
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1237

  301 block_or_simple_block: expression_block .

    $default  reduce using rule 301 (block_or_simple_block)


State 1238

  316 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 316 (expr_block)


State 1239

  428 expr: expr "is" "type" '<' $@24 type_declaration_no_options . '>' $@25
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1292
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 1240

  468 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1241

  434 expr: expr "as" "type" '<' $@26 type_declaration . '>' $@27
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 1293


State 1242

  466 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 466 (expr_mtag)


State 1243

  352 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 352 (expr_method_call)


State 1244

  463 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 463 (expr_mtag)


State 1245

  439 expr: expr '?' "as" "type" '<' $@28 . type_declaration '>' $@29

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 1294


State 1246

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr '?' "as" "$f" '(' expr . ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1295


State 1247

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr '.' "?." "$f" '(' expr . ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1296


State 1248

  462 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 462 (expr_mtag)


State 1249

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr '.' '.' "$f" '(' expr . ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1297


State 1250

  476 optional_constant: "const" .

    $default  reduce using rule 476 (optional_constant)


State 1251

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@31 function_declaration_header ';'

    $default  reduce using rule 486 ($@31)

    $@31  go to state 1298


State 1252

  489 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@32 function_declaration_header expression_block

    "const"  shift, and go to state 1250

    $default  reduce using rule 475 (optional_constant)

    optional_constant  go to state 1299


State 1253

  482 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_declaration         go to state 1300
    variable_name_with_pos_list  go to state 403


State 1254

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1301


State 1255

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1302


State 1256

  748 make_dim_decl: "array" '<' $@77 type_declaration_no_options '>' $@78 '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 1303
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1257

  759 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 759 (make_table_decl)


State 1258

  760 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 642
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_map_tuple          go to state 791
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    expr_map_tuple_list     go to state 1304
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1259

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 286 (expr_cast)


State 1260

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 289 (expr_cast)


State 1261

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 292 (expr_cast)


State 1262

  752 make_dim_decl: "fixed_array" '<' $@79 type_declaration_no_options '>' $@80 '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 1305
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1263

  422 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 422 (expr)


State 1264

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1306


State 1265

  461 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 461 (expr_mtag)


State 1266

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  763 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ';'    shift, and go to state 1307

    $default  reduce using rule 761 (array_comprehension_where)

    array_comprehension_where  go to state 1308


State 1267

  710 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1309
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1268

  709 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1310
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1269

  732 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 732 (make_struct_decl)


State 1270

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  711 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  712                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1311


State 1271

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 708 (make_struct_fields)


State 1272

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 707 (make_struct_fields)


State 1273

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  764 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ';'    shift, and go to state 1307

    $default  reduce using rule 761 (array_comprehension_where)

    array_comprehension_where  go to state 1312


State 1274

  734 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 734 (make_struct_decl)


State 1275

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 242 (expression_keyword)


State 1276

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 . func_addr_name

    "::"    shift, and go to state 54
    "$i"    shift, and go to state 844
    "name"  shift, and go to state 55

    name_in_namespace  go to state 847
    func_addr_name     go to state 1313


State 1277

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' . $@21 func_addr_name

    $default  reduce using rule 360 ($@21)

    $@21  go to state 1314


State 1278

   59 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 59 (expression_else)


State 1279

  262 expression_return_no_pipe: "return" .
  263                          | "return" . expr_list
  264                          | "return" . "<-" expr_list

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1315
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    $default  reduce using rule 262 (expression_return_no_pipe)

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 598
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1280

  268 expression_yield_no_pipe: "yield" . expr
  269                         | "yield" . "<-" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1316
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1317
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1281

   64 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 64 (expression_else_one_liner)


State 1282

   68 expression_if_one_liner: expression_break .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1283

   69 expression_if_one_liner: expression_continue .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1284

   66 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1285

   67 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1286

   65 expression_if_one_liner: expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 65 (expression_if_one_liner)


State 1287

  350 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1318


State 1288

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 1319


State 1289

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 539
    ":="  shift, and go to state 540
    '='   shift, and go to state 541

    copy_or_move_or_clone  go to state 1320


State 1290

  303 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1321
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1291

  302 block_or_simple_block: "=>" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    ".."  error (nonassociative)

    $default  reduce using rule 302 (block_or_simple_block)


State 1292

  428 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' . $@25

    $default  reduce using rule 427 ($@25)

    $@25  go to state 1322


State 1293

  434 expr: expr "as" "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 433 ($@27)

    $@27  go to state 1323


State 1294

  439 expr: expr '?' "as" "type" '<' $@28 type_declaration . '>' $@29
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 1324


State 1295

  467 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1296

  465 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 465 (expr_mtag)


State 1297

  464 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 464 (expr_mtag)


State 1298

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 . function_declaration_header ';'

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1325


State 1299

  489 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@32 function_declaration_header expression_block

    $default  reduce using rule 488 ($@32)

    $@32  go to state 1326


State 1300

  482 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 482 (structure_variable_declaration)


State 1301

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 297 (expr_type_info)


State 1302

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1327
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1303

  300 expr_list: expr_list . ',' expr
  748 make_dim_decl: "array" '<' $@77 type_declaration_no_options '>' $@78 '(' expr_list . ')'

    ','  shift, and go to state 786
    ')'  shift, and go to state 1328


State 1304

  756 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  760 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 980
    ')'  shift, and go to state 1329


State 1305

  300 expr_list: expr_list . ',' expr
  752 make_dim_decl: "fixed_array" '<' $@79 type_declaration_no_options '>' $@80 '(' expr_list . ')'

    ','  shift, and go to state 786
    ')'  shift, and go to state 1330


State 1306

  423 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 423 (expr)


State 1307

  762 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1331


State 1308

  763 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1332


State 1309

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 710 (make_struct_fields)


State 1310

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 709 (make_struct_fields)


State 1311

  711 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  712                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 579
    ":="  shift, and go to state 1333
    '='   shift, and go to state 581

    copy_or_move  go to state 1334


State 1312

  764 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1335


State 1313

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name .

    $default  reduce using rule 358 (func_addr_expr)


State 1314

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 . func_addr_name

    "::"    shift, and go to state 54
    "$i"    shift, and go to state 844
    "name"  shift, and go to state 55

    name_in_namespace  go to state 847
    func_addr_name     go to state 1336


State 1315

  264 expression_return_no_pipe: "return" "<-" . expr_list

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    expr_list               go to state 785
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 783
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1316

  269 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1337
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1317

  268 expression_yield_no_pipe: "yield" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 268 (expression_yield_no_pipe)


State 1318

  350 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 350 (expr_named_call)


State 1319

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  633 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  634                            | type_declaration_no_options . '[' ']'
  635                            | type_declaration_no_options . '-' '[' ']'
  636                            | type_declaration_no_options . "explicit"
  637                            | type_declaration_no_options . "const"
  638                            | type_declaration_no_options . '-' "const"
  639                            | type_declaration_no_options . '&'
  640                            | type_declaration_no_options . '-' '&'
  641                            | type_declaration_no_options . '#'
  642                            | type_declaration_no_options . "implicit"
  643                            | type_declaration_no_options . '-' '#'
  644                            | type_declaration_no_options . "==" "const"
  645                            | type_declaration_no_options . "==" '&'
  646                            | type_declaration_no_options . '?'
  650                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "<-"        shift, and go to state 539
    "??"        shift, and go to state 387
    ":="        shift, and go to state 540
    '='         shift, and go to state 541
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392

    copy_or_move_or_clone  go to state 1338


State 1320

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1339
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1321

  303 block_or_simple_block: "=>" "<-" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 303 (block_or_simple_block)


State 1322

  428 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25 .

    $default  reduce using rule 428 (expr)


State 1323

  434 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 434 (expr)


State 1324

  439 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' . $@29

    $default  reduce using rule 438 ($@29)

    $@29  go to state 1340


State 1325

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header . ';'

    ';'  shift, and go to state 1341


State 1326

  489 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1342


State 1327

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ')'    shift, and go to state 1343


State 1328

  748 make_dim_decl: "array" '<' $@77 type_declaration_no_options '>' $@78 '(' expr_list ')' .

    $default  reduce using rule 748 (make_dim_decl)


State 1329

  760 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 760 (make_table_decl)


State 1330

  752 make_dim_decl: "fixed_array" '<' $@79 type_declaration_no_options '>' $@80 '(' expr_list ')' .

    $default  reduce using rule 752 (make_dim_decl)


State 1331

  762 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1344
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1332

  763 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1345


State 1333

  712 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1346
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1334

  711 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1347
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1335

  764 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1348


State 1336

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name .

    $default  reduce using rule 361 (func_addr_expr)


State 1337

  269 expression_yield_no_pipe: "yield" "<-" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 269 (expression_yield_no_pipe)


State 1338

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 419
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 432
    "unsafe"                          shift, and go to state 533
    "fixed_array"                     shift, and go to state 436
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "tuple"                           shift, and go to state 438
    "generator"                       shift, and go to state 439
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 446
    "$i"                              shift, and go to state 447
    "$v"                              shift, and go to state 448
    "$b"                              shift, and go to state 449
    "$a"                              shift, and go to state 450
    "$c"                              shift, and go to state 451
    "..."                             shift, and go to state 452
    "[["                              shift, and go to state 453
    "[{"                              shift, and go to state 454
    "{{"                              shift, and go to state 455
    "integer constant"                shift, and go to state 456
    "long integer constant"           shift, and go to state 457
    "unsigned integer constant"       shift, and go to state 458
    "unsigned long integer constant"  shift, and go to state 459
    "unsigned int8 constant"          shift, and go to state 460
    "floating point constant"         shift, and go to state 461
    "double constant"                 shift, and go to state 462
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 534
    "start of the string"             shift, and go to state 464
    '-'                               shift, and go to state 465
    '+'                               shift, and go to state 466
    '*'                               shift, and go to state 467
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 468
    '!'                               shift, and go to state 469
    '('                               shift, and go to state 470
    '$'                               shift, and go to state 471
    '@'                               shift, and go to state 472
    '{'                               shift, and go to state 276

    string_builder          go to state 475
    expr_reader             go to state 476
    expression_block        go to state 487
    expression_keyword      go to state 490
    name_in_namespace       go to state 492
    expr_new                go to state 494
    expr_cast               go to state 504
    expr_type_decl          go to state 505
    expr_type_info          go to state 506
    block_or_lambda         go to state 507
    expr_block              go to state 508
    expr_numeric_const      go to state 509
    expr_named_call         go to state 512
    expr_method_call        go to state 513
    func_addr_expr          go to state 514
    expr_field              go to state 515
    expr                    go to state 1349
    expr_mtag               go to state 517
    basic_type_declaration  go to state 518
    make_decl               go to state 519
    make_struct_decl        go to state 520
    make_tuple_call         go to state 521
    make_dim_decl           go to state 522
    make_table_decl         go to state 523
    array_comprehension     go to state 524


State 1339

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ';'    shift, and go to state 1350


State 1340

  439 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29 .

    $default  reduce using rule 439 (expr)


State 1341

  487 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';' .

    $default  reduce using rule 487 (struct_variable_declaration_list)


State 1342

  489 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 1351


State 1343

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 298 (expr_type_info)


State 1344

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  762 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 762 (array_comprehension_where)


State 1345

  763 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 763 (array_comprehension)


State 1346

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  712 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 712 (make_struct_fields)


State 1347

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'
  711 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724

    $default  reduce using rule 711 (make_struct_fields)


State 1348

  764 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 764 (array_comprehension)


State 1349

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  462 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr . "?." "$f" '(' expr ')'
  464          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr . "as" "$f" '(' expr ')'
  467          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 672
    "as"   shift, and go to state 673
    "<<"   shift, and go to state 682
    ">>"   shift, and go to state 683
    "++"   shift, and go to state 684
    "--"   shift, and go to state 685
    "<="   shift, and go to state 686
    ">="   shift, and go to state 689
    "=="   shift, and go to state 690
    "!="   shift, and go to state 691
    "->"   shift, and go to state 692
    "??"   shift, and go to state 694
    "?."   shift, and go to state 695
    "?["   shift, and go to state 696
    "<|"   shift, and go to state 697
    "|>"   shift, and go to state 698
    "<<<"  shift, and go to state 700
    ">>>"  shift, and go to state 701
    "&&"   shift, and go to state 704
    "||"   shift, and go to state 705
    "^^"   shift, and go to state 706
    ".."   shift, and go to state 710
    '?'    shift, and go to state 712
    '|'    shift, and go to state 713
    '^'    shift, and go to state 714
    '&'    shift, and go to state 715
    '<'    shift, and go to state 716
    '>'    shift, and go to state 717
    '-'    shift, and go to state 718
    '+'    shift, and go to state 719
    '*'    shift, and go to state 720
    '/'    shift, and go to state 721
    '%'    shift, and go to state 722
    '.'    shift, and go to state 723
    '['    shift, and go to state 724
    ';'    shift, and go to state 1352


State 1350

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 281 (tuple_expansion_variable_declaration)


State 1351

  489 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block .

    $default  reduce using rule 489 (struct_variable_declaration_list)


State 1352

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 280 (tuple_expansion_variable_declaration)
