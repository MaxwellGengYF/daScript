Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 58 conflicts: 1 shift/reduce
State 310 conflicts: 1 shift/reduce
State 501 conflicts: 2 shift/reduce
State 603 conflicts: 1 shift/reduce
State 857 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"

   40 require_module_name: keyword_or_name
   41                    | '%' require_module_name
   42                    | require_module_name '.' keyword_or_name
   43                    | require_module_name '/' keyword_or_name

   44 require_module: require_module_name is_public_module
   45               | require_module_name "as" "name" is_public_module

   46 is_public_module: %empty
   47                 | "public"

   48 expect_declaration: "expect" expect_list

   49 expect_list: expect_error
   50            | expect_list ',' expect_error

   51 expect_error: "integer constant"
   52             | "integer constant" ':' "integer constant"

   53 expression_label: "label" "integer constant" ':'

   54 expression_goto: "goto" "label" "integer constant"
   55                | "goto" expr

   56 elif_or_static_elif: "elif"
   57                    | "static_elif"

   58 expression_else: %empty
   59                | "else" expression_block
   60                | elif_or_static_elif expr expression_block expression_else

   61 if_or_static_if: "if"
   62                | "static_if"

   63 expression_else_one_liner: %empty

   64 $@2: %empty

   65 expression_else_one_liner: "else" $@2 expression_if_one_liner

   66 expression_if_one_liner: expr
   67                        | expression_return_no_pipe
   68                        | expression_yield_no_pipe
   69                        | expression_break
   70                        | expression_continue

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else

   72 $@3: %empty

   73 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   74 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   75 expression_unsafe: "unsafe" expression_block

   76 expression_while_loop: "while" expr expression_block

   77 expression_with: "with" expr expression_block

   78 $@4: %empty

   79 expression_with_alias: "assume" "name" '=' $@4 expr

   80 annotation_argument_value: string_constant
   81                          | "name"
   82                          | "integer constant"
   83                          | "floating point constant"
   84                          | "true"
   85                          | "false"

   86 annotation_argument_value_list: annotation_argument_value
   87                               | annotation_argument_value_list ',' annotation_argument_value

   88 annotation_argument_name: "name"
   89                         | "type"
   90                         | "in"

   91 annotation_argument: annotation_argument_name '=' string_constant
   92                    | annotation_argument_name '=' "name"
   93                    | annotation_argument_name '=' "integer constant"
   94                    | annotation_argument_name '=' "floating point constant"
   95                    | annotation_argument_name '=' "true"
   96                    | annotation_argument_name '=' "false"
   97                    | annotation_argument_name
   98                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   99 annotation_argument_list: annotation_argument
  100                         | annotation_argument_list ',' annotation_argument

  101 annotation_declaration_name: name_in_namespace
  102                            | "require"
  103                            | "private"

  104 annotation_declaration_basic: annotation_declaration_name
  105                             | annotation_declaration_name '(' annotation_argument_list ')'

  106 annotation_declaration: annotation_declaration_basic
  107                       | '!' annotation_declaration
  108                       | annotation_declaration "&&" annotation_declaration
  109                       | annotation_declaration "||" annotation_declaration
  110                       | annotation_declaration "^^" annotation_declaration
  111                       | '(' annotation_declaration ')'
  112                       | "|>" annotation_declaration

  113 annotation_list: annotation_declaration
  114                | annotation_list ',' annotation_declaration

  115 optional_annotation_list: %empty
  116                         | '[' annotation_list ']'

  117 optional_function_argument_list: %empty
  118                                | '(' ')'
  119                                | '(' function_argument_list ')'

  120 optional_function_type: %empty
  121                       | ':' type_declaration

  122 function_name: "name"
  123              | "operator" '!'
  124              | "operator" '~'
  125              | "operator" "+="
  126              | "operator" "-="
  127              | "operator" "*="
  128              | "operator" "/="
  129              | "operator" "%="
  130              | "operator" "&="
  131              | "operator" "|="
  132              | "operator" "^="
  133              | "operator" "&&="
  134              | "operator" "||="
  135              | "operator" "^^="
  136              | "operator" "&&"
  137              | "operator" "||"
  138              | "operator" "^^"
  139              | "operator" '+'
  140              | "operator" '-'
  141              | "operator" '*'
  142              | "operator" '/'
  143              | "operator" '%'
  144              | "operator" '<'
  145              | "operator" '>'
  146              | "operator" ".."
  147              | "operator" "=="
  148              | "operator" "!="
  149              | "operator" "<="
  150              | "operator" ">="
  151              | "operator" '&'
  152              | "operator" '|'
  153              | "operator" '^'
  154              | "++" "operator"
  155              | "--" "operator"
  156              | "operator" "++"
  157              | "operator" "--"
  158              | "operator" "<<"
  159              | "operator" ">>"
  160              | "operator" "<<="
  161              | "operator" ">>="
  162              | "operator" "<<<"
  163              | "operator" ">>>"
  164              | "operator" "<<<="
  165              | "operator" ">>>="
  166              | "operator" '[' ']'
  167              | "operator" "?[" ']'
  168              | "operator" '.'
  169              | "operator" "?."
  170              | "operator" '.' "name"
  171              | "operator" '.' "name" ":="
  172              | "operator" "?." "name"
  173              | "operator" ":="
  174              | "operator" "delete"
  175              | "operator" "??"
  176              | "operator" "is"
  177              | "operator" "as"
  178              | "operator" "is" "name"
  179              | "operator" "as" "name"
  180              | "operator" '?' "as"
  181              | "operator" '?' "as" "name"
  182              | "bool"
  183              | "string"
  184              | "int"
  185              | "int2"
  186              | "int3"
  187              | "int4"
  188              | "uint"
  189              | "uint2"
  190              | "uint3"
  191              | "uint4"
  192              | "float"
  193              | "float2"
  194              | "float3"
  195              | "float4"
  196              | "range"
  197              | "urange"
  198              | "range64"
  199              | "urange64"
  200              | "int64"
  201              | "uint64"
  202              | "double"
  203              | "int8"
  204              | "uint8"
  205              | "int16"
  206              | "uint16"

  207 global_function_declaration: optional_annotation_list "def" function_declaration

  208 optional_public_or_private_function: %empty
  209                                    | "private"
  210                                    | "public"

  211 function_declaration_header: function_name optional_function_argument_list optional_function_type

  212 $@5: %empty

  213 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  214 expression_block: '{' expressions '}'
  215                 | '{' expressions '}' "finally" '{' expressions '}'

  216 expression_any: ';'
  217               | expr_pipe
  218               | expr_keyword
  219               | expr_assign_pipe
  220               | expr_assign ';'
  221               | expression_delete ';'
  222               | expression_let
  223               | expression_while_loop
  224               | expression_unsafe
  225               | expression_with
  226               | expression_with_alias
  227               | expression_for_loop
  228               | expression_break ';'
  229               | expression_continue ';'
  230               | expression_return
  231               | expression_yield
  232               | expression_if_then_else
  233               | expression_try_catch
  234               | expression_label ';'
  235               | expression_goto ';'
  236               | "pass" ';'

  237 expressions: %empty
  238            | expressions expression_any
  239            | expressions error

  240 expr_keyword: "keyword" expr expression_block

  241 $@6: %empty

  242 $@7: %empty

  243 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr

  244 expr_pipe: expr_assign " <|" expr_block
  245          | "@ <|" expr_block
  246          | "@@ <|" expr_block
  247          | "$ <|" expr_block

  248 name_in_namespace: "name"
  249                  | "name" "::" "name"
  250                  | "::" "name"

  251 expression_delete: "delete" expr
  252                  | "delete" "explicit" expr

  253 $@8: %empty

  254 $@9: %empty

  255 new_type_declaration: '<' $@8 type_declaration '>' $@9
  256                     | structure_type_declaration

  257 expr_new: "new" new_type_declaration
  258         | "new" new_type_declaration '(' ')'
  259         | "new" new_type_declaration '(' expr_list ')'
  260         | "new" make_decl

  261 expression_break: "break"

  262 expression_continue: "continue"

  263 expression_return_no_pipe: "return"
  264                          | "return" expr_list
  265                          | "return" "<-" expr_list

  266 expression_return: expression_return_no_pipe ';'
  267                  | "return" expr_pipe
  268                  | "return" "<-" expr_pipe

  269 expression_yield_no_pipe: "yield" expr
  270                         | "yield" "<-" expr

  271 expression_yield: expression_yield_no_pipe ';'
  272                 | "yield" expr_pipe
  273                 | "yield" "<-" expr_pipe

  274 expression_try_catch: "try" expression_block "recover" expression_block

  275 kwd_let: "let"
  276        | "var"

  277 optional_in_scope: "inscope"
  278                  | %empty

  279 tuple_expansion: "name"
  280                | tuple_expansion ',' "name"

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  282                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  283 expression_let: kwd_let optional_in_scope let_variable_declaration
  284               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  285 $@10: %empty

  286 $@11: %empty

  287 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr

  288 $@12: %empty

  289 $@13: %empty

  290 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr

  291 $@14: %empty

  292 $@15: %empty

  293 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr

  294 $@16: %empty

  295 $@17: %empty

  296 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17

  297 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  298               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  299               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  300 expr_list: expr
  301          | expr_list ',' expr

  302 block_or_simple_block: expression_block
  303                      | "=>" expr
  304                      | "=>" "<-" expr

  305 block_or_lambda: '$'
  306                | '@'
  307                | '@' '@'

  308 capture_entry: '&' "name"
  309              | '=' "name"
  310              | "<-" "name"
  311              | ":=" "name"

  312 capture_list: capture_entry
  313             | capture_list ',' capture_entry

  314 optional_capture_list: %empty
  315                      | "[[" capture_list ']' ']'

  316 expr_block: expression_block
  317           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  318 expr_numeric_const: "integer constant"
  319                   | "unsigned integer constant"
  320                   | "long integer constant"
  321                   | "unsigned long integer constant"
  322                   | "unsigned int8 constant"
  323                   | "floating point constant"
  324                   | "double constant"

  325 expr_assign: expr
  326            | expr '=' expr
  327            | expr "<-" expr
  328            | expr ":=" expr
  329            | expr "&=" expr
  330            | expr "|=" expr
  331            | expr "^=" expr
  332            | expr "&&=" expr
  333            | expr "||=" expr
  334            | expr "^^=" expr
  335            | expr "+=" expr
  336            | expr "-=" expr
  337            | expr "*=" expr
  338            | expr "/=" expr
  339            | expr "%=" expr
  340            | expr "<<=" expr
  341            | expr ">>=" expr
  342            | expr "<<<=" expr
  343            | expr ">>>=" expr

  344 expr_assign_pipe: expr '=' "@ <|" expr_block
  345                 | expr '=' "@@ <|" expr_block
  346                 | expr '=' "$ <|" expr_block
  347                 | expr "<-" "@ <|" expr_block
  348                 | expr "<-" "@@ <|" expr_block
  349                 | expr "<-" "$ <|" expr_block

  350 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  351                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  352 expr_method_call: expr "->" "name" '(' ')'
  353                 | expr "->" "name" '(' expr_list ')'

  354 func_addr_name: name_in_namespace
  355               | "$i" '(' expr ')'

  356 func_addr_expr: '@' '@' func_addr_name

  357 $@18: %empty

  358 $@19: %empty

  359 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name

  360 $@20: %empty

  361 $@21: %empty

  362 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

  363 expr_field: expr '.' "name"
  364           | expr '.' '.' "name"

  365 $@22: %empty

  366 $@23: %empty

  367 expr_field: expr '.' $@22 error $@23

  368 expr: "null"
  369     | name_in_namespace
  370     | expr_numeric_const
  371     | expr_reader
  372     | string_builder
  373     | make_decl
  374     | "true"
  375     | "false"
  376     | expr_field
  377     | expr_mtag
  378     | '!' expr
  379     | '~' expr
  380     | '+' expr
  381     | '-' expr
  382     | expr "<<" expr
  383     | expr ">>" expr
  384     | expr "<<<" expr
  385     | expr ">>>" expr
  386     | expr '+' expr
  387     | expr '-' expr
  388     | expr '*' expr
  389     | expr '/' expr
  390     | expr '%' expr
  391     | expr '<' expr
  392     | expr '>' expr
  393     | expr "==" expr
  394     | expr "!=" expr
  395     | expr "<=" expr
  396     | expr ">=" expr
  397     | expr '&' expr
  398     | expr '|' expr
  399     | expr '^' expr
  400     | expr "&&" expr
  401     | expr "||" expr
  402     | expr "^^" expr
  403     | expr ".." expr
  404     | "++" expr
  405     | "--" expr
  406     | expr "++"
  407     | expr "--"
  408     | '(' expr ')'
  409     | expr '[' expr ']'
  410     | expr '.' '[' expr ']'
  411     | expr "?[" expr ']'
  412     | expr '.' "?[" expr ']'
  413     | expr "?." "name"
  414     | expr '.' "?." "name"
  415     | func_addr_expr
  416     | name_in_namespace '(' ')'
  417     | name_in_namespace '(' expr_list ')'
  418     | basic_type_declaration '(' ')'
  419     | basic_type_declaration '(' expr_list ')'
  420     | '*' expr
  421     | "deref" '(' expr ')'
  422     | "addr" '(' expr ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  424     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  425     | expr "??" expr
  426     | expr '?' expr ':' expr

  427 $@24: %empty

  428 $@25: %empty

  429 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr "is" basic_type_declaration
  431     | expr "is" "name"
  432     | expr "as" "name"

  433 $@26: %empty

  434 $@27: %empty

  435 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr "as" basic_type_declaration
  437     | expr '?' "as" "name"

  438 $@28: %empty

  439 $@29: %empty

  440 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr '?' "as" basic_type_declaration
  442     | expr_type_info
  443     | expr_type_decl
  444     | expr_cast
  445     | expr_new
  446     | expr_method_call
  447     | expr_named_call
  448     | expr_block
  449     | expr "<|" expr
  450     | expr "|>" expr
  451     | expr "|>" basic_type_declaration
  452     | name_in_namespace "name"
  453     | "unsafe" '(' expr ')'
  454     | expression_keyword

  455 expr_mtag: "$$" '(' expr ')'
  456          | "$i" '(' expr ')'
  457          | "$v" '(' expr ')'
  458          | "$b" '(' expr ')'
  459          | "$a" '(' expr ')'
  460          | "..."
  461          | "$c" '(' expr ')' '(' ')'
  462          | "$c" '(' expr ')' '(' expr_list ')'
  463          | expr '.' "$f" '(' expr ')'
  464          | expr "?." "$f" '(' expr ')'
  465          | expr '.' '.' "$f" '(' expr ')'
  466          | expr '.' "?." "$f" '(' expr ')'
  467          | expr "as" "$f" '(' expr ')'
  468          | expr '?' "as" "$f" '(' expr ')'
  469          | expr "is" "$f" '(' expr ')'
  470          | '@' '@' "$c" '(' expr ')'

  471 optional_field_annotation: %empty
  472                          | "[[" annotation_argument_list ']' ']'

  473 optional_override: %empty
  474                  | "override"
  475                  | "sealed"

  476 optional_constant: %empty
  477                  | "const"

  478 optional_public_or_private_member_variable: %empty
  479                                           | "public"
  480                                           | "private"

  481 optional_static_member_variable: %empty
  482                                | "static"

  483 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  484 struct_variable_declaration_list: %empty

  485 $@30: %empty

  486 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';'

  487 $@31: %empty

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'

  489 $@32: %empty

  490 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  491                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  492 function_argument_declaration: optional_field_annotation variable_declaration
  493                              | optional_field_annotation "var" variable_declaration
  494                              | "$a" '(' expr ')'

  495 function_argument_list: function_argument_declaration
  496                       | function_argument_list ';' function_argument_declaration

  497 tuple_type: type_declaration
  498           | "name" ':' type_declaration

  499 tuple_type_list: tuple_type
  500                | tuple_type_list ';' tuple_type

  501 tuple_alias_type_list: %empty
  502                      | tuple_alias_type_list ';'
  503                      | tuple_alias_type_list tuple_type ';'

  504 variant_type: "name" ':' type_declaration

  505 variant_type_list: variant_type
  506                  | variant_type_list ';' variant_type

  507 variant_alias_type_list: %empty
  508                        | variant_alias_type_list ';'
  509                        | variant_alias_type_list variant_type ';'

  510 copy_or_move: '='
  511             | "<-"

  512 variable_declaration: variable_name_with_pos_list
  513                     | variable_name_with_pos_list '&'
  514                     | variable_name_with_pos_list ':' type_declaration
  515                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  516                     | variable_name_with_pos_list copy_or_move expr
  517                     | variable_name_with_pos_list copy_or_move expr_pipe

  518 copy_or_move_or_clone: '='
  519                      | "<-"
  520                      | ":="

  521 optional_ref: %empty
  522             | '&'

  523 let_variable_name_with_pos_list: "name"
  524                                | "$i" '(' expr ')'
  525                                | "name" "aka" "name"
  526                                | let_variable_name_with_pos_list ',' "name"
  527                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  528 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  529                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  530                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  531                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  532                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  533 global_variable_declaration_list: %empty

  534 $@33: %empty

  535 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration

  536 optional_shared: %empty
  537                | "shared"

  538 optional_public_or_private_variable: %empty
  539                                    | "private"
  540                                    | "public"

  541 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  542 $@34: %empty

  543 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

  544 enum_list: %empty
  545          | enum_list ';'
  546          | enum_list "name" ';'
  547          | enum_list "name" '=' expr ';'

  548 optional_public_or_private_alias: %empty
  549                                 | "private"
  550                                 | "public"

  551 $@35: %empty

  552 single_alias: optional_public_or_private_alias "name" $@35 '=' type_declaration

  553 alias_list: single_alias ';'
  554           | alias_list single_alias ';'

  555 alias_declaration: "typedef" '{' alias_list '}'

  556 $@36: %empty

  557 alias_declaration: "typedef" $@36 single_alias ';'

  558 optional_public_or_private_enum: %empty
  559                                | "private"
  560                                | "public"

  561 enum_name: "name"

  562 $@37: %empty

  563 $@38: %empty

  564 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'

  565 $@39: %empty

  566 $@40: %empty

  567 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

  568 optional_structure_parent: %empty
  569                          | ':' name_in_namespace

  570 optional_sealed: %empty
  571                | "sealed"

  572 structure_name: optional_sealed "name" optional_structure_parent

  573 class_or_struct: "class"
  574                | "struct"

  575 optional_public_or_private_structure: %empty
  576                                     | "private"
  577                                     | "public"

  578 $@41: %empty

  579 $@42: %empty

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

  581 variable_name_with_pos_list: "name"
  582                            | "$i" '(' expr ')'
  583                            | "name" "aka" "name"
  584                            | variable_name_with_pos_list ',' "name"
  585                            | variable_name_with_pos_list ',' "name" "aka" "name"

  586 basic_type_declaration: "bool"
  587                       | "string"
  588                       | "int"
  589                       | "int8"
  590                       | "int16"
  591                       | "int64"
  592                       | "int2"
  593                       | "int3"
  594                       | "int4"
  595                       | "uint"
  596                       | "uint8"
  597                       | "uint16"
  598                       | "uint64"
  599                       | "uint2"
  600                       | "uint3"
  601                       | "uint4"
  602                       | "float"
  603                       | "float2"
  604                       | "float3"
  605                       | "float4"
  606                       | "void"
  607                       | "range"
  608                       | "urange"
  609                       | "range64"
  610                       | "urange64"
  611                       | "double"
  612                       | "bitfield"

  613 enum_basic_type_declaration: "int"
  614                            | "int8"
  615                            | "int16"
  616                            | "uint"
  617                            | "uint8"
  618                            | "uint16"

  619 structure_type_declaration: name_in_namespace

  620 auto_type_declaration: "auto"
  621                      | "auto" '(' "name" ')'
  622                      | "$t" '(' expr ')'

  623 bitfield_bits: "name"
  624              | bitfield_bits ';' "name"

  625 bitfield_alias_bits: %empty
  626                    | bitfield_alias_bits ';'
  627                    | bitfield_alias_bits "name" ';'

  628 $@43: %empty

  629 $@44: %empty

  630 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' $@44

  631 table_type_pair: type_declaration
  632                | type_declaration ';' type_declaration

  633 type_declaration_no_options: basic_type_declaration
  634                            | auto_type_declaration
  635                            | bitfield_type_declaration
  636                            | structure_type_declaration
  637                            | type_declaration_no_options '[' expr ']'
  638                            | type_declaration_no_options '[' ']'
  639                            | type_declaration_no_options '-' '[' ']'
  640                            | type_declaration_no_options "explicit"
  641                            | type_declaration_no_options "const"
  642                            | type_declaration_no_options '-' "const"
  643                            | type_declaration_no_options '&'
  644                            | type_declaration_no_options '-' '&'
  645                            | type_declaration_no_options '#'
  646                            | type_declaration_no_options "implicit"
  647                            | type_declaration_no_options '-' '#'
  648                            | type_declaration_no_options "==" "const"
  649                            | type_declaration_no_options "==" '&'
  650                            | type_declaration_no_options '?'

  651 $@45: %empty

  652 $@46: %empty

  653 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' $@46
  654                            | type_declaration_no_options "??"

  655 $@47: %empty

  656 $@48: %empty

  657 type_declaration_no_options: "array" '<' $@47 type_declaration '>' $@48

  658 $@49: %empty

  659 $@50: %empty

  660 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' $@50

  661 $@51: %empty

  662 $@52: %empty

  663 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' $@52
  664                            | "block"

  665 $@53: %empty

  666 $@54: %empty

  667 type_declaration_no_options: "block" '<' $@53 type_declaration '>' $@54

  668 $@55: %empty

  669 $@56: %empty

  670 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' $@56
  671                            | "function"

  672 $@57: %empty

  673 $@58: %empty

  674 type_declaration_no_options: "function" '<' $@57 type_declaration '>' $@58

  675 $@59: %empty

  676 $@60: %empty

  677 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' $@60
  678                            | "lambda"

  679 $@61: %empty

  680 $@62: %empty

  681 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' $@62

  682 $@63: %empty

  683 $@64: %empty

  684 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' $@64

  685 $@65: %empty

  686 $@66: %empty

  687 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' $@66

  688 $@67: %empty

  689 $@68: %empty

  690 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' $@68

  691 type_declaration: type_declaration_no_options
  692                 | type_declaration '|' type_declaration_no_options
  693                 | type_declaration '|' '#'

  694 $@69: %empty

  695 $@70: %empty

  696 $@71: %empty

  697 $@72: %empty

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 tuple_alias_type_list $@72 '}'

  699 $@73: %empty

  700 $@74: %empty

  701 $@75: %empty

  702 $@76: %empty

  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 variant_alias_type_list $@76 '}'

  704 $@77: %empty

  705 $@78: %empty

  706 $@79: %empty

  707 $@80: %empty

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 bitfield_alias_bits $@80 '}'

  709 make_decl: make_struct_decl
  710          | make_dim_decl
  711          | make_table_decl
  712          | array_comprehension
  713          | make_tuple_call

  714 make_struct_fields: "name" copy_or_move expr
  715                   | "name" ":=" expr
  716                   | make_struct_fields ',' "name" copy_or_move expr
  717                   | make_struct_fields ',' "name" ":=" expr
  718                   | "$f" '(' expr ')' copy_or_move expr
  719                   | "$f" '(' expr ')' ":=" expr
  720                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  721                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  722 make_struct_dim: make_struct_fields
  723                | make_struct_dim ';' make_struct_fields

  724 optional_block: %empty
  725               | "where" expr_block

  726 optional_trailing_semicolon_cur_cur: '}' '}'
  727                                    | ";}}"

  728 optional_trailing_semicolon_cur_sqr: '}' ']'
  729                                    | ";}]"

  730 optional_trailing_semicolon_sqr_sqr: ']' ']'
  731                                    | ";]]"

  732 optional_trailing_delim_sqr_sqr: ']' ']'
  733                                | ";]]"
  734                                | ",]]"

  735 optional_trailing_delim_cur_sqr: '}' ']'
  736                                | ";}]"
  737                                | ",}]"

  738 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  739                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  740                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  741                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  742                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  743                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  744 make_tuple: expr
  745           | expr "=>" expr
  746           | make_tuple ',' expr

  747 make_map_tuple: expr "=>" expr
  748               | expr

  749 make_tuple_call: "tuple" '(' expr_list ')'

  750 make_dim: make_tuple
  751         | make_dim ';' make_tuple

  752 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  753              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  754              | "array" '(' expr_list ')'

  755 $@81: %empty

  756 $@82: %empty

  757 make_dim_decl: "array" '<' $@81 type_declaration_no_options '>' $@82 '(' expr_list ')'
  758              | "fixed_array" '(' expr_list ')'

  759 $@83: %empty

  760 $@84: %empty

  761 make_dim_decl: "fixed_array" '<' $@83 type_declaration_no_options '>' $@84 '(' expr_list ')'

  762 make_table: make_map_tuple
  763           | make_table ';' make_map_tuple

  764 expr_map_tuple_list: make_map_tuple
  765                    | expr_map_tuple_list ',' make_map_tuple

  766 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur
  767                | "table" '(' expr_map_tuple_list ')'
  768                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  769                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

  770 array_comprehension_where: %empty
  771                          | ';' "where" expr

  772 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  773                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 107 123 378
    '#' (35) 645 647 693
    '$' (36) 20 305
    '%' (37) 35 41 143 390
    '&' (38) 151 308 397 513 522 643 644 649
    '(' (40) 98 105 111 118 119 258 259 297 298 299 350 351 352 353 355 408 416 417 418 419 421 422 423 424 453 455 456 457 458 459 461 462 463 464 465 466 467 468 469 470 494 524 582 621 622 718 719 720 721 740 741 743 749 754 757 758 761 767 768 769
    ')' (41) 98 105 111 118 119 258 259 297 298 299 350 351 352 353 355 408 416 417 418 419 421 422 423 424 453 455 456 457 458 459 461 462 463 464 465 466 467 468 469 470 494 524 582 621 622 718 719 720 721 740 741 743 749 754 757 758 761 767 768 769
    '*' (42) 141 388 420
    '+' (43) 139 380 386
    ',' (44) 50 87 100 114 280 301 313 351 526 527 584 585 716 717 720 721 746 765
    '-' (45) 140 381 387 639 642 644 647
    '.' (46) 42 168 170 171 363 364 367 410 412 414 463 465 466
    '/' (47) 43 142 389
    ':' (58) 52 53 121 281 426 498 504 514 515 528 529 530 567 569
    ';' (59) 15 16 73 74 216 220 221 228 229 234 235 236 266 271 281 282 299 486 488 491 496 500 502 503 506 508 509 528 529 531 545 546 547 553 554 557 624 626 627 632 723 751 763 769 771 772 773
    '<' (60) 144 243 255 287 290 293 296 298 299 359 362 391 423 424 429 435 440 630 653 657 660 663 667 670 674 677 681 684 687 690 757 761 768 769
    '=' (61) 79 91 92 93 94 95 96 98 309 326 344 345 346 510 518 547 552
    '>' (62) 145 243 255 287 290 293 296 298 299 359 362 392 423 424 429 435 440 630 653 657 660 663 667 670 674 677 681 684 687 690 757 761 768 769
    '?' (63) 180 181 426 437 440 441 468 650
    '@' (64) 306 307 356 359 362 470
    '[' (91) 116 166 350 351 409 410 491 637 638 639
    ']' (93) 116 166 167 281 282 315 350 351 409 410 411 412 472 491 637 638 639 728 730 732 735 772 773
    '^' (94) 153 399
    '{' (123) 214 215 541 555 564 567 580 698 703 708
    '|' (124) 152 398 692 693
    '}' (125) 214 215 541 555 564 567 580 698 703 708 726 728 735 773
    '~' (126) 124 379
    error (256) 239 367
    "lexer error" (258)
    "struct" (259) 574
    "class" (260) 573
    "let" (261) 275
    "def" (262) 207 488 490
    "while" (263) 76
    "if" (264) 61 73
    "static_if" (265) 62
    "else" (266) 59 65
    "for" (267) 74 772 773
    "recover" (268) 274
    "true" (269) 84 95 374
    "false" (270) 85 96 375
    "new" (271) 257 258 259 260
    "typeinfo" (272) 297 298 299
    "type" (273) 89 296 429 435 440
    "in" (274) 74 90 772 773
    "is" (275) 176 178 429 430 431 469
    "as" (276) 45 177 179 180 181 432 435 436 437 440 441 467 468
    "elif" (277) 56
    "static_elif" (278) 57
    "array" (279) 657 754 757
    "return" (280) 263 264 265 267 268
    "null" (281) 368
    "break" (282) 261
    "try" (283) 274
    "options" (284) 36
    "table" (285) 660 767 768 769
    "expect" (286) 48
    "const" (287) 477 641 642 648
    "require" (288) 37 102
    "operator" (289) 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181
    "enum" (290) 564 567
    "finally" (291) 215
    "delete" (292) 174 251 252
    "deref" (293) 421
    "typedef" (294) 555 557
    "with" (295) 77
    "aka" (296) 525 527 583 585
    "assume" (297) 79
    "cast" (298) 287
    "override" (299) 474
    "abstract" (300) 488
    "upcast" (301) 290
    "iterator" (302) 663
    "var" (303) 276 493
    "addr" (304) 422
    "continue" (305) 262
    "where" (306) 725 771
    "pass" (307) 236
    "reinterpret" (308) 293
    "module" (309) 22
    "public" (310) 18 47 210 479 540 550 560 577
    "label" (311) 53 54
    "goto" (312) 54 55
    "implicit" (313) 646
    "explicit" (314) 252 640
    "shared" (315) 537
    "private" (316) 19 103 209 480 539 549 559 576
    "smart_ptr" (317) 653
    "unsafe" (318) 75 453
    "inscope" (319) 277
    "static" (320) 482
    "fixed_array" (321) 758 761
    "bool" (322) 182 586
    "void" (323) 606
    "string" (324) 183 587
    "auto" (325) 620 621
    "int" (326) 184 588 613
    "int2" (327) 185 592
    "int3" (328) 186 593
    "int4" (329) 187 594
    "uint" (330) 188 595 616
    "bitfield" (331) 612 630 708
    "uint2" (332) 189 599
    "uint3" (333) 190 600
    "uint4" (334) 191 601
    "float" (335) 192 602
    "float2" (336) 193 603
    "float3" (337) 194 604
    "float4" (338) 195 605
    "range" (339) 196 607
    "urange" (340) 197 608
    "range64" (341) 198 609
    "urange64" (342) 199 610
    "block" (343) 664 667 670
    "int64" (344) 200 591
    "uint64" (345) 201 598
    "double" (346) 202 611
    "function" (347) 671 674 677
    "lambda" (348) 678 681 684
    "int8" (349) 203 589 614
    "uint8" (350) 204 596 617
    "int16" (351) 205 590 615
    "uint16" (352) 206 597 618
    "tuple" (353) 687 698 749
    "variant" (354) 690 703
    "generator" (355) 423 424
    "yield" (356) 269 270 272 273
    "sealed" (357) 475 571
    "+=" (358) 125 335
    "-=" (359) 126 336
    "/=" (360) 128 338
    "*=" (361) 127 337
    "%=" (362) 129 339
    "&=" (363) 130 329
    "|=" (364) 131 330
    "^=" (365) 132 331
    "<<" (366) 158 382
    ">>" (367) 159 383
    "++" (368) 154 156 404 406
    "--" (369) 155 157 405 407
    "<=" (370) 149 395
    "<<=" (371) 160 340
    ">>=" (372) 161 341
    ">=" (373) 150 396
    "==" (374) 147 393 648 649
    "!=" (375) 148 394
    "->" (376) 352 353
    "<-" (377) 265 268 270 273 304 310 327 347 348 349 511 519
    "??" (378) 175 425 654
    "?." (379) 169 172 413 414 464 466
    "?[" (380) 167 411 412
    "<|" (381) 449
    " <|" (382) 244
    "$ <|" (383) 247 346 349
    "@ <|" (384) 245 344 347
    "@@ <|" (385) 246 345 348
    "|>" (386) 112 450 451
    ":=" (387) 171 173 311 328 520 715 717 719 721
    "<<<" (388) 162 384
    ">>>" (389) 163 385
    "<<<=" (390) 164 342
    ">>>=" (391) 165 343
    "=>" (392) 303 304 745 747
    "::" (393) 249 250
    "&&" (394) 108 136 400
    "||" (395) 109 137 401
    "^^" (396) 110 138 402
    "&&=" (397) 133 332
    "||=" (398) 134 333
    "^^=" (399) 135 334
    ".." (400) 146 403
    "$$" (401) 455
    "$i" (402) 355 456 524 582
    "$v" (403) 457
    "$b" (404) 458
    "$a" (405) 459 494
    "$t" (406) 622
    "$c" (407) 461 462 470
    "$f" (408) 463 464 465 466 467 468 469 718 719 720 721
    "..." (409) 460
    "[[" (410) 281 282 315 472 738 739 740 741 752 772
    "[{" (411) 742 743 753 773
    "{{" (412) 766
    "integer constant" <i> (413) 51 52 53 54 82 93 318
    "long integer constant" <i64> (414) 320
    "unsigned integer constant" <ui> (415) 319
    "unsigned long integer constant" <ui64> (416) 321
    "unsigned int8 constant" <ui> (417) 322
    "floating point constant" <fd> (418) 83 94 323
    "double constant" <d> (419) 324
    "name" <s> (420) 21 38 45 79 81 88 92 122 170 171 172 178 179 181 248 249 250 279 280 298 299 308 309 310 311 352 353 363 364 413 414 431 432 437 452 498 504 523 525 526 527 546 547 552 561 572 581 583 584 585 621 623 624 627 698 703 708 714 715 716 717
    "keyword" <s> (421) 39 240 243
    "start of the string" (422) 27 31
    STRING_CHARACTER <ch> (423) 23 25 32 33
    STRING_CHARACTER_ESC (424) 24 26
    "end of the string" (425) 27 31
    "{" (426) 30
    "}" (427) 30
    "end of failed eader macro" (428)
    ";}}" (429) 727
    ";}]" (430) 729 736
    ";]]" (431) 731 733
    ",]]" (432) 734
    ",}]" (433) 737
    UNARY_MINUS (434)
    UNARY_PLUS (435)
    PRE_INC (436)
    PRE_DEC (437)
    POST_INC (438)
    POST_DEC (439)
    DEREF (440)


Nonterminals, with rules where they appear

    $accept (213)
        on left: 0
    program (214)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (215)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (216)
        on left: 17 18 19
        on right: 22
    module_name <s> (217)
        on left: 20 21
        on right: 22
    module_declaration (218)
        on left: 22
        on right: 2
    character_sequence <s> (219)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (220)
        on left: 27
        on right: 80 91
    string_builder_body <pExpression> (221)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (222)
        on left: 31
        on right: 372
    reader_character_sequence (223)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (224)
        on left: 35
        on right: 16 371
    $@1 (225)
        on left: 34
        on right: 35
    options_declaration (226)
        on left: 36
        on right: 9
    require_declaration (227)
        on left: 37
        on right: 8
    keyword_or_name <s> (228)
        on left: 38 39
        on right: 40 42 43
    require_module_name <s> (229)
        on left: 40 41 42 43
        on right: 41 42 43 44 45
    require_module (230)
        on left: 44 45
        on right: 37
    is_public_module <b> (231)
        on left: 46 47
        on right: 44 45
    expect_declaration (232)
        on left: 48
        on right: 7
    expect_list (233)
        on left: 49 50
        on right: 48 50
    expect_error (234)
        on left: 51 52
        on right: 49 50
    expression_label <pExpression> (235)
        on left: 53
        on right: 234
    expression_goto <pExpression> (236)
        on left: 54 55
        on right: 235
    elif_or_static_elif <b> (237)
        on left: 56 57
        on right: 60
    expression_else <pExpression> (238)
        on left: 58 59 60
        on right: 60 71
    if_or_static_if <b> (239)
        on left: 61 62
        on right: 71
    expression_else_one_liner <pExpression> (240)
        on left: 63 65
        on right: 73
    $@2 (241)
        on left: 64
        on right: 65
    expression_if_one_liner <pExpression> (242)
        on left: 66 67 68 69 70
        on right: 65 73
    expression_if_then_else <pExpression> (243)
        on left: 71 73
        on right: 232
    $@3 (244)
        on left: 72
        on right: 73
    expression_for_loop <pExpression> (245)
        on left: 74
        on right: 227
    expression_unsafe <pExpression> (246)
        on left: 75
        on right: 224
    expression_while_loop <pExpression> (247)
        on left: 76
        on right: 223
    expression_with <pExpression> (248)
        on left: 77
        on right: 225
    expression_with_alias <pExpression> (249)
        on left: 79
        on right: 226
    $@4 (250)
        on left: 78
        on right: 79
    annotation_argument_value <aa> (251)
        on left: 80 81 82 83 84 85
        on right: 86 87
    annotation_argument_value_list <aaList> (252)
        on left: 86 87
        on right: 87 98
    annotation_argument_name <s> (253)
        on left: 88 89 90
        on right: 91 92 93 94 95 96 97 98
    annotation_argument <aa> (254)
        on left: 91 92 93 94 95 96 97 98
        on right: 99 100
    annotation_argument_list <aaList> (255)
        on left: 99 100
        on right: 36 100 105 472
    annotation_declaration_name <s> (256)
        on left: 101 102 103
        on right: 104 105
    annotation_declaration_basic <fa> (257)
        on left: 104 105
        on right: 106
    annotation_declaration <fa> (258)
        on left: 106 107 108 109 110 111 112
        on right: 107 108 109 110 111 112 113 114
    annotation_list <faList> (259)
        on left: 113 114
        on right: 114 116 491
    optional_annotation_list <faList> (260)
        on left: 115 116
        on right: 207 317 488 490 564 567 580
    optional_function_argument_list <pVarDeclList> (261)
        on left: 117 118 119
        on right: 211 317 362 670 677 684
    optional_function_type <pTypeDecl> (262)
        on left: 120 121
        on right: 211 317 362 670 677 684
    function_name <s> (263)
        on left: 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
        on right: 211
    global_function_declaration (264)
        on left: 207
        on right: 6
    optional_public_or_private_function <b> (265)
        on left: 208 209 210
        on right: 213
    function_declaration_header <pFuncDecl> (266)
        on left: 211
        on right: 213 488 490
    function_declaration <pFuncDecl> (267)
        on left: 213
        on right: 207
    $@5 (268)
        on left: 212
        on right: 213
    expression_block <pExpression> (269)
        on left: 214 215
        on right: 59 60 71 74 75 76 77 213 240 274 302 316 490
    expression_any <pExpression> (270)
        on left: 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236
        on right: 238
    expressions <pExpression> (271)
        on left: 237 238 239
        on right: 214 215 238 239
    expr_keyword <pExpression> (272)
        on left: 240
        on right: 218
    expression_keyword <pExpression> (273)
        on left: 243
        on right: 454
    $@6 (274)
        on left: 241
        on right: 243
    $@7 (275)
        on left: 242
        on right: 243
    expr_pipe <pExpression> (276)
        on left: 244 245 246 247
        on right: 217 267 268 272 273 517 530 532
    name_in_namespace <s> (277)
        on left: 248 249 250
        on right: 35 101 297 298 299 350 351 354 369 416 417 452 569 619
    expression_delete <pExpression> (278)
        on left: 251 252
        on right: 221
    new_type_declaration <pTypeDecl> (279)
        on left: 255 256
        on right: 257 258 259
    $@8 (280)
        on left: 253
        on right: 255
    $@9 (281)
        on left: 254
        on right: 255
    expr_new <pExpression> (282)
        on left: 257 258 259 260
        on right: 445
    expression_break <pExpression> (283)
        on left: 261
        on right: 69 228
    expression_continue <pExpression> (284)
        on left: 262
        on right: 70 229
    expression_return_no_pipe <pExpression> (285)
        on left: 263 264 265
        on right: 67 266
    expression_return <pExpression> (286)
        on left: 266 267 268
        on right: 230
    expression_yield_no_pipe <pExpression> (287)
        on left: 269 270
        on right: 68 271
    expression_yield <pExpression> (288)
        on left: 271 272 273
        on right: 231
    expression_try_catch <pExpression> (289)
        on left: 274
        on right: 233
    kwd_let <b> (290)
        on left: 275 276
        on right: 283 284 541 543
    optional_in_scope <b> (291)
        on left: 277 278
        on right: 283 284
    tuple_expansion <pNameList> (292)
        on left: 279 280
        on right: 280 281 282
    tuple_expansion_variable_declaration <pVarDecl> (293)
        on left: 281 282
        on right: 284
    expression_let <pExpression> (294)
        on left: 283 284
        on right: 222
    expr_cast <pExpression> (295)
        on left: 287 290 293
        on right: 444
    $@10 (296)
        on left: 285
        on right: 287
    $@11 (297)
        on left: 286
        on right: 287
    $@12 (298)
        on left: 288
        on right: 290
    $@13 (299)
        on left: 289
        on right: 290
    $@14 (300)
        on left: 291
        on right: 293
    $@15 (301)
        on left: 292
        on right: 293
    expr_type_decl <pExpression> (302)
        on left: 296
        on right: 443
    $@16 (303)
        on left: 294
        on right: 296
    $@17 (304)
        on left: 295
        on right: 296
    expr_type_info <pExpression> (305)
        on left: 297 298 299
        on right: 442
    expr_list <pExpression> (306)
        on left: 300 301
        on right: 74 259 264 265 301 351 353 417 419 462 749 754 757 758 761 772 773
    block_or_simple_block <pExpression> (307)
        on left: 302 303 304
        on right: 317
    block_or_lambda <i> (308)
        on left: 305 306 307
        on right: 317
    capture_entry <pCapt> (309)
        on left: 308 309 310 311
        on right: 312 313
    capture_list <pCaptList> (310)
        on left: 312 313
        on right: 313 315
    optional_capture_list <pCaptList> (311)
        on left: 314 315
        on right: 317 423 424
    expr_block <pExpression> (312)
        on left: 316 317
        on right: 244 245 246 247 344 345 346 347 348 349 448 725
    expr_numeric_const <pExpression> (313)
        on left: 318 319 320 321 322 323 324
        on right: 370
    expr_assign <pExpression> (314)
        on left: 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343
        on right: 220 244
    expr_assign_pipe <pExpression> (315)
        on left: 344 345 346 347 348 349
        on right: 219
    expr_named_call <pExpression> (316)
        on left: 350 351
        on right: 447
    expr_method_call <pExpression> (317)
        on left: 352 353
        on right: 446
    func_addr_name <pExpression> (318)
        on left: 354 355
        on right: 356 359 362
    func_addr_expr <pExpression> (319)
        on left: 356 359 362
        on right: 415
    $@18 (320)
        on left: 357
        on right: 359
    $@19 (321)
        on left: 358
        on right: 359
    $@20 (322)
        on left: 360
        on right: 362
    $@21 (323)
        on left: 361
        on right: 362
    expr_field <pExpression> (324)
        on left: 363 364 367
        on right: 376
    $@22 (325)
        on left: 365
        on right: 367
    $@23 (326)
        on left: 366
        on right: 367
    expr <pExpression> (327)
        on left: 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 429 430 431 432 435 436 437 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454
        on right
    $@24 (328)
        on left: 427
        on right: 429
    $@25 (329)
        on left: 428
        on right: 429
    $@26 (330)
        on left: 433
        on right: 435
    $@27 (331)
        on left: 434
        on right: 435
    $@28 (332)
        on left: 438
        on right: 440
    $@29 (333)
        on left: 439
        on right: 440
    expr_mtag <pExpression> (334)
        on left: 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470
        on right: 377
    optional_field_annotation <aaList> (335)
        on left: 471 472
        on right: 483 492 493 535 543
    optional_override <i> (336)
        on left: 473 474 475
        on right: 483 490
    optional_constant <b> (337)
        on left: 476 477
        on right: 488 490
    optional_public_or_private_member_variable <b> (338)
        on left: 478 479 480
        on right: 483 488 490
    optional_static_member_variable <b> (339)
        on left: 481 482
        on right: 483 490
    structure_variable_declaration <pVarDecl> (340)
        on left: 483
        on right: 486
    struct_variable_declaration_list <pVarDeclList> (341)
        on left: 484 486 488 490 491
        on right: 486 488 490 491 580
    $@30 (342)
        on left: 485
        on right: 486
    $@31 (343)
        on left: 487
        on right: 488
    $@32 (344)
        on left: 489
        on right: 490
    function_argument_declaration <pVarDecl> (345)
        on left: 492 493 494
        on right: 495 496
    function_argument_list <pVarDeclList> (346)
        on left: 495 496
        on right: 119 496
    tuple_type <pVarDecl> (347)
        on left: 497 498
        on right: 499 500 503
    tuple_type_list <pVarDeclList> (348)
        on left: 499 500
        on right: 500 687
    tuple_alias_type_list <pVarDeclList> (349)
        on left: 501 502 503
        on right: 502 503 698
    variant_type <pVarDecl> (350)
        on left: 504
        on right: 505 506 509
    variant_type_list <pVarDeclList> (351)
        on left: 505 506
        on right: 506 690
    variant_alias_type_list <pVarDeclList> (352)
        on left: 507 508 509
        on right: 508 509 703
    copy_or_move <b> (353)
        on left: 510 511
        on right: 515 516 517 714 716 718 720
    variable_declaration <pVarDecl> (354)
        on left: 512 513 514 515 516 517
        on right: 483 492 493
    copy_or_move_or_clone <i> (355)
        on left: 518 519 520
        on right: 281 282 529 530 531 532
    optional_ref <b> (356)
        on left: 521 522
        on right: 282 531 532
    let_variable_name_with_pos_list <pNameWithPosList> (357)
        on left: 523 524 525 526 527
        on right: 526 527 528 529 530 531 532
    let_variable_declaration <pVarDecl> (358)
        on left: 528 529 530 531 532
        on right: 283 535 543
    global_variable_declaration_list <pVarDeclList> (359)
        on left: 533 535
        on right: 535 541
    $@33 (360)
        on left: 534
        on right: 535
    optional_shared <b> (361)
        on left: 536 537
        on right: 22 541 543
    optional_public_or_private_variable <b> (362)
        on left: 538 539 540
        on right: 541 543
    global_let (363)
        on left: 541 543
        on right: 5
    $@34 (364)
        on left: 542
        on right: 543
    enum_list <pEnum> (365)
        on left: 544 545 546 547
        on right: 545 546 547 564 567
    optional_public_or_private_alias <b> (366)
        on left: 548 549 550
        on right: 552 698 703 708
    single_alias (367)
        on left: 552
        on right: 553 554 557
    $@35 (368)
        on left: 551
        on right: 552
    alias_list (369)
        on left: 553 554
        on right: 554 555
    alias_declaration (370)
        on left: 555 557
        on right: 10
    $@36 (371)
        on left: 556
        on right: 557
    optional_public_or_private_enum <b> (372)
        on left: 558 559 560
        on right: 564 567
    enum_name <pEnum> (373)
        on left: 561
        on right: 564 567
    enum_declaration (374)
        on left: 564 567
        on right: 4
    $@37 (375)
        on left: 562
        on right: 564
    $@38 (376)
        on left: 563
        on right: 564
    $@39 (377)
        on left: 565
        on right: 567
    $@40 (378)
        on left: 566
        on right: 567
    optional_structure_parent <s> (379)
        on left: 568 569
        on right: 572
    optional_sealed <b> (380)
        on left: 570 571
        on right: 572
    structure_name <pStructure> (381)
        on left: 572
        on right: 580
    class_or_struct <b> (382)
        on left: 573 574
        on right: 580
    optional_public_or_private_structure <b> (383)
        on left: 575 576 577
        on right: 580
    structure_declaration (384)
        on left: 580
        on right: 3
    $@41 (385)
        on left: 578
        on right: 580
    $@42 (386)
        on left: 579
        on right: 580
    variable_name_with_pos_list <pNameWithPosList> (387)
        on left: 581 582 583 584 585
        on right: 74 512 513 514 515 516 517 584 585 772 773
    basic_type_declaration <type> (388)
        on left: 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612
        on right: 418 419 430 436 441 451 633
    enum_basic_type_declaration <type> (389)
        on left: 613 614 615 616 617 618
        on right: 567
    structure_type_declaration <pTypeDecl> (390)
        on left: 619
        on right: 256 636
    auto_type_declaration <pTypeDecl> (391)
        on left: 620 621 622
        on right: 634
    bitfield_bits <pNameList> (392)
        on left: 623 624
        on right: 624 630
    bitfield_alias_bits <pNameList> (393)
        on left: 625 626 627
        on right: 626 627 708
    bitfield_type_declaration <pTypeDecl> (394)
        on left: 630
        on right: 635
    $@43 (395)
        on left: 628
        on right: 630
    $@44 (396)
        on left: 629
        on right: 630
    table_type_pair <aTypePair> (397)
        on left: 631 632
        on right: 660
    type_declaration_no_options <pTypeDecl> (398)
        on left: 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 653 654 657 660 663 664 667 670 671 674 677 678 681 684 687 690
        on right: 243 281 287 290 293 359 423 424 429 528 529 530 637 638 639 640 641 642 643 644 645 646 647 648 649 650 654 691 692 738 739 740 741 742 743 752 753 757 761 768 769
    $@45 (399)
        on left: 651
        on right: 653
    $@46 (400)
        on left: 652
        on right: 653
    $@47 (401)
        on left: 655
        on right: 657
    $@48 (402)
        on left: 656
        on right: 657
    $@49 (403)
        on left: 658
        on right: 660
    $@50 (404)
        on left: 659
        on right: 660
    $@51 (405)
        on left: 661
        on right: 663
    $@52 (406)
        on left: 662
        on right: 663
    $@53 (407)
        on left: 665
        on right: 667
    $@54 (408)
        on left: 666
        on right: 667
    $@55 (409)
        on left: 668
        on right: 670
    $@56 (410)
        on left: 669
        on right: 670
    $@57 (411)
        on left: 672
        on right: 674
    $@58 (412)
        on left: 673
        on right: 674
    $@59 (413)
        on left: 675
        on right: 677
    $@60 (414)
        on left: 676
        on right: 677
    $@61 (415)
        on left: 679
        on right: 681
    $@62 (416)
        on left: 680
        on right: 681
    $@63 (417)
        on left: 682
        on right: 684
    $@64 (418)
        on left: 683
        on right: 684
    $@65 (419)
        on left: 685
        on right: 687
    $@66 (420)
        on left: 686
        on right: 687
    $@67 (421)
        on left: 688
        on right: 690
    $@68 (422)
        on left: 689
        on right: 690
    type_declaration <pTypeDecl> (423)
        on left: 691 692 693
        on right: 121 255 296 435 440 497 498 504 514 515 552 631 632 653 657 663 667 674 681 692 693
    tuple_alias_declaration (424)
        on left: 698
        on right: 12
    $@69 (425)
        on left: 694
        on right: 698
    $@70 (426)
        on left: 695
        on right: 698
    $@71 (427)
        on left: 696
        on right: 698
    $@72 (428)
        on left: 697
        on right: 698
    variant_alias_declaration (429)
        on left: 703
        on right: 11
    $@73 (430)
        on left: 699
        on right: 703
    $@74 (431)
        on left: 700
        on right: 703
    $@75 (432)
        on left: 701
        on right: 703
    $@76 (433)
        on left: 702
        on right: 703
    bitfield_alias_declaration (434)
        on left: 708
        on right: 13
    $@77 (435)
        on left: 704
        on right: 708
    $@78 (436)
        on left: 705
        on right: 708
    $@79 (437)
        on left: 706
        on right: 708
    $@80 (438)
        on left: 707
        on right: 708
    make_decl <pExpression> (439)
        on left: 709 710 711 712 713
        on right: 260 373
    make_struct_fields <pMakeStruct> (440)
        on left: 714 715 716 717 718 719 720 721
        on right: 350 351 716 717 720 721 722 723
    make_struct_dim <pExpression> (441)
        on left: 722 723
        on right: 723 738 741 742 743
    optional_block <pExpression> (442)
        on left: 724 725
        on right: 738 739 740 741 742 743
    optional_trailing_semicolon_cur_cur (443)
        on left: 726 727
        on right: 766
    optional_trailing_semicolon_cur_sqr (444)
        on left: 728 729
        on right: 753
    optional_trailing_semicolon_sqr_sqr (445)
        on left: 730 731
        on right: 752
    optional_trailing_delim_sqr_sqr (446)
        on left: 732 733 734
        on right: 738 739 740 741
    optional_trailing_delim_cur_sqr (447)
        on left: 735 736 737
        on right: 742 743
    make_struct_decl <pExpression> (448)
        on left: 738 739 740 741 742 743
        on right: 709
    make_tuple <pExpression> (449)
        on left: 744 745 746
        on right: 746 750 751
    make_map_tuple <pExpression> (450)
        on left: 747 748
        on right: 762 763 764 765
    make_tuple_call <pExpression> (451)
        on left: 749
        on right: 713
    make_dim <pExpression> (452)
        on left: 750 751
        on right: 751 752 753
    make_dim_decl <pExpression> (453)
        on left: 752 753 754 757 758 761
        on right: 710
    $@81 (454)
        on left: 755
        on right: 757
    $@82 (455)
        on left: 756
        on right: 757
    $@83 (456)
        on left: 759
        on right: 761
    $@84 (457)
        on left: 760
        on right: 761
    make_table <pExpression> (458)
        on left: 762 763
        on right: 763 766
    expr_map_tuple_list <pExpression> (459)
        on left: 764 765
        on right: 765 767 768 769
    make_table_decl <pExpression> (460)
        on left: 766 767 768 769
        on right: 711
    array_comprehension_where <pExpression> (461)
        on left: 770 771
        on right: 772 773
    array_comprehension <pExpression> (462)
        on left: 772 773
        on right: 712


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 115 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  275 kwd_let: "let" .

    $default  reduce using rule 275 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   48 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"     shift, and go to state 41
    "keyword"  shift, and go to state 42
    '%'        shift, and go to state 43

    keyword_or_name      go to state 44
    require_module_name  go to state 45
    require_module       go to state 46


State 7

  555 alias_declaration: "typedef" . '{' alias_list '}'
  557                  | "typedef" . $@36 single_alias ';'

    '{'  shift, and go to state 47

    $default  reduce using rule 556 ($@36)

    $@36  go to state 48


State 8

  276 kwd_let: "var" .

    $default  reduce using rule 276 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  708 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@77 "name" $@78 '{' $@79 bitfield_alias_bits $@80 '}'

    "public"   shift, and go to state 52
    "private"  shift, and go to state 53

    $default  reduce using rule 548 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 11

  698 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@69 "name" $@70 '{' $@71 tuple_alias_type_list $@72 '}'

    "public"   shift, and go to state 52
    "private"  shift, and go to state 53

    $default  reduce using rule 548 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 12

  703 variant_alias_declaration: "variant" . optional_public_or_private_alias $@73 "name" $@74 '{' $@75 variant_alias_type_list $@76 '}'

    "public"   shift, and go to state 52
    "private"  shift, and go to state 53

    $default  reduce using rule 548 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 14

  116 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 67
    annotation_list               go to state 68
    name_in_namespace             go to state 69


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 70


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  207 global_function_declaration: optional_annotation_list . "def" function_declaration
  564 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'
  567                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'
  580 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 71
    "class"   shift, and go to state 72
    "def"     shift, and go to state 73
    "enum"    shift, and go to state 74

    class_or_struct  go to state 75


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  541 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  543           | kwd_let . optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 76

    $default  reduce using rule 536 (optional_shared)

    optional_shared  go to state 77


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   89 annotation_argument_name: "type" .

    $default  reduce using rule 89 (annotation_argument_name)


State 33

   90 annotation_argument_name: "in" .

    $default  reduce using rule 90 (annotation_argument_name)


State 34

   88 annotation_argument_name: "name" .

    $default  reduce using rule 88 (annotation_argument_name)


State 35

   91 annotation_argument: annotation_argument_name . '=' string_constant
   92                    | annotation_argument_name . '=' "name"
   93                    | annotation_argument_name . '=' "integer constant"
   94                    | annotation_argument_name . '=' "floating point constant"
   95                    | annotation_argument_name . '=' "true"
   96                    | annotation_argument_name . '=' "false"
   97                    | annotation_argument_name .
   98                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 78

    $default  reduce using rule 97 (annotation_argument)


State 36

   99 annotation_argument_list: annotation_argument .

    $default  reduce using rule 99 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  100 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 79

    $default  reduce using rule 36 (options_declaration)


State 38

   51 expect_error: "integer constant" .
   52             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 80

    $default  reduce using rule 51 (expect_error)


State 39

   48 expect_declaration: "expect" expect_list .
   50 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 81

    $default  reduce using rule 48 (expect_declaration)


State 40

   49 expect_list: expect_error .

    $default  reduce using rule 49 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   41 require_module_name: '%' . require_module_name

    "name"     shift, and go to state 41
    "keyword"  shift, and go to state 42
    '%'        shift, and go to state 43

    keyword_or_name      go to state 44
    require_module_name  go to state 82


State 44

   40 require_module_name: keyword_or_name .

    $default  reduce using rule 40 (require_module_name)


State 45

   42 require_module_name: require_module_name . '.' keyword_or_name
   43                    | require_module_name . '/' keyword_or_name
   44 require_module: require_module_name . is_public_module
   45               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 83
    "public"  shift, and go to state 84
    '/'       shift, and go to state 85
    '.'       shift, and go to state 86

    $default  reduce using rule 46 (is_public_module)

    is_public_module  go to state 87


State 46

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 47

  555 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 52
    "private"  shift, and go to state 53

    $default  reduce using rule 548 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 88
    single_alias                      go to state 89
    alias_list                        go to state 90


State 48

  557 alias_declaration: "typedef" $@36 . single_alias ';'

    "public"   shift, and go to state 52
    "private"  shift, and go to state 53

    $default  reduce using rule 548 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 88
    single_alias                      go to state 91


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 76

    $default  reduce using rule 536 (optional_shared)

    optional_shared  go to state 92


State 52

  550 optional_public_or_private_alias: "public" .

    $default  reduce using rule 550 (optional_public_or_private_alias)


State 53

  549 optional_public_or_private_alias: "private" .

    $default  reduce using rule 549 (optional_public_or_private_alias)


State 54

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@77 "name" $@78 '{' $@79 bitfield_alias_bits $@80 '}'

    $default  reduce using rule 704 ($@77)

    $@77  go to state 93


State 55

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@69 "name" $@70 '{' $@71 tuple_alias_type_list $@72 '}'

    $default  reduce using rule 694 ($@69)

    $@69  go to state 94


State 56

  703 variant_alias_declaration: "variant" optional_public_or_private_alias . $@73 "name" $@74 '{' $@75 variant_alias_type_list $@76 '}'

    $default  reduce using rule 699 ($@73)

    $@73  go to state 95


State 57

  250 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 96


State 58

  248 name_in_namespace: "name" .
  249                  | "name" . "::" "name"

    "::"  shift, and go to state 97

    "::"      [reduce using rule 248 (name_in_namespace)]
    $default  reduce using rule 248 (name_in_namespace)


State 59

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 98


State 60

  102 annotation_declaration_name: "require" .

    $default  reduce using rule 102 (annotation_declaration_name)


State 61

  103 annotation_declaration_name: "private" .

    $default  reduce using rule 103 (annotation_declaration_name)


State 62

  112 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 99
    name_in_namespace             go to state 69


State 63

  107 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 100
    name_in_namespace             go to state 69


State 64

  111 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 101
    name_in_namespace             go to state 69


State 65

  104 annotation_declaration_basic: annotation_declaration_name .
  105                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 102

    $default  reduce using rule 104 (annotation_declaration_basic)


State 66

  106 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 106 (annotation_declaration)


State 67

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  113 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 103
    "||"  shift, and go to state 104
    "^^"  shift, and go to state 105

    $default  reduce using rule 113 (annotation_list)


State 68

  114 annotation_list: annotation_list . ',' annotation_declaration
  116 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 106
    ']'  shift, and go to state 107


State 69

  101 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 101 (annotation_declaration_name)


State 70

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 71

  574 class_or_struct: "struct" .

    $default  reduce using rule 574 (class_or_struct)


State 72

  573 class_or_struct: "class" .

    $default  reduce using rule 573 (class_or_struct)


State 73

  207 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 108
    "private"  shift, and go to state 109

    $default  reduce using rule 208 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 110
    function_declaration                 go to state 111


State 74

  564 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'
  567                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "public"   shift, and go to state 112
    "private"  shift, and go to state 113

    $default  reduce using rule 558 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 114


State 75

  580 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 575 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 117


State 76

  537 optional_shared: "shared" .

    $default  reduce using rule 537 (optional_shared)


State 77

  541 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  543           | kwd_let optional_shared . optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 118
    "private"  shift, and go to state 119

    $default  reduce using rule 538 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 120


State 78

   91 annotation_argument: annotation_argument_name '=' . string_constant
   92                    | annotation_argument_name '=' . "name"
   93                    | annotation_argument_name '=' . "integer constant"
   94                    | annotation_argument_name '=' . "floating point constant"
   95                    | annotation_argument_name '=' . "true"
   96                    | annotation_argument_name '=' . "false"
   98                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 121
    "false"                    shift, and go to state 122
    "integer constant"         shift, and go to state 123
    "floating point constant"  shift, and go to state 124
    "name"                     shift, and go to state 125
    "start of the string"      shift, and go to state 126
    '('                        shift, and go to state 127

    string_constant  go to state 128


State 79

  100 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 129


State 80

   52 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 130


State 81

   50 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 131


State 82

   41 require_module_name: '%' require_module_name .
   42                    | require_module_name . '.' keyword_or_name
   43                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 86

    $default  reduce using rule 41 (require_module_name)


State 83

   45 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 132


State 84

   47 is_public_module: "public" .

    $default  reduce using rule 47 (is_public_module)


State 85

   43 require_module_name: require_module_name '/' . keyword_or_name

    "name"     shift, and go to state 41
    "keyword"  shift, and go to state 42

    keyword_or_name  go to state 133


State 86

   42 require_module_name: require_module_name '.' . keyword_or_name

    "name"     shift, and go to state 41
    "keyword"  shift, and go to state 42

    keyword_or_name  go to state 134


State 87

   44 require_module: require_module_name is_public_module .

    $default  reduce using rule 44 (require_module)


State 88

  552 single_alias: optional_public_or_private_alias . "name" $@35 '=' type_declaration

    "name"  shift, and go to state 135


State 89

  553 alias_list: single_alias . ';'

    ';'  shift, and go to state 136


State 90

  554 alias_list: alias_list . single_alias ';'
  555 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 52
    "private"  shift, and go to state 53
    '}'        shift, and go to state 137

    $default  reduce using rule 548 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 88
    single_alias                      go to state 138


State 91

  557 alias_declaration: "typedef" $@36 single_alias . ';'

    ';'  shift, and go to state 139


State 92

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 140
    "private"  shift, and go to state 141

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 142


State 93

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 . "name" $@78 '{' $@79 bitfield_alias_bits $@80 '}'

    "name"  shift, and go to state 143


State 94

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 . "name" $@70 '{' $@71 tuple_alias_type_list $@72 '}'

    "name"  shift, and go to state 144


State 95

  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 . "name" $@74 '{' $@75 variant_alias_type_list $@76 '}'

    "name"  shift, and go to state 145


State 96

  250 name_in_namespace: "::" "name" .

    $default  reduce using rule 250 (name_in_namespace)


State 97

  249 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 146


State 98

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 147

    reader_character_sequence  go to state 148


State 99

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  112                       | "|>" annotation_declaration .

    $default  reduce using rule 112 (annotation_declaration)


State 100

  107 annotation_declaration: '!' annotation_declaration .
  108                       | annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 107 (annotation_declaration)


State 101

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  111                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 103
    "||"  shift, and go to state 104
    "^^"  shift, and go to state 105
    ')'   shift, and go to state 149


State 102

  105 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 150


State 103

  108 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 151
    name_in_namespace             go to state 69


State 104

  109 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 152
    name_in_namespace             go to state 69


State 105

  110 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 153
    name_in_namespace             go to state 69


State 106

  114 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 154
    name_in_namespace             go to state 69


State 107

  116 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 116 (optional_annotation_list)


State 108

  210 optional_public_or_private_function: "public" .

    $default  reduce using rule 210 (optional_public_or_private_function)


State 109

  209 optional_public_or_private_function: "private" .

    $default  reduce using rule 209 (optional_public_or_private_function)


State 110

  213 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 212 ($@5)

    $@5  go to state 155


State 111

  207 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 207 (global_function_declaration)


State 112

  560 optional_public_or_private_enum: "public" .

    $default  reduce using rule 560 (optional_public_or_private_enum)


State 113

  559 optional_public_or_private_enum: "private" .

    $default  reduce using rule 559 (optional_public_or_private_enum)


State 114

  564 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@37 enum_list $@38 '}'
  567                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "name"  shift, and go to state 156

    enum_name  go to state 157


State 115

  577 optional_public_or_private_structure: "public" .

    $default  reduce using rule 577 (optional_public_or_private_structure)


State 116

  576 optional_public_or_private_structure: "private" .

    $default  reduce using rule 576 (optional_public_or_private_structure)


State 117

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 578 ($@41)

    $@41  go to state 158


State 118

  540 optional_public_or_private_variable: "public" .

    $default  reduce using rule 540 (optional_public_or_private_variable)


State 119

  539 optional_public_or_private_variable: "private" .

    $default  reduce using rule 539 (optional_public_or_private_variable)


State 120

  541 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  543           | kwd_let optional_shared optional_public_or_private_variable . $@34 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 159

    $default  reduce using rule 542 ($@34)

    $@34  go to state 160


State 121

   95 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 95 (annotation_argument)


State 122

   96 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 96 (annotation_argument)


State 123

   93 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 93 (annotation_argument)


State 124

   94 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 94 (annotation_argument)


State 125

   92 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 92 (annotation_argument)


State 126

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 161
    STRING_CHARACTER_ESC  shift, and go to state 162

    character_sequence  go to state 163


State 127

   98 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 164
    "false"                    shift, and go to state 165
    "integer constant"         shift, and go to state 166
    "floating point constant"  shift, and go to state 167
    "name"                     shift, and go to state 168
    "start of the string"      shift, and go to state 126

    string_constant                 go to state 169
    annotation_argument_value       go to state 170
    annotation_argument_value_list  go to state 171


State 128

   91 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 91 (annotation_argument)


State 129

  100 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 100 (annotation_argument_list)


State 130

   52 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 52 (expect_error)


State 131

   50 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 50 (expect_list)


State 132

   45 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 84

    $default  reduce using rule 46 (is_public_module)

    is_public_module  go to state 172


State 133

   43 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 134

   42 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 42 (require_module_name)


State 135

  552 single_alias: optional_public_or_private_alias "name" . $@35 '=' type_declaration

    $default  reduce using rule 551 ($@35)

    $@35  go to state 173


State 136

  553 alias_list: single_alias ';' .

    $default  reduce using rule 553 (alias_list)


State 137

  555 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 555 (alias_declaration)


State 138

  554 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 174


State 139

  557 alias_declaration: "typedef" $@36 single_alias ';' .

    $default  reduce using rule 557 (alias_declaration)


State 140

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 141

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 142

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 143

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 "name" . $@78 '{' $@79 bitfield_alias_bits $@80 '}'

    $default  reduce using rule 705 ($@78)

    $@78  go to state 175


State 144

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 "name" . $@70 '{' $@71 tuple_alias_type_list $@72 '}'

    $default  reduce using rule 695 ($@70)

    $@70  go to state 176


State 145

  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 "name" . $@74 '{' $@75 variant_alias_type_list $@76 '}'

    $default  reduce using rule 700 ($@74)

    $@74  go to state 177


State 146

  249 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 249 (name_in_namespace)


State 147

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 148

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 178

    $default  reduce using rule 35 (expr_reader)


State 149

  111 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 111 (annotation_declaration)


State 150

  100 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  105 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 79
    ')'  shift, and go to state 179


State 151

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration "&&" annotation_declaration .
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 108 (annotation_declaration)


State 152

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration "||" annotation_declaration .
  110                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 103
    "^^"  shift, and go to state 105

    $default  reduce using rule 109 (annotation_declaration)


State 153

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  110                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 103

    $default  reduce using rule 110 (annotation_declaration)


State 154

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  114 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 103
    "||"  shift, and go to state 104
    "^^"  shift, and go to state 105

    $default  reduce using rule 114 (annotation_list)


State 155

  213 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 180
    "bool"      shift, and go to state 181
    "string"    shift, and go to state 182
    "int"       shift, and go to state 183
    "int2"      shift, and go to state 184
    "int3"      shift, and go to state 185
    "int4"      shift, and go to state 186
    "uint"      shift, and go to state 187
    "uint2"     shift, and go to state 188
    "uint3"     shift, and go to state 189
    "uint4"     shift, and go to state 190
    "float"     shift, and go to state 191
    "float2"    shift, and go to state 192
    "float3"    shift, and go to state 193
    "float4"    shift, and go to state 194
    "range"     shift, and go to state 195
    "urange"    shift, and go to state 196
    "range64"   shift, and go to state 197
    "urange64"  shift, and go to state 198
    "int64"     shift, and go to state 199
    "uint64"    shift, and go to state 200
    "double"    shift, and go to state 201
    "int8"      shift, and go to state 202
    "uint8"     shift, and go to state 203
    "int16"     shift, and go to state 204
    "uint16"    shift, and go to state 205
    "++"        shift, and go to state 206
    "--"        shift, and go to state 207
    "name"      shift, and go to state 208

    function_name                go to state 209
    function_declaration_header  go to state 210


State 156

  561 enum_name: "name" .

    $default  reduce using rule 561 (enum_name)


State 157

  564 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@37 enum_list $@38 '}'
  567                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    ':'  shift, and go to state 211
    '{'  shift, and go to state 212


State 158

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 . structure_name $@42 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 213

    $default  reduce using rule 570 (optional_sealed)

    optional_sealed  go to state 214
    structure_name   go to state 215


State 159

  541 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 533 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 216


State 160

  543 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 217

    $default  reduce using rule 471 (optional_field_annotation)

    optional_field_annotation  go to state 218


State 161

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 162

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 163

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 219
    STRING_CHARACTER_ESC  shift, and go to state 220
    "end of the string"   shift, and go to state 221


State 164

   84 annotation_argument_value: "true" .

    $default  reduce using rule 84 (annotation_argument_value)


State 165

   85 annotation_argument_value: "false" .

    $default  reduce using rule 85 (annotation_argument_value)


State 166

   82 annotation_argument_value: "integer constant" .

    $default  reduce using rule 82 (annotation_argument_value)


State 167

   83 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 83 (annotation_argument_value)


State 168

   81 annotation_argument_value: "name" .

    $default  reduce using rule 81 (annotation_argument_value)


State 169

   80 annotation_argument_value: string_constant .

    $default  reduce using rule 80 (annotation_argument_value)


State 170

   86 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 86 (annotation_argument_value_list)


State 171

   87 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   98 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 222
    ')'  shift, and go to state 223


State 172

   45 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 45 (require_module)


State 173

  552 single_alias: optional_public_or_private_alias "name" $@35 . '=' type_declaration

    '='  shift, and go to state 224


State 174

  554 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 554 (alias_list)


State 175

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 "name" $@78 . '{' $@79 bitfield_alias_bits $@80 '}'

    '{'  shift, and go to state 225


State 176

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 "name" $@70 . '{' $@71 tuple_alias_type_list $@72 '}'

    '{'  shift, and go to state 226


State 177

  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 "name" $@74 . '{' $@75 variant_alias_type_list $@76 '}'

    '{'  shift, and go to state 227


State 178

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 179

  105 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 105 (annotation_declaration_basic)


State 180

  123 function_name: "operator" . '!'
  124              | "operator" . '~'
  125              | "operator" . "+="
  126              | "operator" . "-="
  127              | "operator" . "*="
  128              | "operator" . "/="
  129              | "operator" . "%="
  130              | "operator" . "&="
  131              | "operator" . "|="
  132              | "operator" . "^="
  133              | "operator" . "&&="
  134              | "operator" . "||="
  135              | "operator" . "^^="
  136              | "operator" . "&&"
  137              | "operator" . "||"
  138              | "operator" . "^^"
  139              | "operator" . '+'
  140              | "operator" . '-'
  141              | "operator" . '*'
  142              | "operator" . '/'
  143              | "operator" . '%'
  144              | "operator" . '<'
  145              | "operator" . '>'
  146              | "operator" . ".."
  147              | "operator" . "=="
  148              | "operator" . "!="
  149              | "operator" . "<="
  150              | "operator" . ">="
  151              | "operator" . '&'
  152              | "operator" . '|'
  153              | "operator" . '^'
  156              | "operator" . "++"
  157              | "operator" . "--"
  158              | "operator" . "<<"
  159              | "operator" . ">>"
  160              | "operator" . "<<="
  161              | "operator" . ">>="
  162              | "operator" . "<<<"
  163              | "operator" . ">>>"
  164              | "operator" . "<<<="
  165              | "operator" . ">>>="
  166              | "operator" . '[' ']'
  167              | "operator" . "?[" ']'
  168              | "operator" . '.'
  169              | "operator" . "?."
  170              | "operator" . '.' "name"
  171              | "operator" . '.' "name" ":="
  172              | "operator" . "?." "name"
  173              | "operator" . ":="
  174              | "operator" . "delete"
  175              | "operator" . "??"
  176              | "operator" . "is"
  177              | "operator" . "as"
  178              | "operator" . "is" "name"
  179              | "operator" . "as" "name"
  180              | "operator" . '?' "as"
  181              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 228
    "as"      shift, and go to state 229
    "delete"  shift, and go to state 230
    "+="      shift, and go to state 231
    "-="      shift, and go to state 232
    "/="      shift, and go to state 233
    "*="      shift, and go to state 234
    "%="      shift, and go to state 235
    "&="      shift, and go to state 236
    "|="      shift, and go to state 237
    "^="      shift, and go to state 238
    "<<"      shift, and go to state 239
    ">>"      shift, and go to state 240
    "++"      shift, and go to state 241
    "--"      shift, and go to state 242
    "<="      shift, and go to state 243
    "<<="     shift, and go to state 244
    ">>="     shift, and go to state 245
    ">="      shift, and go to state 246
    "=="      shift, and go to state 247
    "!="      shift, and go to state 248
    "??"      shift, and go to state 249
    "?."      shift, and go to state 250
    "?["      shift, and go to state 251
    ":="      shift, and go to state 252
    "<<<"     shift, and go to state 253
    ">>>"     shift, and go to state 254
    "<<<="    shift, and go to state 255
    ">>>="    shift, and go to state 256
    "&&"      shift, and go to state 257
    "||"      shift, and go to state 258
    "^^"      shift, and go to state 259
    "&&="     shift, and go to state 260
    "||="     shift, and go to state 261
    "^^="     shift, and go to state 262
    ".."      shift, and go to state 263
    '?'       shift, and go to state 264
    '|'       shift, and go to state 265
    '^'       shift, and go to state 266
    '&'       shift, and go to state 267
    '<'       shift, and go to state 268
    '>'       shift, and go to state 269
    '-'       shift, and go to state 270
    '+'       shift, and go to state 271
    '*'       shift, and go to state 272
    '/'       shift, and go to state 273
    '%'       shift, and go to state 274
    '~'       shift, and go to state 275
    '!'       shift, and go to state 276
    '.'       shift, and go to state 277
    '['       shift, and go to state 278


State 181

  182 function_name: "bool" .

    $default  reduce using rule 182 (function_name)


State 182

  183 function_name: "string" .

    $default  reduce using rule 183 (function_name)


State 183

  184 function_name: "int" .

    $default  reduce using rule 184 (function_name)


State 184

  185 function_name: "int2" .

    $default  reduce using rule 185 (function_name)


State 185

  186 function_name: "int3" .

    $default  reduce using rule 186 (function_name)


State 186

  187 function_name: "int4" .

    $default  reduce using rule 187 (function_name)


State 187

  188 function_name: "uint" .

    $default  reduce using rule 188 (function_name)


State 188

  189 function_name: "uint2" .

    $default  reduce using rule 189 (function_name)


State 189

  190 function_name: "uint3" .

    $default  reduce using rule 190 (function_name)


State 190

  191 function_name: "uint4" .

    $default  reduce using rule 191 (function_name)


State 191

  192 function_name: "float" .

    $default  reduce using rule 192 (function_name)


State 192

  193 function_name: "float2" .

    $default  reduce using rule 193 (function_name)


State 193

  194 function_name: "float3" .

    $default  reduce using rule 194 (function_name)


State 194

  195 function_name: "float4" .

    $default  reduce using rule 195 (function_name)


State 195

  196 function_name: "range" .

    $default  reduce using rule 196 (function_name)


State 196

  197 function_name: "urange" .

    $default  reduce using rule 197 (function_name)


State 197

  198 function_name: "range64" .

    $default  reduce using rule 198 (function_name)


State 198

  199 function_name: "urange64" .

    $default  reduce using rule 199 (function_name)


State 199

  200 function_name: "int64" .

    $default  reduce using rule 200 (function_name)


State 200

  201 function_name: "uint64" .

    $default  reduce using rule 201 (function_name)


State 201

  202 function_name: "double" .

    $default  reduce using rule 202 (function_name)


State 202

  203 function_name: "int8" .

    $default  reduce using rule 203 (function_name)


State 203

  204 function_name: "uint8" .

    $default  reduce using rule 204 (function_name)


State 204

  205 function_name: "int16" .

    $default  reduce using rule 205 (function_name)


State 205

  206 function_name: "uint16" .

    $default  reduce using rule 206 (function_name)


State 206

  154 function_name: "++" . "operator"

    "operator"  shift, and go to state 279


State 207

  155 function_name: "--" . "operator"

    "operator"  shift, and go to state 280


State 208

  122 function_name: "name" .

    $default  reduce using rule 122 (function_name)


State 209

  211 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 281

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 282


State 210

  213 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 283

    expression_block  go to state 284


State 211

  567 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "int"     shift, and go to state 285
    "uint"    shift, and go to state 286
    "int8"    shift, and go to state 287
    "uint8"   shift, and go to state 288
    "int16"   shift, and go to state 289
    "uint16"  shift, and go to state 290

    enum_basic_type_declaration  go to state 291


State 212

  564 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@37 enum_list $@38 '}'

    $default  reduce using rule 562 ($@37)

    $@37  go to state 292


State 213

  571 optional_sealed: "sealed" .

    $default  reduce using rule 571 (optional_sealed)


State 214

  572 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 293


State 215

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name . $@42 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 579 ($@42)

    $@42  go to state 294


State 216

  535 global_variable_declaration_list: global_variable_declaration_list . $@33 optional_field_annotation let_variable_declaration
  541 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 295

    $default  reduce using rule 534 ($@33)

    $@33  go to state 296


State 217

  472 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 297


State 218

  543 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 298
    "name"  shift, and go to state 299

    let_variable_name_with_pos_list  go to state 300
    let_variable_declaration         go to state 301


State 219

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 220

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 221

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 222

   87 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 164
    "false"                    shift, and go to state 165
    "integer constant"         shift, and go to state 166
    "floating point constant"  shift, and go to state 167
    "name"                     shift, and go to state 168
    "start of the string"      shift, and go to state 126

    string_constant            go to state 169
    annotation_argument_value  go to state 302


State 223

   98 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 98 (annotation_argument)


State 224

  552 single_alias: optional_public_or_private_alias "name" $@35 '=' . type_declaration

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 347


State 225

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 "name" $@78 '{' . $@79 bitfield_alias_bits $@80 '}'

    $default  reduce using rule 706 ($@79)

    $@79  go to state 348


State 226

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 "name" $@70 '{' . $@71 tuple_alias_type_list $@72 '}'

    $default  reduce using rule 696 ($@71)

    $@71  go to state 349


State 227

  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 "name" $@74 '{' . $@75 variant_alias_type_list $@76 '}'

    $default  reduce using rule 701 ($@75)

    $@75  go to state 350


State 228

  176 function_name: "operator" "is" .
  178              | "operator" "is" . "name"

    "name"  shift, and go to state 351

    $default  reduce using rule 176 (function_name)


State 229

  177 function_name: "operator" "as" .
  179              | "operator" "as" . "name"

    "name"  shift, and go to state 352

    $default  reduce using rule 177 (function_name)


State 230

  174 function_name: "operator" "delete" .

    $default  reduce using rule 174 (function_name)


State 231

  125 function_name: "operator" "+=" .

    $default  reduce using rule 125 (function_name)


State 232

  126 function_name: "operator" "-=" .

    $default  reduce using rule 126 (function_name)


State 233

  128 function_name: "operator" "/=" .

    $default  reduce using rule 128 (function_name)


State 234

  127 function_name: "operator" "*=" .

    $default  reduce using rule 127 (function_name)


State 235

  129 function_name: "operator" "%=" .

    $default  reduce using rule 129 (function_name)


State 236

  130 function_name: "operator" "&=" .

    $default  reduce using rule 130 (function_name)


State 237

  131 function_name: "operator" "|=" .

    $default  reduce using rule 131 (function_name)


State 238

  132 function_name: "operator" "^=" .

    $default  reduce using rule 132 (function_name)


State 239

  158 function_name: "operator" "<<" .

    $default  reduce using rule 158 (function_name)


State 240

  159 function_name: "operator" ">>" .

    $default  reduce using rule 159 (function_name)


State 241

  156 function_name: "operator" "++" .

    $default  reduce using rule 156 (function_name)


State 242

  157 function_name: "operator" "--" .

    $default  reduce using rule 157 (function_name)


State 243

  149 function_name: "operator" "<=" .

    $default  reduce using rule 149 (function_name)


State 244

  160 function_name: "operator" "<<=" .

    $default  reduce using rule 160 (function_name)


State 245

  161 function_name: "operator" ">>=" .

    $default  reduce using rule 161 (function_name)


State 246

  150 function_name: "operator" ">=" .

    $default  reduce using rule 150 (function_name)


State 247

  147 function_name: "operator" "==" .

    $default  reduce using rule 147 (function_name)


State 248

  148 function_name: "operator" "!=" .

    $default  reduce using rule 148 (function_name)


State 249

  175 function_name: "operator" "??" .

    $default  reduce using rule 175 (function_name)


State 250

  169 function_name: "operator" "?." .
  172              | "operator" "?." . "name"

    "name"  shift, and go to state 353

    $default  reduce using rule 169 (function_name)


State 251

  167 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 354


State 252

  173 function_name: "operator" ":=" .

    $default  reduce using rule 173 (function_name)


State 253

  162 function_name: "operator" "<<<" .

    $default  reduce using rule 162 (function_name)


State 254

  163 function_name: "operator" ">>>" .

    $default  reduce using rule 163 (function_name)


State 255

  164 function_name: "operator" "<<<=" .

    $default  reduce using rule 164 (function_name)


State 256

  165 function_name: "operator" ">>>=" .

    $default  reduce using rule 165 (function_name)


State 257

  136 function_name: "operator" "&&" .

    $default  reduce using rule 136 (function_name)


State 258

  137 function_name: "operator" "||" .

    $default  reduce using rule 137 (function_name)


State 259

  138 function_name: "operator" "^^" .

    $default  reduce using rule 138 (function_name)


State 260

  133 function_name: "operator" "&&=" .

    $default  reduce using rule 133 (function_name)


State 261

  134 function_name: "operator" "||=" .

    $default  reduce using rule 134 (function_name)


State 262

  135 function_name: "operator" "^^=" .

    $default  reduce using rule 135 (function_name)


State 263

  146 function_name: "operator" ".." .

    $default  reduce using rule 146 (function_name)


State 264

  180 function_name: "operator" '?' . "as"
  181              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 355


State 265

  152 function_name: "operator" '|' .

    $default  reduce using rule 152 (function_name)


State 266

  153 function_name: "operator" '^' .

    $default  reduce using rule 153 (function_name)


State 267

  151 function_name: "operator" '&' .

    $default  reduce using rule 151 (function_name)


State 268

  144 function_name: "operator" '<' .

    $default  reduce using rule 144 (function_name)


State 269

  145 function_name: "operator" '>' .

    $default  reduce using rule 145 (function_name)


State 270

  140 function_name: "operator" '-' .

    $default  reduce using rule 140 (function_name)


State 271

  139 function_name: "operator" '+' .

    $default  reduce using rule 139 (function_name)


State 272

  141 function_name: "operator" '*' .

    $default  reduce using rule 141 (function_name)


State 273

  142 function_name: "operator" '/' .

    $default  reduce using rule 142 (function_name)


State 274

  143 function_name: "operator" '%' .

    $default  reduce using rule 143 (function_name)


State 275

  124 function_name: "operator" '~' .

    $default  reduce using rule 124 (function_name)


State 276

  123 function_name: "operator" '!' .

    $default  reduce using rule 123 (function_name)


State 277

  168 function_name: "operator" '.' .
  170              | "operator" '.' . "name"
  171              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 356

    $default  reduce using rule 168 (function_name)


State 278

  166 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 357


State 279

  154 function_name: "++" "operator" .

    $default  reduce using rule 154 (function_name)


State 280

  155 function_name: "--" "operator" .

    $default  reduce using rule 155 (function_name)


State 281

  118 optional_function_argument_list: '(' . ')'
  119                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 358
    "[["  shift, and go to state 217
    ')'   shift, and go to state 359

    $default  reduce using rule 471 (optional_field_annotation)

    optional_field_annotation      go to state 360
    function_argument_declaration  go to state 361
    function_argument_list         go to state 362


State 282

  211 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 363

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 364


State 283

  214 expression_block: '{' . expressions '}'
  215                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 237 (expressions)

    expressions  go to state 365


State 284

  213 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 213 (function_declaration)


State 285

  613 enum_basic_type_declaration: "int" .

    $default  reduce using rule 613 (enum_basic_type_declaration)


State 286

  616 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 616 (enum_basic_type_declaration)


State 287

  614 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 614 (enum_basic_type_declaration)


State 288

  617 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 617 (enum_basic_type_declaration)


State 289

  615 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 615 (enum_basic_type_declaration)


State 290

  618 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 618 (enum_basic_type_declaration)


State 291

  567 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@39 enum_list $@40 '}'

    '{'  shift, and go to state 366


State 292

  564 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 . enum_list $@38 '}'

    $default  reduce using rule 544 (enum_list)

    enum_list  go to state 367


State 293

  572 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 368

    $default  reduce using rule 568 (optional_structure_parent)

    optional_structure_parent  go to state 369


State 294

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 370


State 295

  541 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 541 (global_let)


State 296

  535 global_variable_declaration_list: global_variable_declaration_list $@33 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 217

    $default  reduce using rule 471 (optional_field_annotation)

    optional_field_annotation  go to state 371


State 297

  100 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  472 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 79
    ']'  shift, and go to state 372


State 298

  524 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 373


State 299

  523 let_variable_name_with_pos_list: "name" .
  525                                | "name" . "aka" "name"

    "aka"  shift, and go to state 374

    $default  reduce using rule 523 (let_variable_name_with_pos_list)


State 300

  526 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  527                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  528 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  529                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  530                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  531                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  532                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 375
    ':'  shift, and go to state 376
    '&'  shift, and go to state 377

    $default  reduce using rule 521 (optional_ref)

    optional_ref  go to state 378


State 301

  543 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 543 (global_let)


State 302

   87 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 87 (annotation_argument_value_list)


State 303

  657 type_declaration_no_options: "array" . '<' $@47 type_declaration '>' $@48

    '<'  shift, and go to state 379


State 304

  660 type_declaration_no_options: "table" . '<' $@49 table_type_pair '>' $@50

    '<'  shift, and go to state 380


State 305

  663 type_declaration_no_options: "iterator" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 381


State 306

  653 type_declaration_no_options: "smart_ptr" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 382


State 307

  586 basic_type_declaration: "bool" .

    $default  reduce using rule 586 (basic_type_declaration)


State 308

  606 basic_type_declaration: "void" .

    $default  reduce using rule 606 (basic_type_declaration)


State 309

  587 basic_type_declaration: "string" .

    $default  reduce using rule 587 (basic_type_declaration)


State 310

  620 auto_type_declaration: "auto" .
  621                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 383

    '('       [reduce using rule 620 (auto_type_declaration)]
    $default  reduce using rule 620 (auto_type_declaration)


State 311

  588 basic_type_declaration: "int" .

    $default  reduce using rule 588 (basic_type_declaration)


State 312

  592 basic_type_declaration: "int2" .

    $default  reduce using rule 592 (basic_type_declaration)


State 313

  593 basic_type_declaration: "int3" .

    $default  reduce using rule 593 (basic_type_declaration)


State 314

  594 basic_type_declaration: "int4" .

    $default  reduce using rule 594 (basic_type_declaration)


State 315

  595 basic_type_declaration: "uint" .

    $default  reduce using rule 595 (basic_type_declaration)


State 316

  612 basic_type_declaration: "bitfield" .
  630 bitfield_type_declaration: "bitfield" . '<' $@43 bitfield_bits '>' $@44

    '<'  shift, and go to state 384

    $default  reduce using rule 612 (basic_type_declaration)


State 317

  599 basic_type_declaration: "uint2" .

    $default  reduce using rule 599 (basic_type_declaration)


State 318

  600 basic_type_declaration: "uint3" .

    $default  reduce using rule 600 (basic_type_declaration)


State 319

  601 basic_type_declaration: "uint4" .

    $default  reduce using rule 601 (basic_type_declaration)


State 320

  602 basic_type_declaration: "float" .

    $default  reduce using rule 602 (basic_type_declaration)


State 321

  603 basic_type_declaration: "float2" .

    $default  reduce using rule 603 (basic_type_declaration)


State 322

  604 basic_type_declaration: "float3" .

    $default  reduce using rule 604 (basic_type_declaration)


State 323

  605 basic_type_declaration: "float4" .

    $default  reduce using rule 605 (basic_type_declaration)


State 324

  607 basic_type_declaration: "range" .

    $default  reduce using rule 607 (basic_type_declaration)


State 325

  608 basic_type_declaration: "urange" .

    $default  reduce using rule 608 (basic_type_declaration)


State 326

  609 basic_type_declaration: "range64" .

    $default  reduce using rule 609 (basic_type_declaration)


State 327

  610 basic_type_declaration: "urange64" .

    $default  reduce using rule 610 (basic_type_declaration)


State 328

  664 type_declaration_no_options: "block" .
  667                            | "block" . '<' $@53 type_declaration '>' $@54
  670                            | "block" . '<' $@55 optional_function_argument_list optional_function_type '>' $@56

    '<'  shift, and go to state 385

    $default  reduce using rule 664 (type_declaration_no_options)


State 329

  591 basic_type_declaration: "int64" .

    $default  reduce using rule 591 (basic_type_declaration)


State 330

  598 basic_type_declaration: "uint64" .

    $default  reduce using rule 598 (basic_type_declaration)


State 331

  611 basic_type_declaration: "double" .

    $default  reduce using rule 611 (basic_type_declaration)


State 332

  671 type_declaration_no_options: "function" .
  674                            | "function" . '<' $@57 type_declaration '>' $@58
  677                            | "function" . '<' $@59 optional_function_argument_list optional_function_type '>' $@60

    '<'  shift, and go to state 386

    $default  reduce using rule 671 (type_declaration_no_options)


State 333

  678 type_declaration_no_options: "lambda" .
  681                            | "lambda" . '<' $@61 type_declaration '>' $@62
  684                            | "lambda" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 387

    $default  reduce using rule 678 (type_declaration_no_options)


State 334

  589 basic_type_declaration: "int8" .

    $default  reduce using rule 589 (basic_type_declaration)


State 335

  596 basic_type_declaration: "uint8" .

    $default  reduce using rule 596 (basic_type_declaration)


State 336

  590 basic_type_declaration: "int16" .

    $default  reduce using rule 590 (basic_type_declaration)


State 337

  597 basic_type_declaration: "uint16" .

    $default  reduce using rule 597 (basic_type_declaration)


State 338

  687 type_declaration_no_options: "tuple" . '<' $@65 tuple_type_list '>' $@66

    '<'  shift, and go to state 388


State 339

  690 type_declaration_no_options: "variant" . '<' $@67 variant_type_list '>' $@68

    '<'  shift, and go to state 389


State 340

  622 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 390


State 341

  619 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 619 (structure_type_declaration)


State 342

  633 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 633 (type_declaration_no_options)


State 343

  636 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 636 (type_declaration_no_options)


State 344

  634 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 634 (type_declaration_no_options)


State 345

  635 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 635 (type_declaration_no_options)


State 346

  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"
  691 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400

    $default  reduce using rule 691 (type_declaration)


State 347

  552 single_alias: optional_public_or_private_alias "name" $@35 '=' type_declaration .
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401

    $default  reduce using rule 552 (single_alias)


State 348

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 . bitfield_alias_bits $@80 '}'

    $default  reduce using rule 625 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 402


State 349

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 . tuple_alias_type_list $@72 '}'

    $default  reduce using rule 501 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 403


State 350

  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 . variant_alias_type_list $@76 '}'

    $default  reduce using rule 507 (variant_alias_type_list)

    variant_alias_type_list  go to state 404


State 351

  178 function_name: "operator" "is" "name" .

    $default  reduce using rule 178 (function_name)


State 352

  179 function_name: "operator" "as" "name" .

    $default  reduce using rule 179 (function_name)


State 353

  172 function_name: "operator" "?." "name" .

    $default  reduce using rule 172 (function_name)


State 354

  167 function_name: "operator" "?[" ']' .

    $default  reduce using rule 167 (function_name)


State 355

  180 function_name: "operator" '?' "as" .
  181              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 405

    $default  reduce using rule 180 (function_name)


State 356

  170 function_name: "operator" '.' "name" .
  171              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 406

    $default  reduce using rule 170 (function_name)


State 357

  166 function_name: "operator" '[' ']' .

    $default  reduce using rule 166 (function_name)


State 358

  494 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 407


State 359

  118 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 118 (optional_function_argument_list)


State 360

  492 function_argument_declaration: optional_field_annotation . variable_declaration
  493                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 408
    "$i"    shift, and go to state 409
    "name"  shift, and go to state 410

    variable_declaration         go to state 411
    variable_name_with_pos_list  go to state 412


State 361

  495 function_argument_list: function_argument_declaration .

    $default  reduce using rule 495 (function_argument_list)


State 362

  119 optional_function_argument_list: '(' function_argument_list . ')'
  496 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 413
    ';'  shift, and go to state 414


State 363

  121 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 415


State 364

  211 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 211 (function_declaration_header)


State 365

  214 expression_block: '{' expressions . '}'
  215                 | '{' expressions . '}' "finally" '{' expressions '}'
  238 expressions: expressions . expression_any
  239            | expressions . error

    error                             shift, and go to state 416
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 417
    "if"                              shift, and go to state 418
    "static_if"                       shift, and go to state 419
    "for"                             shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 427
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 429
    "try"                             shift, and go to state 430
    "table"                           shift, and go to state 431
    "delete"                          shift, and go to state 432
    "deref"                           shift, and go to state 433
    "with"                            shift, and go to state 434
    "assume"                          shift, and go to state 435
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 438
    "continue"                        shift, and go to state 439
    "pass"                            shift, and go to state 440
    "reinterpret"                     shift, and go to state 441
    "label"                           shift, and go to state 442
    "goto"                            shift, and go to state 443
    "unsafe"                          shift, and go to state 444
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "yield"                           shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 472
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    ';'                               shift, and go to state 482
    '{'                               shift, and go to state 283
    '}'                               shift, and go to state 483

    string_builder             go to state 484
    expr_reader                go to state 485
    expression_label           go to state 486
    expression_goto            go to state 487
    if_or_static_if            go to state 488
    expression_if_one_liner    go to state 489
    expression_if_then_else    go to state 490
    expression_for_loop        go to state 491
    expression_unsafe          go to state 492
    expression_while_loop      go to state 493
    expression_with            go to state 494
    expression_with_alias      go to state 495
    expression_block           go to state 496
    expression_any             go to state 497
    expr_keyword               go to state 498
    expression_keyword         go to state 499
    expr_pipe                  go to state 500
    name_in_namespace          go to state 501
    expression_delete          go to state 502
    expr_new                   go to state 503
    expression_break           go to state 504
    expression_continue        go to state 505
    expression_return_no_pipe  go to state 506
    expression_return          go to state 507
    expression_yield_no_pipe   go to state 508
    expression_yield           go to state 509
    expression_try_catch       go to state 510
    kwd_let                    go to state 511
    expression_let             go to state 512
    expr_cast                  go to state 513
    expr_type_decl             go to state 514
    expr_type_info             go to state 515
    block_or_lambda            go to state 516
    expr_block                 go to state 517
    expr_numeric_const         go to state 518
    expr_assign                go to state 519
    expr_assign_pipe           go to state 520
    expr_named_call            go to state 521
    expr_method_call           go to state 522
    func_addr_expr             go to state 523
    expr_field                 go to state 524
    expr                       go to state 525
    expr_mtag                  go to state 526
    basic_type_declaration     go to state 527
    make_decl                  go to state 528
    make_struct_decl           go to state 529
    make_tuple_call            go to state 530
    make_dim_decl              go to state 531
    make_table_decl            go to state 532
    array_comprehension        go to state 533


State 366

  567 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@39 enum_list $@40 '}'

    $default  reduce using rule 565 ($@39)

    $@39  go to state 534


State 367

  545 enum_list: enum_list . ';'
  546          | enum_list . "name" ';'
  547          | enum_list . "name" '=' expr ';'
  564 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list . $@38 '}'

    "name"  shift, and go to state 535
    ';'     shift, and go to state 536

    $default  reduce using rule 563 ($@38)

    $@38  go to state 537


State 368

  569 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 538


State 369

  572 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 572 (structure_name)


State 370

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 484 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 539


State 371

  535 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 298
    "name"  shift, and go to state 299

    let_variable_name_with_pos_list  go to state 300
    let_variable_declaration         go to state 540


State 372

  472 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 541


State 373

  524 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 544
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 374

  525 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 545


State 375

  526 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  527                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 546


State 376

  528 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  529                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  530                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 547


State 377

  522 optional_ref: '&' .

    $default  reduce using rule 522 (optional_ref)


State 378

  531 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  532                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 548
    ":="  shift, and go to state 549
    '='   shift, and go to state 550

    copy_or_move_or_clone  go to state 551


State 379

  657 type_declaration_no_options: "array" '<' . $@47 type_declaration '>' $@48

    $default  reduce using rule 655 ($@47)

    $@47  go to state 552


State 380

  660 type_declaration_no_options: "table" '<' . $@49 table_type_pair '>' $@50

    $default  reduce using rule 658 ($@49)

    $@49  go to state 553


State 381

  663 type_declaration_no_options: "iterator" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 661 ($@51)

    $@51  go to state 554


State 382

  653 type_declaration_no_options: "smart_ptr" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 651 ($@45)

    $@45  go to state 555


State 383

  621 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 556


State 384

  630 bitfield_type_declaration: "bitfield" '<' . $@43 bitfield_bits '>' $@44

    $default  reduce using rule 628 ($@43)

    $@43  go to state 557


State 385

  667 type_declaration_no_options: "block" '<' . $@53 type_declaration '>' $@54
  670                            | "block" '<' . $@55 optional_function_argument_list optional_function_type '>' $@56

    ':'       reduce using rule 668 ($@55)
    '>'       reduce using rule 668 ($@55)
    '('       reduce using rule 668 ($@55)
    $default  reduce using rule 665 ($@53)

    $@53  go to state 558
    $@55  go to state 559


State 386

  674 type_declaration_no_options: "function" '<' . $@57 type_declaration '>' $@58
  677                            | "function" '<' . $@59 optional_function_argument_list optional_function_type '>' $@60

    ':'       reduce using rule 675 ($@59)
    '>'       reduce using rule 675 ($@59)
    '('       reduce using rule 675 ($@59)
    $default  reduce using rule 672 ($@57)

    $@57  go to state 560
    $@59  go to state 561


State 387

  681 type_declaration_no_options: "lambda" '<' . $@61 type_declaration '>' $@62
  684                            | "lambda" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 682 ($@63)
    '>'       reduce using rule 682 ($@63)
    '('       reduce using rule 682 ($@63)
    $default  reduce using rule 679 ($@61)

    $@61  go to state 562
    $@63  go to state 563


State 388

  687 type_declaration_no_options: "tuple" '<' . $@65 tuple_type_list '>' $@66

    $default  reduce using rule 685 ($@65)

    $@65  go to state 564


State 389

  690 type_declaration_no_options: "variant" '<' . $@67 variant_type_list '>' $@68

    $default  reduce using rule 688 ($@67)

    $@67  go to state 565


State 390

  622 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 566
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 391

  641 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 641 (type_declaration_no_options)


State 392

  646 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 646 (type_declaration_no_options)


State 393

  640 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 640 (type_declaration_no_options)


State 394

  648 type_declaration_no_options: type_declaration_no_options "==" . "const"
  649                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 567
    '&'      shift, and go to state 568


State 395

  654 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 654 (type_declaration_no_options)


State 396

  650 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 650 (type_declaration_no_options)


State 397

  643 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 643 (type_declaration_no_options)


State 398

  639 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  642                            | type_declaration_no_options '-' . "const"
  644                            | type_declaration_no_options '-' . '&'
  647                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 569
    '&'      shift, and go to state 570
    '['      shift, and go to state 571
    '#'      shift, and go to state 572


State 399

  637 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  638                            | type_declaration_no_options '[' . ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    ']'                               shift, and go to state 573
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 574
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 400

  645 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 645 (type_declaration_no_options)


State 401

  692 type_declaration: type_declaration '|' . type_declaration_no_options
  693                 | type_declaration '|' . '#'

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58
    '#'          shift, and go to state 575

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 576


State 402

  626 bitfield_alias_bits: bitfield_alias_bits . ';'
  627                    | bitfield_alias_bits . "name" ';'
  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 bitfield_alias_bits . $@80 '}'

    "name"  shift, and go to state 577
    ';'     shift, and go to state 578

    $default  reduce using rule 707 ($@80)

    $@80  go to state 579


State 403

  502 tuple_alias_type_list: tuple_alias_type_list . ';'
  503                      | tuple_alias_type_list . tuple_type ';'
  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 tuple_alias_type_list . $@72 '}'

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 580
    ';'          shift, and go to state 581

    $default  reduce using rule 697 ($@72)

    name_in_namespace            go to state 341
    tuple_type                   go to state 582
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 583
    $@72                         go to state 584


State 404

  508 variant_alias_type_list: variant_alias_type_list . ';'
  509                        | variant_alias_type_list . variant_type ';'
  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 variant_alias_type_list . $@76 '}'

    "name"  shift, and go to state 585
    ';'     shift, and go to state 586

    $default  reduce using rule 702 ($@76)

    variant_type  go to state 587
    $@76          go to state 588


State 405

  181 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 181 (function_name)


State 406

  171 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 171 (function_name)


State 407

  494 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 589
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 408

  493 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 409
    "name"  shift, and go to state 410

    variable_declaration         go to state 590
    variable_name_with_pos_list  go to state 412


State 409

  582 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 591


State 410

  581 variable_name_with_pos_list: "name" .
  583                            | "name" . "aka" "name"

    "aka"  shift, and go to state 592

    $default  reduce using rule 581 (variable_name_with_pos_list)


State 411

  492 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 492 (function_argument_declaration)


State 412

  512 variable_declaration: variable_name_with_pos_list .
  513                     | variable_name_with_pos_list . '&'
  514                     | variable_name_with_pos_list . ':' type_declaration
  515                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  516                     | variable_name_with_pos_list . copy_or_move expr
  517                     | variable_name_with_pos_list . copy_or_move expr_pipe
  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 593
    ','   shift, and go to state 594
    '='   shift, and go to state 595
    ':'   shift, and go to state 596
    '&'   shift, and go to state 597

    $default  reduce using rule 512 (variable_declaration)

    copy_or_move  go to state 598


State 413

  119 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 119 (optional_function_argument_list)


State 414

  496 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 358
    "[["  shift, and go to state 217

    $default  reduce using rule 471 (optional_field_annotation)

    optional_field_annotation      go to state 360
    function_argument_declaration  go to state 599


State 415

  121 optional_function_type: ':' type_declaration .
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401

    $default  reduce using rule 121 (optional_function_type)


State 416

  239 expressions: expressions error .

    $default  reduce using rule 239 (expressions)


State 417

   76 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 600
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 418

   61 if_or_static_if: "if" .

    $default  reduce using rule 61 (if_or_static_if)


State 419

   62 if_or_static_if: "static_if" .

    $default  reduce using rule 62 (if_or_static_if)


State 420

   74 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 409
    "name"  shift, and go to state 410

    variable_name_with_pos_list  go to state 601


State 421

  374 expr: "true" .

    $default  reduce using rule 374 (expr)


State 422

  375 expr: "false" .

    $default  reduce using rule 375 (expr)


State 423

  257 expr_new: "new" . new_type_declaration
  258         | "new" . new_type_declaration '(' ')'
  259         | "new" . new_type_declaration '(' expr_list ')'
  260         | "new" . make_decl

    "array"        shift, and go to state 426
    "table"        shift, and go to state 431
    "fixed_array"  shift, and go to state 445
    "tuple"        shift, and go to state 447
    "::"           shift, and go to state 57
    "[["           shift, and go to state 462
    "[{"           shift, and go to state 463
    "{{"           shift, and go to state 464
    "name"         shift, and go to state 58
    '<'            shift, and go to state 602

    name_in_namespace           go to state 341
    new_type_declaration        go to state 603
    structure_type_declaration  go to state 604
    make_decl                   go to state 605
    make_struct_decl            go to state 529
    make_tuple_call             go to state 530
    make_dim_decl               go to state 531
    make_table_decl             go to state 532
    array_comprehension         go to state 533


State 424

  297 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  298               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  299               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 606


State 425

  296 expr_type_decl: "type" . '<' $@16 type_declaration '>' $@17

    '<'  shift, and go to state 607


State 426

  754 make_dim_decl: "array" . '(' expr_list ')'
  757              | "array" . '<' $@81 type_declaration_no_options '>' $@82 '(' expr_list ')'

    '<'  shift, and go to state 608
    '('  shift, and go to state 609


State 427

  263 expression_return_no_pipe: "return" .
  264                          | "return" . expr_list
  265                          | "return" . "<-" expr_list
  267 expression_return: "return" . expr_pipe
  268                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "<-"                              shift, and go to state 610
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    $default  reduce using rule 263 (expression_return_no_pipe)

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    expr_pipe               go to state 611
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 612
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_assign             go to state 613
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 614
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 428

  368 expr: "null" .

    $default  reduce using rule 368 (expr)


State 429

  261 expression_break: "break" .

    $default  reduce using rule 261 (expression_break)


State 430

  274 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 283

    expression_block  go to state 615


State 431

  767 make_table_decl: "table" . '(' expr_map_tuple_list ')'
  768                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  769                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    '<'  shift, and go to state 616
    '('  shift, and go to state 617


State 432

  251 expression_delete: "delete" . expr
  252                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "explicit"                        shift, and go to state 618
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 619
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 433

  421 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 620


State 434

   77 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 621
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 435

   79 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 622


State 436

  287 expr_cast: "cast" . '<' $@10 type_declaration_no_options '>' $@11 expr

    '<'  shift, and go to state 623


State 437

  290 expr_cast: "upcast" . '<' $@12 type_declaration_no_options '>' $@13 expr

    '<'  shift, and go to state 624


State 438

  422 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 625


State 439

  262 expression_continue: "continue" .

    $default  reduce using rule 262 (expression_continue)


State 440

  236 expression_any: "pass" . ';'

    ';'  shift, and go to state 626


State 441

  293 expr_cast: "reinterpret" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 627


State 442

   53 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 628


State 443

   54 expression_goto: "goto" . "label" "integer constant"
   55                | "goto" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "label"                           shift, and go to state 629
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 630
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 444

   75 expression_unsafe: "unsafe" . expression_block
  453 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 631
    '{'  shift, and go to state 283

    expression_block  go to state 632


State 445

  758 make_dim_decl: "fixed_array" . '(' expr_list ')'
  761              | "fixed_array" . '<' $@83 type_declaration_no_options '>' $@84 '(' expr_list ')'

    '<'  shift, and go to state 633
    '('  shift, and go to state 634


State 446

  612 basic_type_declaration: "bitfield" .

    $default  reduce using rule 612 (basic_type_declaration)


State 447

  749 make_tuple_call: "tuple" . '(' expr_list ')'

    '('  shift, and go to state 635


State 448

  423 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  424     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 636


State 449

  269 expression_yield_no_pipe: "yield" . expr
  270                         | "yield" . "<-" expr
  272 expression_yield: "yield" . expr_pipe
  273                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "<-"                              shift, and go to state 637
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    expr_pipe               go to state 638
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_assign             go to state 613
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 639
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 450

  404 expr: "++" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 640
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 451

  405 expr: "--" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 641
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 452

  247 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 643


State 453

  245 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 644


State 454

  246 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 645


State 455

  455 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 646


State 456

  456 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 647


State 457

  457 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 648


State 458

  458 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 649


State 459

  459 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 650


State 460

  461 expr_mtag: "$c" . '(' expr ')' '(' ')'
  462          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 651


State 461

  460 expr_mtag: "..." .

    $default  reduce using rule 460 (expr_mtag)


State 462

  738 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  739                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  740                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  741                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  752 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  772 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 652
    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 653


State 463

  742 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  743                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  753 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  773 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 654
    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 655


State 464

  766 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 656
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_map_tuple          go to state 657
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table              go to state 658
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 465

  318 expr_numeric_const: "integer constant" .

    $default  reduce using rule 318 (expr_numeric_const)


State 466

  320 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 320 (expr_numeric_const)


State 467

  319 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 319 (expr_numeric_const)


State 468

  321 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 321 (expr_numeric_const)


State 469

  322 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 322 (expr_numeric_const)


State 470

  323 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 323 (expr_numeric_const)


State 471

  324 expr_numeric_const: "double constant" .

    $default  reduce using rule 324 (expr_numeric_const)


State 472

  240 expr_keyword: "keyword" . expr expression_block
  243 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '<'                               shift, and go to state 659
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 660
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 473

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 661


State 474

  381 expr: '-' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 662
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 475

  380 expr: '+' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 663
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 476

  420 expr: '*' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 664
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 477

  379 expr: '~' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 665
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 478

  378 expr: '!' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 666
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 479

  408 expr: '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 667
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 480

  305 block_or_lambda: '$' .

    $default  reduce using rule 305 (block_or_lambda)


State 481

  306 block_or_lambda: '@' .
  307                | '@' . '@'
  356 func_addr_expr: '@' . '@' func_addr_name
  359               | '@' . '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  362               | '@' . '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  470 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 668

    $default  reduce using rule 306 (block_or_lambda)


State 482

  216 expression_any: ';' .

    $default  reduce using rule 216 (expression_any)


State 483

  214 expression_block: '{' expressions '}' .
  215                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 669

    $default  reduce using rule 214 (expression_block)


State 484

  372 expr: string_builder .

    $default  reduce using rule 372 (expr)


State 485

  371 expr: expr_reader .

    $default  reduce using rule 371 (expr)


State 486

  234 expression_any: expression_label . ';'

    ';'  shift, and go to state 670


State 487

  235 expression_any: expression_goto . ';'

    ';'  shift, and go to state 671


State 488

   71 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 672
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 489

   73 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 673


State 490

  232 expression_any: expression_if_then_else .

    $default  reduce using rule 232 (expression_any)


State 491

  227 expression_any: expression_for_loop .

    $default  reduce using rule 227 (expression_any)


State 492

  224 expression_any: expression_unsafe .

    $default  reduce using rule 224 (expression_any)


State 493

  223 expression_any: expression_while_loop .

    $default  reduce using rule 223 (expression_any)


State 494

  225 expression_any: expression_with .

    $default  reduce using rule 225 (expression_any)


State 495

  226 expression_any: expression_with_alias .

    $default  reduce using rule 226 (expression_any)


State 496

  316 expr_block: expression_block .

    $default  reduce using rule 316 (expr_block)


State 497

  238 expressions: expressions expression_any .

    $default  reduce using rule 238 (expressions)


State 498

  218 expression_any: expr_keyword .

    $default  reduce using rule 218 (expression_any)


State 499

  454 expr: expression_keyword .

    $default  reduce using rule 454 (expr)


State 500

  217 expression_any: expr_pipe .

    $default  reduce using rule 217 (expression_any)


State 501

  350 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  351                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  369 expr: name_in_namespace .
  416     | name_in_namespace . '(' ')'
  417     | name_in_namespace . '(' expr_list ')'
  452     | name_in_namespace . "name"

    "name"  shift, and go to state 674
    '('     shift, and go to state 675

    "name"    [reduce using rule 369 (expr)]
    '('       [reduce using rule 369 (expr)]
    $default  reduce using rule 369 (expr)


State 502

  221 expression_any: expression_delete . ';'

    ';'  shift, and go to state 676


State 503

  445 expr: expr_new .

    $default  reduce using rule 445 (expr)


State 504

   69 expression_if_one_liner: expression_break .
  228 expression_any: expression_break . ';'

    ';'  shift, and go to state 677

    $default  reduce using rule 69 (expression_if_one_liner)


State 505

   70 expression_if_one_liner: expression_continue .
  229 expression_any: expression_continue . ';'

    ';'  shift, and go to state 678

    $default  reduce using rule 70 (expression_if_one_liner)


State 506

   67 expression_if_one_liner: expression_return_no_pipe .
  266 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 679

    $default  reduce using rule 67 (expression_if_one_liner)


State 507

  230 expression_any: expression_return .

    $default  reduce using rule 230 (expression_any)


State 508

   68 expression_if_one_liner: expression_yield_no_pipe .
  271 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 680

    $default  reduce using rule 68 (expression_if_one_liner)


State 509

  231 expression_any: expression_yield .

    $default  reduce using rule 231 (expression_any)


State 510

  233 expression_any: expression_try_catch .

    $default  reduce using rule 233 (expression_any)


State 511

  283 expression_let: kwd_let . optional_in_scope let_variable_declaration
  284               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 681

    $default  reduce using rule 278 (optional_in_scope)

    optional_in_scope  go to state 682


State 512

  222 expression_any: expression_let .

    $default  reduce using rule 222 (expression_any)


State 513

  444 expr: expr_cast .

    $default  reduce using rule 444 (expr)


State 514

  443 expr: expr_type_decl .

    $default  reduce using rule 443 (expr)


State 515

  442 expr: expr_type_info .

    $default  reduce using rule 442 (expr)


State 516

  317 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 683


State 517

  448 expr: expr_block .

    $default  reduce using rule 448 (expr)


State 518

  370 expr: expr_numeric_const .

    $default  reduce using rule 370 (expr)


State 519

  220 expression_any: expr_assign . ';'
  244 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 684
    ';'    shift, and go to state 685


State 520

  219 expression_any: expr_assign_pipe .

    $default  reduce using rule 219 (expression_any)


State 521

  447 expr: expr_named_call .

    $default  reduce using rule 447 (expr)


State 522

  446 expr: expr_method_call .

    $default  reduce using rule 446 (expr)


State 523

  415 expr: func_addr_expr .

    $default  reduce using rule 415 (expr)


State 524

  376 expr: expr_field .

    $default  reduce using rule 376 (expr)


State 525

   66 expression_if_one_liner: expr .
  325 expr_assign: expr .
  326            | expr . '=' expr
  327            | expr . "<-" expr
  328            | expr . ":=" expr
  329            | expr . "&=" expr
  330            | expr . "|=" expr
  331            | expr . "^=" expr
  332            | expr . "&&=" expr
  333            | expr . "||=" expr
  334            | expr . "^^=" expr
  335            | expr . "+=" expr
  336            | expr . "-=" expr
  337            | expr . "*=" expr
  338            | expr . "/=" expr
  339            | expr . "%=" expr
  340            | expr . "<<=" expr
  341            | expr . ">>=" expr
  342            | expr . "<<<=" expr
  343            | expr . ">>>=" expr
  344 expr_assign_pipe: expr . '=' "@ <|" expr_block
  345                 | expr . '=' "@@ <|" expr_block
  346                 | expr . '=' "$ <|" expr_block
  347                 | expr . "<-" "@ <|" expr_block
  348                 | expr . "<-" "@@ <|" expr_block
  349                 | expr . "<-" "$ <|" expr_block
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 686
    "as"    shift, and go to state 687
    "+="    shift, and go to state 688
    "-="    shift, and go to state 689
    "/="    shift, and go to state 690
    "*="    shift, and go to state 691
    "%="    shift, and go to state 692
    "&="    shift, and go to state 693
    "|="    shift, and go to state 694
    "^="    shift, and go to state 695
    "<<"    shift, and go to state 696
    ">>"    shift, and go to state 697
    "++"    shift, and go to state 698
    "--"    shift, and go to state 699
    "<="    shift, and go to state 700
    "<<="   shift, and go to state 701
    ">>="   shift, and go to state 702
    ">="    shift, and go to state 703
    "=="    shift, and go to state 704
    "!="    shift, and go to state 705
    "->"    shift, and go to state 706
    "<-"    shift, and go to state 707
    "??"    shift, and go to state 708
    "?."    shift, and go to state 709
    "?["    shift, and go to state 710
    "<|"    shift, and go to state 711
    "|>"    shift, and go to state 712
    ":="    shift, and go to state 713
    "<<<"   shift, and go to state 714
    ">>>"   shift, and go to state 715
    "<<<="  shift, and go to state 716
    ">>>="  shift, and go to state 717
    "&&"    shift, and go to state 718
    "||"    shift, and go to state 719
    "^^"    shift, and go to state 720
    "&&="   shift, and go to state 721
    "||="   shift, and go to state 722
    "^^="   shift, and go to state 723
    ".."    shift, and go to state 724
    '='     shift, and go to state 725
    '?'     shift, and go to state 726
    '|'     shift, and go to state 727
    '^'     shift, and go to state 728
    '&'     shift, and go to state 729
    '<'     shift, and go to state 730
    '>'     shift, and go to state 731
    '-'     shift, and go to state 732
    '+'     shift, and go to state 733
    '*'     shift, and go to state 734
    '/'     shift, and go to state 735
    '%'     shift, and go to state 736
    '.'     shift, and go to state 737
    '['     shift, and go to state 738

    "if"      reduce using rule 66 (expression_if_one_liner)
    $default  reduce using rule 325 (expr_assign)


State 526

  377 expr: expr_mtag .

    $default  reduce using rule 377 (expr)


State 527

  418 expr: basic_type_declaration . '(' ')'
  419     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 739


State 528

  373 expr: make_decl .

    $default  reduce using rule 373 (expr)


State 529

  709 make_decl: make_struct_decl .

    $default  reduce using rule 709 (make_decl)


State 530

  713 make_decl: make_tuple_call .

    $default  reduce using rule 713 (make_decl)


State 531

  710 make_decl: make_dim_decl .

    $default  reduce using rule 710 (make_decl)


State 532

  711 make_decl: make_table_decl .

    $default  reduce using rule 711 (make_decl)


State 533

  712 make_decl: array_comprehension .

    $default  reduce using rule 712 (make_decl)


State 534

  567 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 . enum_list $@40 '}'

    $default  reduce using rule 544 (enum_list)

    enum_list  go to state 740


State 535

  546 enum_list: enum_list "name" . ';'
  547          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 741
    ';'  shift, and go to state 742


State 536

  545 enum_list: enum_list ';' .

    $default  reduce using rule 545 (enum_list)


State 537

  564 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 . '}'

    '}'  shift, and go to state 743


State 538

  569 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 569 (optional_structure_parent)


State 539

  486 struct_variable_declaration_list: struct_variable_declaration_list . $@30 structure_variable_declaration ';'
  488                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  490                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  491                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 744
    '}'  shift, and go to state 745

    "def"     reduce using rule 115 (optional_annotation_list)
    $default  reduce using rule 485 ($@30)

    optional_annotation_list  go to state 746
    $@30                      go to state 747


State 540

  535 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 535 (global_variable_declaration_list)


State 541

  472 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 472 (optional_field_annotation)


State 542

  453 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 631


State 543

  243 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    '<'  shift, and go to state 659


State 544

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  524 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 748


State 545

  525 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 525 (let_variable_name_with_pos_list)


State 546

  526 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  527                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 749

    $default  reduce using rule 526 (let_variable_name_with_pos_list)


State 547

  528 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  529                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  530                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "<-"        shift, and go to state 548
    "??"        shift, and go to state 395
    ":="        shift, and go to state 549
    '='         shift, and go to state 550
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    ';'         shift, and go to state 750
    '#'         shift, and go to state 400

    copy_or_move_or_clone  go to state 751


State 548

  519 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 519 (copy_or_move_or_clone)


State 549

  520 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 520 (copy_or_move_or_clone)


State 550

  518 copy_or_move_or_clone: '=' .

    $default  reduce using rule 518 (copy_or_move_or_clone)


State 551

  531 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  532                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    expr_pipe               go to state 752
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_assign             go to state 613
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 753
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 552

  657 type_declaration_no_options: "array" '<' $@47 . type_declaration '>' $@48

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 754


State 553

  660 type_declaration_no_options: "table" '<' $@49 . table_type_pair '>' $@50

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    table_type_pair              go to state 755
    type_declaration_no_options  go to state 346
    type_declaration             go to state 756


State 554

  663 type_declaration_no_options: "iterator" '<' $@51 . type_declaration '>' $@52

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 757


State 555

  653 type_declaration_no_options: "smart_ptr" '<' $@45 . type_declaration '>' $@46

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 758


State 556

  621 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 759


State 557

  630 bitfield_type_declaration: "bitfield" '<' $@43 . bitfield_bits '>' $@44

    "name"  shift, and go to state 760

    bitfield_bits  go to state 761


State 558

  667 type_declaration_no_options: "block" '<' $@53 . type_declaration '>' $@54

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 762


State 559

  670 type_declaration_no_options: "block" '<' $@55 . optional_function_argument_list optional_function_type '>' $@56

    '('  shift, and go to state 281

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 763


State 560

  674 type_declaration_no_options: "function" '<' $@57 . type_declaration '>' $@58

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 764


State 561

  677 type_declaration_no_options: "function" '<' $@59 . optional_function_argument_list optional_function_type '>' $@60

    '('  shift, and go to state 281

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 765


State 562

  681 type_declaration_no_options: "lambda" '<' $@61 . type_declaration '>' $@62

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 766


State 563

  684 type_declaration_no_options: "lambda" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 281

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 767


State 564

  687 type_declaration_no_options: "tuple" '<' $@65 . tuple_type_list '>' $@66

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 580

    name_in_namespace            go to state 341
    tuple_type                   go to state 768
    tuple_type_list              go to state 769
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 583


State 565

  690 type_declaration_no_options: "variant" '<' $@67 . variant_type_list '>' $@68

    "name"  shift, and go to state 585

    variant_type       go to state 770
    variant_type_list  go to state 771


State 566

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  622 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 772


State 567

  648 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 648 (type_declaration_no_options)


State 568

  649 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 649 (type_declaration_no_options)


State 569

  642 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 642 (type_declaration_no_options)


State 570

  644 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 644 (type_declaration_no_options)


State 571

  639 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 773


State 572

  647 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 647 (type_declaration_no_options)


State 573

  638 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 638 (type_declaration_no_options)


State 574

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  637 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ']'    shift, and go to state 774


State 575

  693 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 693 (type_declaration)


State 576

  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"
  692 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400

    $default  reduce using rule 692 (type_declaration)


State 577

  627 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 775


State 578

  626 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 626 (bitfield_alias_bits)


State 579

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 bitfield_alias_bits $@80 . '}'

    '}'  shift, and go to state 776


State 580

  248 name_in_namespace: "name" .
  249                  | "name" . "::" "name"
  498 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 97
    ':'   shift, and go to state 777

    $default  reduce using rule 248 (name_in_namespace)


State 581

  502 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 502 (tuple_alias_type_list)


State 582

  503 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 778


State 583

  497 tuple_type: type_declaration .
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401

    $default  reduce using rule 497 (tuple_type)


State 584

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 tuple_alias_type_list $@72 . '}'

    '}'  shift, and go to state 779


State 585

  504 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 780


State 586

  508 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 508 (variant_alias_type_list)


State 587

  509 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 781


State 588

  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 variant_alias_type_list $@76 . '}'

    '}'  shift, and go to state 782


State 589

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  494 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 783


State 590

  493 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 493 (function_argument_declaration)


State 591

  582 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 784
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 592

  583 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 785


State 593

  511 copy_or_move: "<-" .

    $default  reduce using rule 511 (copy_or_move)


State 594

  584 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  585                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 786


State 595

  510 copy_or_move: '=' .

    $default  reduce using rule 510 (copy_or_move)


State 596

  514 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  515                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 787


State 597

  513 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 513 (variable_declaration)


State 598

  516 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  517                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    expr_pipe               go to state 788
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_assign             go to state 613
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 789
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 599

  496 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 496 (function_argument_list)


State 600

   76 expression_while_loop: "while" expr . expression_block
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    '{'    shift, and go to state 283

    expression_block  go to state 790


State 601

   74 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 791
    ','   shift, and go to state 594


State 602

  255 new_type_declaration: '<' . $@8 type_declaration '>' $@9

    $default  reduce using rule 253 ($@8)

    $@8  go to state 792


State 603

  257 expr_new: "new" new_type_declaration .
  258         | "new" new_type_declaration . '(' ')'
  259         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 793

    '('       [reduce using rule 257 (expr_new)]
    $default  reduce using rule 257 (expr_new)


State 604

  256 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 256 (new_type_declaration)


State 605

  260 expr_new: "new" make_decl .

    $default  reduce using rule 260 (expr_new)


State 606

  297 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  298               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  299               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 794


State 607

  296 expr_type_decl: "type" '<' . $@16 type_declaration '>' $@17

    $default  reduce using rule 294 ($@16)

    $@16  go to state 795


State 608

  757 make_dim_decl: "array" '<' . $@81 type_declaration_no_options '>' $@82 '(' expr_list ')'

    $default  reduce using rule 755 ($@81)

    $@81  go to state 796


State 609

  754 make_dim_decl: "array" '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 797
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 610

  265 expression_return_no_pipe: "return" "<-" . expr_list
  268 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    expr_pipe               go to state 799
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 800
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_assign             go to state 613
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 614
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 611

  267 expression_return: "return" expr_pipe .

    $default  reduce using rule 267 (expression_return)


State 612

  264 expression_return_no_pipe: "return" expr_list .
  301 expr_list: expr_list . ',' expr

    ','  shift, and go to state 801

    $default  reduce using rule 264 (expression_return_no_pipe)


State 613

  244 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 684


State 614

  300 expr_list: expr .
  325 expr_assign: expr .
  326            | expr . '=' expr
  327            | expr . "<-" expr
  328            | expr . ":=" expr
  329            | expr . "&=" expr
  330            | expr . "|=" expr
  331            | expr . "^=" expr
  332            | expr . "&&=" expr
  333            | expr . "||=" expr
  334            | expr . "^^=" expr
  335            | expr . "+=" expr
  336            | expr . "-=" expr
  337            | expr . "*=" expr
  338            | expr . "/=" expr
  339            | expr . "%=" expr
  340            | expr . "<<=" expr
  341            | expr . ">>=" expr
  342            | expr . "<<<=" expr
  343            | expr . ">>>=" expr
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 686
    "as"    shift, and go to state 687
    "+="    shift, and go to state 688
    "-="    shift, and go to state 689
    "/="    shift, and go to state 690
    "*="    shift, and go to state 691
    "%="    shift, and go to state 692
    "&="    shift, and go to state 693
    "|="    shift, and go to state 694
    "^="    shift, and go to state 695
    "<<"    shift, and go to state 696
    ">>"    shift, and go to state 697
    "++"    shift, and go to state 698
    "--"    shift, and go to state 699
    "<="    shift, and go to state 700
    "<<="   shift, and go to state 701
    ">>="   shift, and go to state 702
    ">="    shift, and go to state 703
    "=="    shift, and go to state 704
    "!="    shift, and go to state 705
    "->"    shift, and go to state 706
    "<-"    shift, and go to state 802
    "??"    shift, and go to state 708
    "?."    shift, and go to state 709
    "?["    shift, and go to state 710
    "<|"    shift, and go to state 711
    "|>"    shift, and go to state 712
    ":="    shift, and go to state 713
    "<<<"   shift, and go to state 714
    ">>>"   shift, and go to state 715
    "<<<="  shift, and go to state 716
    ">>>="  shift, and go to state 717
    "&&"    shift, and go to state 718
    "||"    shift, and go to state 719
    "^^"    shift, and go to state 720
    "&&="   shift, and go to state 721
    "||="   shift, and go to state 722
    "^^="   shift, and go to state 723
    ".."    shift, and go to state 724
    '='     shift, and go to state 803
    '?'     shift, and go to state 726
    '|'     shift, and go to state 727
    '^'     shift, and go to state 728
    '&'     shift, and go to state 729
    '<'     shift, and go to state 730
    '>'     shift, and go to state 731
    '-'     shift, and go to state 732
    '+'     shift, and go to state 733
    '*'     shift, and go to state 734
    '/'     shift, and go to state 735
    '%'     shift, and go to state 736
    '.'     shift, and go to state 737
    '['     shift, and go to state 738

    " <|"     reduce using rule 325 (expr_assign)
    $default  reduce using rule 300 (expr_list)


State 615

  274 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 804


State 616

  768 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  769                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 805


State 617

  767 make_table_decl: "table" '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 656
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_map_tuple          go to state 806
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    expr_map_tuple_list     go to state 807
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 618

  252 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 808
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 619

  251 expression_delete: "delete" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 251 (expression_delete)


State 620

  421 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 809
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 621

   77 expression_with: "with" expr . expression_block
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    '{'    shift, and go to state 283

    expression_block  go to state 810


State 622

   79 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 811


State 623

  287 expr_cast: "cast" '<' . $@10 type_declaration_no_options '>' $@11 expr

    $default  reduce using rule 285 ($@10)

    $@10  go to state 812


State 624

  290 expr_cast: "upcast" '<' . $@12 type_declaration_no_options '>' $@13 expr

    $default  reduce using rule 288 ($@12)

    $@12  go to state 813


State 625

  422 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 814
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 626

  236 expression_any: "pass" ';' .

    $default  reduce using rule 236 (expression_any)


State 627

  293 expr_cast: "reinterpret" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 291 ($@14)

    $@14  go to state 815


State 628

   53 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 816


State 629

   54 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 817


State 630

   55 expression_goto: "goto" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 55 (expression_goto)


State 631

  453 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 818
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 632

   75 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 75 (expression_unsafe)


State 633

  761 make_dim_decl: "fixed_array" '<' . $@83 type_declaration_no_options '>' $@84 '(' expr_list ')'

    $default  reduce using rule 759 ($@83)

    $@83  go to state 819


State 634

  758 make_dim_decl: "fixed_array" '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 820
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 635

  749 make_tuple_call: "tuple" '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 821
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 636

  423 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  424     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 822


State 637

  270 expression_yield_no_pipe: "yield" "<-" . expr
  273 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    expr_pipe               go to state 823
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_assign             go to state 613
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 824
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 638

  272 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 272 (expression_yield)


State 639

  269 expression_yield_no_pipe: "yield" expr .
  325 expr_assign: expr .
  326            | expr . '=' expr
  327            | expr . "<-" expr
  328            | expr . ":=" expr
  329            | expr . "&=" expr
  330            | expr . "|=" expr
  331            | expr . "^=" expr
  332            | expr . "&&=" expr
  333            | expr . "||=" expr
  334            | expr . "^^=" expr
  335            | expr . "+=" expr
  336            | expr . "-=" expr
  337            | expr . "*=" expr
  338            | expr . "/=" expr
  339            | expr . "%=" expr
  340            | expr . "<<=" expr
  341            | expr . ">>=" expr
  342            | expr . "<<<=" expr
  343            | expr . ">>>=" expr
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 686
    "as"    shift, and go to state 687
    "+="    shift, and go to state 688
    "-="    shift, and go to state 689
    "/="    shift, and go to state 690
    "*="    shift, and go to state 691
    "%="    shift, and go to state 692
    "&="    shift, and go to state 693
    "|="    shift, and go to state 694
    "^="    shift, and go to state 695
    "<<"    shift, and go to state 696
    ">>"    shift, and go to state 697
    "++"    shift, and go to state 698
    "--"    shift, and go to state 699
    "<="    shift, and go to state 700
    "<<="   shift, and go to state 701
    ">>="   shift, and go to state 702
    ">="    shift, and go to state 703
    "=="    shift, and go to state 704
    "!="    shift, and go to state 705
    "->"    shift, and go to state 706
    "<-"    shift, and go to state 802
    "??"    shift, and go to state 708
    "?."    shift, and go to state 709
    "?["    shift, and go to state 710
    "<|"    shift, and go to state 711
    "|>"    shift, and go to state 712
    ":="    shift, and go to state 713
    "<<<"   shift, and go to state 714
    ">>>"   shift, and go to state 715
    "<<<="  shift, and go to state 716
    ">>>="  shift, and go to state 717
    "&&"    shift, and go to state 718
    "||"    shift, and go to state 719
    "^^"    shift, and go to state 720
    "&&="   shift, and go to state 721
    "||="   shift, and go to state 722
    "^^="   shift, and go to state 723
    ".."    shift, and go to state 724
    '='     shift, and go to state 803
    '?'     shift, and go to state 726
    '|'     shift, and go to state 727
    '^'     shift, and go to state 728
    '&'     shift, and go to state 729
    '<'     shift, and go to state 730
    '>'     shift, and go to state 731
    '-'     shift, and go to state 732
    '+'     shift, and go to state 733
    '*'     shift, and go to state 734
    '/'     shift, and go to state 735
    '%'     shift, and go to state 736
    '.'     shift, and go to state 737
    '['     shift, and go to state 738

    " <|"     reduce using rule 325 (expr_assign)
    $default  reduce using rule 269 (expression_yield_no_pipe)


State 640

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  404     | "++" expr .
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 404 (expr)


State 641

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  405     | "--" expr .
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 405 (expr)


State 642

  306 block_or_lambda: '@' .
  307                | '@' . '@'

    '@'  shift, and go to state 825

    $default  reduce using rule 306 (block_or_lambda)


State 643

  247 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 247 (expr_pipe)


State 644

  245 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 245 (expr_pipe)


State 645

  246 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 246 (expr_pipe)


State 646

  455 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 826
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 647

  456 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 827
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 648

  457 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 828
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 649

  458 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 829
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 650

  459 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 830
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 651

  461 expr_mtag: "$c" '(' . expr ')' '(' ')'
  462          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 831
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 652

  772 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 409
    "name"  shift, and go to state 410

    variable_name_with_pos_list  go to state 832


State 653

  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"
  738 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  739                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  740                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  741                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  752 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "const"                           shift, and go to state 391
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "where"                           shift, and go to state 833
    "reinterpret"                     shift, and go to state 441
    "implicit"                        shift, and go to state 392
    "explicit"                        shift, and go to state 393
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "=="                              shift, and go to state 394
    "??"                              shift, and go to state 395
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "$f"                              shift, and go to state 834
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 835
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '?'                               shift, and go to state 396
    '&'                               shift, and go to state 397
    '-'                               shift, and go to state 836
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '['                               shift, and go to state 399
    '('                               shift, and go to state 837
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283
    '#'                               shift, and go to state 400

    $default  reduce using rule 724 (optional_block)

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 838
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_fields      go to state 839
    make_struct_dim         go to state 840
    optional_block          go to state 841
    make_struct_decl        go to state 529
    make_tuple              go to state 842
    make_tuple_call         go to state 530
    make_dim                go to state 843
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 654

  773 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 409
    "name"  shift, and go to state 410

    variable_name_with_pos_list  go to state 844


State 655

  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"
  742 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  743                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  753 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "const"                           shift, and go to state 391
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "implicit"                        shift, and go to state 392
    "explicit"                        shift, and go to state 393
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "=="                              shift, and go to state 394
    "??"                              shift, and go to state 395
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "$f"                              shift, and go to state 834
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 835
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '?'                               shift, and go to state 396
    '&'                               shift, and go to state 397
    '-'                               shift, and go to state 836
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '['                               shift, and go to state 399
    '('                               shift, and go to state 845
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283
    '#'                               shift, and go to state 400

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 838
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_fields      go to state 839
    make_struct_dim         go to state 846
    make_struct_decl        go to state 529
    make_tuple              go to state 842
    make_tuple_call         go to state 530
    make_dim                go to state 847
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 656

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  747 make_map_tuple: expr . "=>" expr
  748               | expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "=>"   shift, and go to state 848
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 748 (make_map_tuple)


State 657

  762 make_table: make_map_tuple .

    $default  reduce using rule 762 (make_table)


State 658

  763 make_table: make_table . ';' make_map_tuple
  766 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 849
    ';'    shift, and go to state 850
    '}'    shift, and go to state 851

    optional_trailing_semicolon_cur_cur  go to state 852


State 659

  243 expression_keyword: "keyword" '<' . $@6 type_declaration_no_options '>' $@7 expr

    $default  reduce using rule 241 ($@6)

    $@6  go to state 853


State 660

  240 expr_keyword: "keyword" expr . expression_block
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    '{'    shift, and go to state 283

    expression_block  go to state 854


State 661

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 161
    STRING_CHARACTER_ESC  shift, and go to state 162
    "end of the string"   shift, and go to state 855
    "{"                   shift, and go to state 856

    character_sequence  go to state 857


State 662

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  381 expr: '-' expr .
  382     | expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 381 (expr)


State 663

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  380 expr: '+' expr .
  382     | expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 380 (expr)


State 664

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  420     | '*' expr .
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 420 (expr)


State 665

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  379 expr: '~' expr .
  382     | expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 379 (expr)


State 666

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  378 expr: '!' expr .
  382     | expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 378 (expr)


State 667

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  408     | '(' expr . ')'
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 858


State 668

  307 block_or_lambda: '@' '@' .
  356 func_addr_expr: '@' '@' . func_addr_name
  359               | '@' '@' . '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  362               | '@' '@' . '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  470 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 859
    "$c"    shift, and go to state 860
    "name"  shift, and go to state 58
    '<'     shift, and go to state 861

    $default  reduce using rule 307 (block_or_lambda)

    name_in_namespace  go to state 862
    func_addr_name     go to state 863


State 669

  215 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 864


State 670

  234 expression_any: expression_label ';' .

    $default  reduce using rule 234 (expression_any)


State 671

  235 expression_any: expression_goto ';' .

    $default  reduce using rule 235 (expression_any)


State 672

   71 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    '{'    shift, and go to state 283

    expression_block  go to state 865


State 673

   73 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 72 ($@3)

    $@3  go to state 866


State 674

  452 expr: name_in_namespace "name" .

    $default  reduce using rule 452 (expr)


State 675

  350 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  351                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  416 expr: name_in_namespace '(' . ')'
  417     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '['                               shift, and go to state 867
    '('                               shift, and go to state 479
    ')'                               shift, and go to state 868
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 869
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 676

  221 expression_any: expression_delete ';' .

    $default  reduce using rule 221 (expression_any)


State 677

  228 expression_any: expression_break ';' .

    $default  reduce using rule 228 (expression_any)


State 678

  229 expression_any: expression_continue ';' .

    $default  reduce using rule 229 (expression_any)


State 679

  266 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 266 (expression_return)


State 680

  271 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 271 (expression_yield)


State 681

  277 optional_in_scope: "inscope" .

    $default  reduce using rule 277 (optional_in_scope)


State 682

  283 expression_let: kwd_let optional_in_scope . let_variable_declaration
  284               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 298
    "[["    shift, and go to state 870
    "name"  shift, and go to state 299

    tuple_expansion_variable_declaration  go to state 871
    let_variable_name_with_pos_list       go to state 300
    let_variable_declaration              go to state 872


State 683

  317 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 873

    $default  reduce using rule 314 (optional_capture_list)

    optional_capture_list  go to state 874


State 684

  244 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 875


State 685

  220 expression_any: expr_assign ';' .

    $default  reduce using rule 220 (expression_any)


State 686

  429 expr: expr "is" . "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr "is" . basic_type_declaration
  431     | expr "is" . "name"
  469 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 876
    "bool"      shift, and go to state 307
    "void"      shift, and go to state 308
    "string"    shift, and go to state 309
    "int"       shift, and go to state 311
    "int2"      shift, and go to state 312
    "int3"      shift, and go to state 313
    "int4"      shift, and go to state 314
    "uint"      shift, and go to state 315
    "bitfield"  shift, and go to state 446
    "uint2"     shift, and go to state 317
    "uint3"     shift, and go to state 318
    "uint4"     shift, and go to state 319
    "float"     shift, and go to state 320
    "float2"    shift, and go to state 321
    "float3"    shift, and go to state 322
    "float4"    shift, and go to state 323
    "range"     shift, and go to state 324
    "urange"    shift, and go to state 325
    "range64"   shift, and go to state 326
    "urange64"  shift, and go to state 327
    "int64"     shift, and go to state 329
    "uint64"    shift, and go to state 330
    "double"    shift, and go to state 331
    "int8"      shift, and go to state 334
    "uint8"     shift, and go to state 335
    "int16"     shift, and go to state 336
    "uint16"    shift, and go to state 337
    "$f"        shift, and go to state 877
    "name"      shift, and go to state 878

    basic_type_declaration  go to state 879


State 687

  432 expr: expr "as" . "name"
  435     | expr "as" . "type" '<' $@26 type_declaration '>' $@27
  436     | expr "as" . basic_type_declaration
  467 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 880
    "bool"      shift, and go to state 307
    "void"      shift, and go to state 308
    "string"    shift, and go to state 309
    "int"       shift, and go to state 311
    "int2"      shift, and go to state 312
    "int3"      shift, and go to state 313
    "int4"      shift, and go to state 314
    "uint"      shift, and go to state 315
    "bitfield"  shift, and go to state 446
    "uint2"     shift, and go to state 317
    "uint3"     shift, and go to state 318
    "uint4"     shift, and go to state 319
    "float"     shift, and go to state 320
    "float2"    shift, and go to state 321
    "float3"    shift, and go to state 322
    "float4"    shift, and go to state 323
    "range"     shift, and go to state 324
    "urange"    shift, and go to state 325
    "range64"   shift, and go to state 326
    "urange64"  shift, and go to state 327
    "int64"     shift, and go to state 329
    "uint64"    shift, and go to state 330
    "double"    shift, and go to state 331
    "int8"      shift, and go to state 334
    "uint8"     shift, and go to state 335
    "int16"     shift, and go to state 336
    "uint16"    shift, and go to state 337
    "$f"        shift, and go to state 881
    "name"      shift, and go to state 882

    basic_type_declaration  go to state 883


State 688

  335 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 884
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 689

  336 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 885
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 690

  338 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 886
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 691

  337 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 887
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 692

  339 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 888
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 693

  329 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 889
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 694

  330 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 890
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 695

  331 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 891
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 696

  382 expr: expr "<<" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 892
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 697

  383 expr: expr ">>" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 893
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 698

  406 expr: expr "++" .

    $default  reduce using rule 406 (expr)


State 699

  407 expr: expr "--" .

    $default  reduce using rule 407 (expr)


State 700

  395 expr: expr "<=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 894
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 701

  340 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 895
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 702

  341 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 896
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 703

  396 expr: expr ">=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 897
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 704

  393 expr: expr "==" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 898
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 705

  394 expr: expr "!=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 899
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 706

  352 expr_method_call: expr "->" . "name" '(' ')'
  353                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 900


State 707

  327 expr_assign: expr "<-" . expr
  347 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  348                 | expr "<-" . "@@ <|" expr_block
  349                 | expr "<-" . "$ <|" expr_block

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 901
    "@ <|"                            shift, and go to state 902
    "@@ <|"                           shift, and go to state 903
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 904
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 708

  425 expr: expr "??" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 905
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 709

  413 expr: expr "?." . "name"
  464 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 906
    "name"  shift, and go to state 907


State 710

  411 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 908
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 711

  449 expr: expr "<|" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 909
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 712

  450 expr: expr "|>" . expr
  451     | expr "|>" . basic_type_declaration

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 910
    expr_mtag               go to state 526
    basic_type_declaration  go to state 911
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 713

  328 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 912
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 714

  384 expr: expr "<<<" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 913
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 715

  385 expr: expr ">>>" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 914
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 716

  342 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 915
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 717

  343 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 916
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 718

  400 expr: expr "&&" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 917
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 719

  401 expr: expr "||" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 918
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 720

  402 expr: expr "^^" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 919
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 721

  332 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 920
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 722

  333 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 921
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 723

  334 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 922
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 724

  403 expr: expr ".." . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 923
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 725

  326 expr_assign: expr '=' . expr
  344 expr_assign_pipe: expr '=' . "@ <|" expr_block
  345                 | expr '=' . "@@ <|" expr_block
  346                 | expr '=' . "$ <|" expr_block

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 924
    "@ <|"                            shift, and go to state 925
    "@@ <|"                           shift, and go to state 926
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 927
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 726

  426 expr: expr '?' . expr ':' expr
  437     | expr '?' . "as" "name"
  440     | expr '?' . "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr '?' . "as" basic_type_declaration
  468 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "as"                              shift, and go to state 928
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 929
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 727

  398 expr: expr '|' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 930
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 728

  399 expr: expr '^' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 931
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 729

  397 expr: expr '&' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 932
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 730

  391 expr: expr '<' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 933
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 731

  392 expr: expr '>' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 934
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 732

  387 expr: expr '-' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 935
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 733

  386 expr: expr '+' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 936
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 734

  388 expr: expr '*' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 937
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 735

  389 expr: expr '/' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 938
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 736

  390 expr: expr '%' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 939
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 737

  363 expr_field: expr '.' . "name"
  364           | expr '.' . '.' "name"
  367           | expr '.' . $@22 error $@23
  410 expr: expr '.' . '[' expr ']'
  412     | expr '.' . "?[" expr ']'
  414     | expr '.' . "?." "name"
  463 expr_mtag: expr '.' . "$f" '(' expr ')'
  465          | expr '.' . '.' "$f" '(' expr ')'
  466          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 940
    "?["    shift, and go to state 941
    "$f"    shift, and go to state 942
    "name"  shift, and go to state 943
    '.'     shift, and go to state 944
    '['     shift, and go to state 945

    $default  reduce using rule 365 ($@22)

    $@22  go to state 946


State 738

  409 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 947
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 739

  418 expr: basic_type_declaration '(' . ')'
  419     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    ')'                               shift, and go to state 948
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 949
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 740

  545 enum_list: enum_list . ';'
  546          | enum_list . "name" ';'
  547          | enum_list . "name" '=' expr ';'
  567 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list . $@40 '}'

    "name"  shift, and go to state 535
    ';'     shift, and go to state 536

    $default  reduce using rule 566 ($@40)

    $@40  go to state 950


State 741

  547 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 951
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 742

  546 enum_list: enum_list "name" ';' .

    $default  reduce using rule 546 (enum_list)


State 743

  564 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}' .

    $default  reduce using rule 564 (enum_declaration)


State 744

  116 optional_annotation_list: '[' . annotation_list ']'
  491 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "::"       shift, and go to state 57
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 67
    annotation_list               go to state 952
    name_in_namespace             go to state 69


State 745

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 580 (structure_declaration)


State 746

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  490                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "def"  shift, and go to state 953


State 747

  486 struct_variable_declaration_list: struct_variable_declaration_list $@30 . structure_variable_declaration ';'

    "[["  shift, and go to state 217

    $default  reduce using rule 471 (optional_field_annotation)

    optional_field_annotation       go to state 954
    structure_variable_declaration  go to state 955


State 748

  524 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 524 (let_variable_name_with_pos_list)


State 749

  527 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 956


State 750

  528 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 528 (let_variable_declaration)


State 751

  529 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  530                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    expr_pipe               go to state 957
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_assign             go to state 613
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 958
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 752

  532 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 532 (let_variable_declaration)


State 753

  325 expr_assign: expr .
  326            | expr . '=' expr
  327            | expr . "<-" expr
  328            | expr . ":=" expr
  329            | expr . "&=" expr
  330            | expr . "|=" expr
  331            | expr . "^=" expr
  332            | expr . "&&=" expr
  333            | expr . "||=" expr
  334            | expr . "^^=" expr
  335            | expr . "+=" expr
  336            | expr . "-=" expr
  337            | expr . "*=" expr
  338            | expr . "/=" expr
  339            | expr . "%=" expr
  340            | expr . "<<=" expr
  341            | expr . ">>=" expr
  342            | expr . "<<<=" expr
  343            | expr . ">>>=" expr
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  531 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 686
    "as"    shift, and go to state 687
    "+="    shift, and go to state 688
    "-="    shift, and go to state 689
    "/="    shift, and go to state 690
    "*="    shift, and go to state 691
    "%="    shift, and go to state 692
    "&="    shift, and go to state 693
    "|="    shift, and go to state 694
    "^="    shift, and go to state 695
    "<<"    shift, and go to state 696
    ">>"    shift, and go to state 697
    "++"    shift, and go to state 698
    "--"    shift, and go to state 699
    "<="    shift, and go to state 700
    "<<="   shift, and go to state 701
    ">>="   shift, and go to state 702
    ">="    shift, and go to state 703
    "=="    shift, and go to state 704
    "!="    shift, and go to state 705
    "->"    shift, and go to state 706
    "<-"    shift, and go to state 802
    "??"    shift, and go to state 708
    "?."    shift, and go to state 709
    "?["    shift, and go to state 710
    "<|"    shift, and go to state 711
    "|>"    shift, and go to state 712
    ":="    shift, and go to state 713
    "<<<"   shift, and go to state 714
    ">>>"   shift, and go to state 715
    "<<<="  shift, and go to state 716
    ">>>="  shift, and go to state 717
    "&&"    shift, and go to state 718
    "||"    shift, and go to state 719
    "^^"    shift, and go to state 720
    "&&="   shift, and go to state 721
    "||="   shift, and go to state 722
    "^^="   shift, and go to state 723
    ".."    shift, and go to state 724
    '='     shift, and go to state 803
    '?'     shift, and go to state 726
    '|'     shift, and go to state 727
    '^'     shift, and go to state 728
    '&'     shift, and go to state 729
    '<'     shift, and go to state 730
    '>'     shift, and go to state 731
    '-'     shift, and go to state 732
    '+'     shift, and go to state 733
    '*'     shift, and go to state 734
    '/'     shift, and go to state 735
    '%'     shift, and go to state 736
    '.'     shift, and go to state 737
    '['     shift, and go to state 738
    ';'     shift, and go to state 959

    $default  reduce using rule 325 (expr_assign)


State 754

  657 type_declaration_no_options: "array" '<' $@47 type_declaration . '>' $@48
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 960


State 755

  660 type_declaration_no_options: "table" '<' $@49 table_type_pair . '>' $@50

    '>'  shift, and go to state 961


State 756

  631 table_type_pair: type_declaration .
  632                | type_declaration . ';' type_declaration
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    ';'  shift, and go to state 962

    $default  reduce using rule 631 (table_type_pair)


State 757

  663 type_declaration_no_options: "iterator" '<' $@51 type_declaration . '>' $@52
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 963


State 758

  653 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration . '>' $@46
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 964


State 759

  621 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 621 (auto_type_declaration)


State 760

  623 bitfield_bits: "name" .

    $default  reduce using rule 623 (bitfield_bits)


State 761

  624 bitfield_bits: bitfield_bits . ';' "name"
  630 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits . '>' $@44

    '>'  shift, and go to state 965
    ';'  shift, and go to state 966


State 762

  667 type_declaration_no_options: "block" '<' $@53 type_declaration . '>' $@54
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 967


State 763

  670 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list . optional_function_type '>' $@56

    ':'  shift, and go to state 363

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 968


State 764

  674 type_declaration_no_options: "function" '<' $@57 type_declaration . '>' $@58
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 969


State 765

  677 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list . optional_function_type '>' $@60

    ':'  shift, and go to state 363

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 970


State 766

  681 type_declaration_no_options: "lambda" '<' $@61 type_declaration . '>' $@62
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 971


State 767

  684 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 363

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 972


State 768

  499 tuple_type_list: tuple_type .

    $default  reduce using rule 499 (tuple_type_list)


State 769

  500 tuple_type_list: tuple_type_list . ';' tuple_type
  687 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list . '>' $@66

    '>'  shift, and go to state 973
    ';'  shift, and go to state 974


State 770

  505 variant_type_list: variant_type .

    $default  reduce using rule 505 (variant_type_list)


State 771

  506 variant_type_list: variant_type_list . ';' variant_type
  690 type_declaration_no_options: "variant" '<' $@67 variant_type_list . '>' $@68

    '>'  shift, and go to state 975
    ';'  shift, and go to state 976


State 772

  622 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 622 (auto_type_declaration)


State 773

  639 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 639 (type_declaration_no_options)


State 774

  637 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 637 (type_declaration_no_options)


State 775

  627 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 627 (bitfield_alias_bits)


State 776

  708 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 bitfield_alias_bits $@80 '}' .

    $default  reduce using rule 708 (bitfield_alias_declaration)


State 777

  498 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 977


State 778

  503 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 503 (tuple_alias_type_list)


State 779

  698 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 tuple_alias_type_list $@72 '}' .

    $default  reduce using rule 698 (tuple_alias_declaration)


State 780

  504 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 978


State 781

  509 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 509 (variant_alias_type_list)


State 782

  703 variant_alias_declaration: "variant" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 variant_alias_type_list $@76 '}' .

    $default  reduce using rule 703 (variant_alias_declaration)


State 783

  494 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 494 (function_argument_declaration)


State 784

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  582 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 979


State 785

  583 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 583 (variable_name_with_pos_list)


State 786

  584 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  585                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 980

    $default  reduce using rule 584 (variable_name_with_pos_list)


State 787

  514 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  515                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 593
    '='   shift, and go to state 595
    '|'   shift, and go to state 401

    $default  reduce using rule 514 (variable_declaration)

    copy_or_move  go to state 981


State 788

  517 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 517 (variable_declaration)


State 789

  325 expr_assign: expr .
  326            | expr . '=' expr
  327            | expr . "<-" expr
  328            | expr . ":=" expr
  329            | expr . "&=" expr
  330            | expr . "|=" expr
  331            | expr . "^=" expr
  332            | expr . "&&=" expr
  333            | expr . "||=" expr
  334            | expr . "^^=" expr
  335            | expr . "+=" expr
  336            | expr . "-=" expr
  337            | expr . "*=" expr
  338            | expr . "/=" expr
  339            | expr . "%=" expr
  340            | expr . "<<=" expr
  341            | expr . ">>=" expr
  342            | expr . "<<<=" expr
  343            | expr . ">>>=" expr
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  516 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 686
    "as"    shift, and go to state 687
    "+="    shift, and go to state 688
    "-="    shift, and go to state 689
    "/="    shift, and go to state 690
    "*="    shift, and go to state 691
    "%="    shift, and go to state 692
    "&="    shift, and go to state 693
    "|="    shift, and go to state 694
    "^="    shift, and go to state 695
    "<<"    shift, and go to state 696
    ">>"    shift, and go to state 697
    "++"    shift, and go to state 698
    "--"    shift, and go to state 699
    "<="    shift, and go to state 700
    "<<="   shift, and go to state 701
    ">>="   shift, and go to state 702
    ">="    shift, and go to state 703
    "=="    shift, and go to state 704
    "!="    shift, and go to state 705
    "->"    shift, and go to state 706
    "<-"    shift, and go to state 802
    "??"    shift, and go to state 708
    "?."    shift, and go to state 709
    "?["    shift, and go to state 710
    "<|"    shift, and go to state 711
    "|>"    shift, and go to state 712
    ":="    shift, and go to state 713
    "<<<"   shift, and go to state 714
    ">>>"   shift, and go to state 715
    "<<<="  shift, and go to state 716
    ">>>="  shift, and go to state 717
    "&&"    shift, and go to state 718
    "||"    shift, and go to state 719
    "^^"    shift, and go to state 720
    "&&="   shift, and go to state 721
    "||="   shift, and go to state 722
    "^^="   shift, and go to state 723
    ".."    shift, and go to state 724
    '='     shift, and go to state 803
    '?'     shift, and go to state 726
    '|'     shift, and go to state 727
    '^'     shift, and go to state 728
    '&'     shift, and go to state 729
    '<'     shift, and go to state 730
    '>'     shift, and go to state 731
    '-'     shift, and go to state 732
    '+'     shift, and go to state 733
    '*'     shift, and go to state 734
    '/'     shift, and go to state 735
    '%'     shift, and go to state 736
    '.'     shift, and go to state 737
    '['     shift, and go to state 738

    " <|"     reduce using rule 325 (expr_assign)
    $default  reduce using rule 516 (variable_declaration)


State 790

   76 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 76 (expression_while_loop)


State 791

   74 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 982
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 792

  255 new_type_declaration: '<' $@8 . type_declaration '>' $@9

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 983


State 793

  258 expr_new: "new" new_type_declaration '(' . ')'
  259         | "new" new_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    ')'                               shift, and go to state 984
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 985
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 794

  297 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  298               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  299               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '<'                               shift, and go to state 986
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 987
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 795

  296 expr_type_decl: "type" '<' $@16 . type_declaration '>' $@17

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 988


State 796

  757 make_dim_decl: "array" '<' $@81 . type_declaration_no_options '>' $@82 '(' expr_list ')'

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 989


State 797

  301 expr_list: expr_list . ',' expr
  754 make_dim_decl: "array" '(' expr_list . ')'

    ','  shift, and go to state 801
    ')'  shift, and go to state 990


State 798

  300 expr_list: expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 300 (expr_list)


State 799

  268 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 268 (expression_return)


State 800

  265 expression_return_no_pipe: "return" "<-" expr_list .
  301 expr_list: expr_list . ',' expr

    ','  shift, and go to state 801

    $default  reduce using rule 265 (expression_return_no_pipe)


State 801

  301 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 991
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 802

  327 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 904
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 803

  326 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 927
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 804

  274 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 283

    expression_block  go to state 992


State 805

  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"
  768 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'
  769                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 993
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    ';'         shift, and go to state 994
    '#'         shift, and go to state 400


State 806

  764 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 764 (expr_map_tuple_list)


State 807

  765 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  767 make_table_decl: "table" '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 995
    ')'  shift, and go to state 996


State 808

  252 expression_delete: "delete" "explicit" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 252 (expression_delete)


State 809

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  421     | "deref" '(' expr . ')'
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 997


State 810

   77 expression_with: "with" expr expression_block .

    $default  reduce using rule 77 (expression_with)


State 811

   79 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 78 ($@4)

    $@4  go to state 998


State 812

  287 expr_cast: "cast" '<' $@10 . type_declaration_no_options '>' $@11 expr

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 999


State 813

  290 expr_cast: "upcast" '<' $@12 . type_declaration_no_options '>' $@13 expr

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 1000


State 814

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  422     | "addr" '(' expr . ')'
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1001


State 815

  293 expr_cast: "reinterpret" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 1002


State 816

   53 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 53 (expression_label)


State 817

   54 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 54 (expression_goto)


State 818

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  453     | "unsafe" '(' expr . ')'
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1003


State 819

  761 make_dim_decl: "fixed_array" '<' $@83 . type_declaration_no_options '>' $@84 '(' expr_list ')'

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 1004


State 820

  301 expr_list: expr_list . ',' expr
  758 make_dim_decl: "fixed_array" '(' expr_list . ')'

    ','  shift, and go to state 801
    ')'  shift, and go to state 1005


State 821

  301 expr_list: expr_list . ',' expr
  749 make_tuple_call: "tuple" '(' expr_list . ')'

    ','  shift, and go to state 801
    ')'  shift, and go to state 1006


State 822

  423 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  424     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1007
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 823

  273 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 273 (expression_yield)


State 824

  270 expression_yield_no_pipe: "yield" "<-" expr .
  325 expr_assign: expr .
  326            | expr . '=' expr
  327            | expr . "<-" expr
  328            | expr . ":=" expr
  329            | expr . "&=" expr
  330            | expr . "|=" expr
  331            | expr . "^=" expr
  332            | expr . "&&=" expr
  333            | expr . "||=" expr
  334            | expr . "^^=" expr
  335            | expr . "+=" expr
  336            | expr . "-=" expr
  337            | expr . "*=" expr
  338            | expr . "/=" expr
  339            | expr . "%=" expr
  340            | expr . "<<=" expr
  341            | expr . ">>=" expr
  342            | expr . "<<<=" expr
  343            | expr . ">>>=" expr
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 686
    "as"    shift, and go to state 687
    "+="    shift, and go to state 688
    "-="    shift, and go to state 689
    "/="    shift, and go to state 690
    "*="    shift, and go to state 691
    "%="    shift, and go to state 692
    "&="    shift, and go to state 693
    "|="    shift, and go to state 694
    "^="    shift, and go to state 695
    "<<"    shift, and go to state 696
    ">>"    shift, and go to state 697
    "++"    shift, and go to state 698
    "--"    shift, and go to state 699
    "<="    shift, and go to state 700
    "<<="   shift, and go to state 701
    ">>="   shift, and go to state 702
    ">="    shift, and go to state 703
    "=="    shift, and go to state 704
    "!="    shift, and go to state 705
    "->"    shift, and go to state 706
    "<-"    shift, and go to state 802
    "??"    shift, and go to state 708
    "?."    shift, and go to state 709
    "?["    shift, and go to state 710
    "<|"    shift, and go to state 711
    "|>"    shift, and go to state 712
    ":="    shift, and go to state 713
    "<<<"   shift, and go to state 714
    ">>>"   shift, and go to state 715
    "<<<="  shift, and go to state 716
    ">>>="  shift, and go to state 717
    "&&"    shift, and go to state 718
    "||"    shift, and go to state 719
    "^^"    shift, and go to state 720
    "&&="   shift, and go to state 721
    "||="   shift, and go to state 722
    "^^="   shift, and go to state 723
    ".."    shift, and go to state 724
    '='     shift, and go to state 803
    '?'     shift, and go to state 726
    '|'     shift, and go to state 727
    '^'     shift, and go to state 728
    '&'     shift, and go to state 729
    '<'     shift, and go to state 730
    '>'     shift, and go to state 731
    '-'     shift, and go to state 732
    '+'     shift, and go to state 733
    '*'     shift, and go to state 734
    '/'     shift, and go to state 735
    '%'     shift, and go to state 736
    '.'     shift, and go to state 737
    '['     shift, and go to state 738

    " <|"     reduce using rule 325 (expr_assign)
    $default  reduce using rule 270 (expression_yield_no_pipe)


State 825

  307 block_or_lambda: '@' '@' .

    $default  reduce using rule 307 (block_or_lambda)


State 826

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  455 expr_mtag: "$$" '(' expr . ')'
  463          | expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1008


State 827

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  456 expr_mtag: "$i" '(' expr . ')'
  463          | expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1009


State 828

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  457 expr_mtag: "$v" '(' expr . ')'
  463          | expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1010


State 829

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  458 expr_mtag: "$b" '(' expr . ')'
  463          | expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1011


State 830

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  459 expr_mtag: "$a" '(' expr . ')'
  463          | expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1012


State 831

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  461 expr_mtag: "$c" '(' expr . ')' '(' ')'
  462          | "$c" '(' expr . ')' '(' expr_list ')'
  463          | expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1013


State 832

  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  772 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1014
    ','   shift, and go to state 594


State 833

  725 optional_block: "where" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 1015


State 834

  718 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  719                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1016


State 835

  248 name_in_namespace: "name" .
  249                  | "name" . "::" "name"
  714 make_struct_fields: "name" . copy_or_move expr
  715                   | "name" . ":=" expr

    "<-"  shift, and go to state 593
    ":="  shift, and go to state 1017
    "::"  shift, and go to state 97
    '='   shift, and go to state 595

    $default  reduce using rule 248 (name_in_namespace)

    copy_or_move  go to state 1018


State 836

  381 expr: '-' . expr
  639 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  642                            | type_declaration_no_options '-' . "const"
  644                            | type_declaration_no_options '-' . '&'
  647                            | type_declaration_no_options '-' . '#'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "const"                           shift, and go to state 569
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '&'                               shift, and go to state 570
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '['                               shift, and go to state 571
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283
    '#'                               shift, and go to state 572

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 662
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 837

  408 expr: '(' . expr ')'
  740 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  741                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    ')'                               shift, and go to state 1019
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 667
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 838

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  744 make_tuple: expr .
  745           | expr . "=>" expr

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "=>"   shift, and go to state 1020
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 744 (make_tuple)


State 839

  716 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  717                   | make_struct_fields . ',' "name" ":=" expr
  720                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  722 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1021

    $default  reduce using rule 722 (make_struct_dim)


State 840

  723 make_struct_dim: make_struct_dim . ';' make_struct_fields
  738 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 833
    ';'      shift, and go to state 1022

    $default  reduce using rule 724 (optional_block)

    optional_block  go to state 1023


State 841

  739 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1024
    ",]]"  shift, and go to state 1025
    ']'    shift, and go to state 1026

    optional_trailing_delim_sqr_sqr  go to state 1027


State 842

  746 make_tuple: make_tuple . ',' expr
  750 make_dim: make_tuple .

    ','  shift, and go to state 1028

    $default  reduce using rule 750 (make_dim)


State 843

  751 make_dim: make_dim . ';' make_tuple
  752 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1029
    ']'    shift, and go to state 1030
    ';'    shift, and go to state 1031

    optional_trailing_semicolon_sqr_sqr  go to state 1032


State 844

  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  773 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1033
    ','   shift, and go to state 594


State 845

  408 expr: '(' . expr ')'
  743 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    ')'                               shift, and go to state 1034
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 667
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 846

  723 make_struct_dim: make_struct_dim . ';' make_struct_fields
  742 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 833
    ';'      shift, and go to state 1022

    $default  reduce using rule 724 (optional_block)

    optional_block  go to state 1035


State 847

  751 make_dim: make_dim . ';' make_tuple
  753 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1036
    ';'    shift, and go to state 1031
    '}'    shift, and go to state 1037

    optional_trailing_semicolon_cur_sqr  go to state 1038


State 848

  747 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1039
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 849

  727 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 727 (optional_trailing_semicolon_cur_cur)


State 850

  763 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 656
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_map_tuple          go to state 1040
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 851

  726 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1041


State 852

  766 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 766 (make_table_decl)


State 853

  243 expression_keyword: "keyword" '<' $@6 . type_declaration_no_options '>' $@7 expr

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 1042


State 854

  240 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 240 (expr_keyword)


State 855

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 856

   30 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1043
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 857

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 219
    STRING_CHARACTER_ESC  shift, and go to state 220

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 858

  408 expr: '(' expr ')' .

    $default  reduce using rule 408 (expr)


State 859

  355 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1044


State 860

  470 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1045


State 861

  359 func_addr_expr: '@' '@' '<' . $@18 type_declaration_no_options '>' $@19 func_addr_name
  362               | '@' '@' '<' . $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    ':'       reduce using rule 360 ($@20)
    '>'       reduce using rule 360 ($@20)
    '('       reduce using rule 360 ($@20)
    $default  reduce using rule 357 ($@18)

    $@18  go to state 1046
    $@20  go to state 1047


State 862

  354 func_addr_name: name_in_namespace .

    $default  reduce using rule 354 (func_addr_name)


State 863

  356 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 356 (func_addr_expr)


State 864

  215 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 237 (expressions)

    expressions  go to state 1048


State 865

   71 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1049
    "elif"         shift, and go to state 1050
    "static_elif"  shift, and go to state 1051

    $default  reduce using rule 58 (expression_else)

    elif_or_static_elif  go to state 1052
    expression_else      go to state 1053


State 866

   73 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1054
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 867

  350 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 834
    "name"  shift, and go to state 1055

    make_struct_fields  go to state 1056


State 868

  416 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 416 (expr)


State 869

  301 expr_list: expr_list . ',' expr
  351 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  417 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1057
    ')'  shift, and go to state 1058


State 870

  281 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  282                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1059

    tuple_expansion  go to state 1060


State 871

  284 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 284 (expression_let)


State 872

  283 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 283 (expression_let)


State 873

  315 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1061
    ":="  shift, and go to state 1062
    '='   shift, and go to state 1063
    '&'   shift, and go to state 1064

    capture_entry  go to state 1065
    capture_list   go to state 1066


State 874

  317 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 281

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1067


State 875

  244 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 244 (expr_pipe)


State 876

  429 expr: expr "is" "type" . '<' $@24 type_declaration_no_options '>' $@25

    '<'  shift, and go to state 1068


State 877

  469 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1069


State 878

  431 expr: expr "is" "name" .

    $default  reduce using rule 431 (expr)


State 879

  430 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 430 (expr)


State 880

  435 expr: expr "as" "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 1070


State 881

  467 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1071


State 882

  432 expr: expr "as" "name" .

    $default  reduce using rule 432 (expr)


State 883

  436 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 436 (expr)


State 884

  335 expr_assign: expr "+=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 335 (expr_assign)


State 885

  336 expr_assign: expr "-=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 336 (expr_assign)


State 886

  338 expr_assign: expr "/=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 338 (expr_assign)


State 887

  337 expr_assign: expr "*=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 337 (expr_assign)


State 888

  339 expr_assign: expr "%=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 339 (expr_assign)


State 889

  329 expr_assign: expr "&=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 329 (expr_assign)


State 890

  330 expr_assign: expr "|=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 330 (expr_assign)


State 891

  331 expr_assign: expr "^=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 331 (expr_assign)


State 892

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  382     | expr "<<" expr .
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '-'   shift, and go to state 732
    '+'   shift, and go to state 733
    '*'   shift, and go to state 734
    '/'   shift, and go to state 735
    '%'   shift, and go to state 736
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 382 (expr)


State 893

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  383     | expr ">>" expr .
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '-'   shift, and go to state 732
    '+'   shift, and go to state 733
    '*'   shift, and go to state 734
    '/'   shift, and go to state 735
    '%'   shift, and go to state 736
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 383 (expr)


State 894

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  395     | expr "<=" expr .
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 395 (expr)


State 895

  340 expr_assign: expr "<<=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 340 (expr_assign)


State 896

  341 expr_assign: expr ">>=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 341 (expr_assign)


State 897

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  396     | expr ">=" expr .
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 396 (expr)


State 898

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  393     | expr "==" expr .
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 393 (expr)


State 899

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  394     | expr "!=" expr .
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 394 (expr)


State 900

  352 expr_method_call: expr "->" "name" . '(' ')'
  353                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1072


State 901

  349 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 1073


State 902

  347 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 1074


State 903

  348 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 1075


State 904

  327 expr_assign: expr "<-" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 327 (expr_assign)


State 905

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  425     | expr "??" expr .
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 425 (expr)


State 906

  464 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1076


State 907

  413 expr: expr "?." "name" .

    $default  reduce using rule 413 (expr)


State 908

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  411     | expr "?[" expr . ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ']'    shift, and go to state 1077


State 909

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  449     | expr "<|" expr .
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 706
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 449 (expr)


State 910

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  450     | expr "|>" expr .
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 706
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 450 (expr)


State 911

  418 expr: basic_type_declaration . '(' ')'
  419     | basic_type_declaration . '(' expr_list ')'
  451     | expr "|>" basic_type_declaration .

    '('  shift, and go to state 739

    $default  reduce using rule 451 (expr)


State 912

  328 expr_assign: expr ":=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 328 (expr_assign)


State 913

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  384     | expr "<<<" expr .
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '-'   shift, and go to state 732
    '+'   shift, and go to state 733
    '*'   shift, and go to state 734
    '/'   shift, and go to state 735
    '%'   shift, and go to state 736
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 384 (expr)


State 914

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  385     | expr ">>>" expr .
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '-'   shift, and go to state 732
    '+'   shift, and go to state 733
    '*'   shift, and go to state 734
    '/'   shift, and go to state 735
    '%'   shift, and go to state 736
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 385 (expr)


State 915

  342 expr_assign: expr "<<<=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 342 (expr_assign)


State 916

  343 expr_assign: expr ">>>=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 343 (expr_assign)


State 917

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  400     | expr "&&" expr .
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 400 (expr)


State 918

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  401     | expr "||" expr .
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "^^"   shift, and go to state 720
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 401 (expr)


State 919

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  402     | expr "^^" expr .
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 402 (expr)


State 920

  332 expr_assign: expr "&&=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 332 (expr_assign)


State 921

  333 expr_assign: expr "||=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 333 (expr_assign)


State 922

  334 expr_assign: expr "^^=" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 334 (expr_assign)


State 923

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  403     | expr ".." expr .
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    ".."  error (nonassociative)

    $default  reduce using rule 403 (expr)


State 924

  346 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 1078


State 925

  344 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 1079


State 926

  345 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 480
    '@'  shift, and go to state 642
    '{'  shift, and go to state 283

    expression_block  go to state 496
    block_or_lambda   go to state 516
    expr_block        go to state 1080


State 927

  326 expr_assign: expr '=' expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 326 (expr_assign)


State 928

  437 expr: expr '?' "as" . "name"
  440     | expr '?' "as" . "type" '<' $@28 type_declaration '>' $@29
  441     | expr '?' "as" . basic_type_declaration
  468 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1081
    "bool"      shift, and go to state 307
    "void"      shift, and go to state 308
    "string"    shift, and go to state 309
    "int"       shift, and go to state 311
    "int2"      shift, and go to state 312
    "int3"      shift, and go to state 313
    "int4"      shift, and go to state 314
    "uint"      shift, and go to state 315
    "bitfield"  shift, and go to state 446
    "uint2"     shift, and go to state 317
    "uint3"     shift, and go to state 318
    "uint4"     shift, and go to state 319
    "float"     shift, and go to state 320
    "float2"    shift, and go to state 321
    "float3"    shift, and go to state 322
    "float4"    shift, and go to state 323
    "range"     shift, and go to state 324
    "urange"    shift, and go to state 325
    "range64"   shift, and go to state 326
    "urange64"  shift, and go to state 327
    "int64"     shift, and go to state 329
    "uint64"    shift, and go to state 330
    "double"    shift, and go to state 331
    "int8"      shift, and go to state 334
    "uint8"     shift, and go to state 335
    "int16"     shift, and go to state 336
    "uint16"    shift, and go to state 337
    "$f"        shift, and go to state 1082
    "name"      shift, and go to state 1083

    basic_type_declaration  go to state 1084


State 929

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  426     | expr '?' expr . ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    ':'    shift, and go to state 1085
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738


State 930

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  398     | expr '|' expr .
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 398 (expr)


State 931

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  399     | expr '^' expr .
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 399 (expr)


State 932

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  397     | expr '&' expr .
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 397 (expr)


State 933

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  391     | expr '<' expr .
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 391 (expr)


State 934

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  392     | expr '>' expr .
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 392 (expr)


State 935

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  387     | expr '-' expr .
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '*'   shift, and go to state 734
    '/'   shift, and go to state 735
    '%'   shift, and go to state 736
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 387 (expr)


State 936

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  386     | expr '+' expr .
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '*'   shift, and go to state 734
    '/'   shift, and go to state 735
    '%'   shift, and go to state 736
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 386 (expr)


State 937

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  388     | expr '*' expr .
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 388 (expr)


State 938

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  389     | expr '/' expr .
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 389 (expr)


State 939

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  390     | expr '%' expr .
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 686
    "as"  shift, and go to state 687
    "++"  shift, and go to state 698
    "--"  shift, and go to state 699
    "->"  shift, and go to state 706
    "??"  shift, and go to state 708
    "?."  shift, and go to state 709
    "?["  shift, and go to state 710
    "<|"  shift, and go to state 711
    "|>"  shift, and go to state 712
    '.'   shift, and go to state 737
    '['   shift, and go to state 738

    $default  reduce using rule 390 (expr)


State 940

  414 expr: expr '.' "?." . "name"
  466 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1086
    "name"  shift, and go to state 1087


State 941

  412 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1088
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 942

  463 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1089


State 943

  363 expr_field: expr '.' "name" .

    $default  reduce using rule 363 (expr_field)


State 944

  364 expr_field: expr '.' '.' . "name"
  465 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1090
    "name"  shift, and go to state 1091


State 945

  410 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1092
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 946

  367 expr_field: expr '.' $@22 . error $@23

    error  shift, and go to state 1093


State 947

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  409     | expr '[' expr . ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ']'    shift, and go to state 1094


State 948

  418 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 418 (expr)


State 949

  301 expr_list: expr_list . ',' expr
  419 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 801
    ')'  shift, and go to state 1095


State 950

  567 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 . '}'

    '}'  shift, and go to state 1096


State 951

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  547 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ';'    shift, and go to state 1097


State 952

  114 annotation_list: annotation_list . ',' annotation_declaration
  116 optional_annotation_list: '[' annotation_list . ']'
  491 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 106
    ']'  shift, and go to state 1098


State 953

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  490                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "public"   shift, and go to state 1099
    "private"  shift, and go to state 1100

    $default  reduce using rule 478 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1101


State 954

  483 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1102

    $default  reduce using rule 481 (optional_static_member_variable)

    optional_static_member_variable  go to state 1103


State 955

  486 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration . ';'

    ';'  shift, and go to state 1104


State 956

  527 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 527 (let_variable_name_with_pos_list)


State 957

  530 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 530 (let_variable_declaration)


State 958

  325 expr_assign: expr .
  326            | expr . '=' expr
  327            | expr . "<-" expr
  328            | expr . ":=" expr
  329            | expr . "&=" expr
  330            | expr . "|=" expr
  331            | expr . "^=" expr
  332            | expr . "&&=" expr
  333            | expr . "||=" expr
  334            | expr . "^^=" expr
  335            | expr . "+=" expr
  336            | expr . "-=" expr
  337            | expr . "*=" expr
  338            | expr . "/=" expr
  339            | expr . "%=" expr
  340            | expr . "<<=" expr
  341            | expr . ">>=" expr
  342            | expr . "<<<=" expr
  343            | expr . ">>>=" expr
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  529 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 686
    "as"    shift, and go to state 687
    "+="    shift, and go to state 688
    "-="    shift, and go to state 689
    "/="    shift, and go to state 690
    "*="    shift, and go to state 691
    "%="    shift, and go to state 692
    "&="    shift, and go to state 693
    "|="    shift, and go to state 694
    "^="    shift, and go to state 695
    "<<"    shift, and go to state 696
    ">>"    shift, and go to state 697
    "++"    shift, and go to state 698
    "--"    shift, and go to state 699
    "<="    shift, and go to state 700
    "<<="   shift, and go to state 701
    ">>="   shift, and go to state 702
    ">="    shift, and go to state 703
    "=="    shift, and go to state 704
    "!="    shift, and go to state 705
    "->"    shift, and go to state 706
    "<-"    shift, and go to state 802
    "??"    shift, and go to state 708
    "?."    shift, and go to state 709
    "?["    shift, and go to state 710
    "<|"    shift, and go to state 711
    "|>"    shift, and go to state 712
    ":="    shift, and go to state 713
    "<<<"   shift, and go to state 714
    ">>>"   shift, and go to state 715
    "<<<="  shift, and go to state 716
    ">>>="  shift, and go to state 717
    "&&"    shift, and go to state 718
    "||"    shift, and go to state 719
    "^^"    shift, and go to state 720
    "&&="   shift, and go to state 721
    "||="   shift, and go to state 722
    "^^="   shift, and go to state 723
    ".."    shift, and go to state 724
    '='     shift, and go to state 803
    '?'     shift, and go to state 726
    '|'     shift, and go to state 727
    '^'     shift, and go to state 728
    '&'     shift, and go to state 729
    '<'     shift, and go to state 730
    '>'     shift, and go to state 731
    '-'     shift, and go to state 732
    '+'     shift, and go to state 733
    '*'     shift, and go to state 734
    '/'     shift, and go to state 735
    '%'     shift, and go to state 736
    '.'     shift, and go to state 737
    '['     shift, and go to state 738
    ';'     shift, and go to state 1105

    $default  reduce using rule 325 (expr_assign)


State 959

  531 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 531 (let_variable_declaration)


State 960

  657 type_declaration_no_options: "array" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 656 ($@48)

    $@48  go to state 1106


State 961

  660 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' . $@50

    $default  reduce using rule 659 ($@50)

    $@50  go to state 1107


State 962

  632 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 1108


State 963

  663 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 662 ($@52)

    $@52  go to state 1109


State 964

  653 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 652 ($@46)

    $@46  go to state 1110


State 965

  630 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' . $@44

    $default  reduce using rule 629 ($@44)

    $@44  go to state 1111


State 966

  624 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1112


State 967

  667 type_declaration_no_options: "block" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 666 ($@54)

    $@54  go to state 1113


State 968

  670 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type . '>' $@56

    '>'  shift, and go to state 1114


State 969

  674 type_declaration_no_options: "function" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 673 ($@58)

    $@58  go to state 1115


State 970

  677 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type . '>' $@60

    '>'  shift, and go to state 1116


State 971

  681 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 680 ($@62)

    $@62  go to state 1117


State 972

  684 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1118


State 973

  687 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' . $@66

    $default  reduce using rule 686 ($@66)

    $@66  go to state 1119


State 974

  500 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 580

    name_in_namespace            go to state 341
    tuple_type                   go to state 1120
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 583


State 975

  690 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' . $@68

    $default  reduce using rule 689 ($@68)

    $@68  go to state 1121


State 976

  506 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 585

    variant_type  go to state 1122


State 977

  498 tuple_type: "name" ':' type_declaration .
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401

    $default  reduce using rule 498 (tuple_type)


State 978

  504 variant_type: "name" ':' type_declaration .
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401

    $default  reduce using rule 504 (variant_type)


State 979

  582 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 582 (variable_name_with_pos_list)


State 980

  585 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1123


State 981

  515 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1124
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 982

   74 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  301 expr_list: expr_list . ',' expr

    ','  shift, and go to state 801
    ';'  shift, and go to state 1125


State 983

  255 new_type_declaration: '<' $@8 type_declaration . '>' $@9
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 1126


State 984

  258 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 258 (expr_new)


State 985

  259 expr_new: "new" new_type_declaration '(' expr_list . ')'
  301 expr_list: expr_list . ',' expr

    ','  shift, and go to state 801
    ')'  shift, and go to state 1127


State 986

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  299               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1128


State 987

  297 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1129


State 988

  296 expr_type_decl: "type" '<' $@16 type_declaration . '>' $@17
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 1130


State 989

  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"
  757 make_dim_decl: "array" '<' $@81 type_declaration_no_options . '>' $@82 '(' expr_list ')'

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1131
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 990

  754 make_dim_decl: "array" '(' expr_list ')' .

    $default  reduce using rule 754 (make_dim_decl)


State 991

  301 expr_list: expr_list ',' expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 301 (expr_list)


State 992

  274 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 274 (expression_try_catch)


State 993

  768 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1132


State 994

  769 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 1133


State 995

  765 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 656
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_map_tuple          go to state 1134
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 996

  767 make_table_decl: "table" '(' expr_map_tuple_list ')' .

    $default  reduce using rule 767 (make_table_decl)


State 997

  421 expr: "deref" '(' expr ')' .

    $default  reduce using rule 421 (expr)


State 998

   79 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1135
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 999

  287 expr_cast: "cast" '<' $@10 type_declaration_no_options . '>' $@11 expr
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1136
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 1000

  290 expr_cast: "upcast" '<' $@12 type_declaration_no_options . '>' $@13 expr
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1137
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 1001

  422 expr: "addr" '(' expr ')' .

    $default  reduce using rule 422 (expr)


State 1002

  293 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options . '>' $@15 expr
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1138
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 1003

  453 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 453 (expr)


State 1004

  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"
  761 make_dim_decl: "fixed_array" '<' $@83 type_declaration_no_options . '>' $@84 '(' expr_list ')'

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1139
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 1005

  758 make_dim_decl: "fixed_array" '(' expr_list ')' .

    $default  reduce using rule 758 (make_dim_decl)


State 1006

  749 make_tuple_call: "tuple" '(' expr_list ')' .

    $default  reduce using rule 749 (make_tuple_call)


State 1007

  423 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  424     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 873

    $default  reduce using rule 314 (optional_capture_list)

    optional_capture_list  go to state 1140


State 1008

  455 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1009

  456 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1010

  457 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 1011

  458 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 1012

  459 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 459 (expr_mtag)


State 1013

  461 expr_mtag: "$c" '(' expr ')' . '(' ')'
  462          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1141


State 1014

  772 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 1142
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1015

  725 optional_block: "where" expr_block .

    $default  reduce using rule 725 (optional_block)


State 1016

  718 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  719                   | "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1143
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1017

  715 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1144
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1018

  714 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1145
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1019

  740 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  741                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 833
    "$f"     shift, and go to state 834
    "name"   shift, and go to state 1055

    $default  reduce using rule 724 (optional_block)

    make_struct_fields  go to state 839
    make_struct_dim     go to state 1146
    optional_block      go to state 1147


State 1020

  745 make_tuple: expr "=>" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1148
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1021

  716 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  717                   | make_struct_fields ',' . "name" ":=" expr
  720                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  721                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1149
    "name"  shift, and go to state 1150


State 1022

  723 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 834
    "name"  shift, and go to state 1055

    make_struct_fields  go to state 1151


State 1023

  738 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1024
    ",]]"  shift, and go to state 1025
    ']'    shift, and go to state 1026

    optional_trailing_delim_sqr_sqr  go to state 1152


State 1024

  733 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 733 (optional_trailing_delim_sqr_sqr)


State 1025

  734 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 734 (optional_trailing_delim_sqr_sqr)


State 1026

  732 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1153


State 1027

  739 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 739 (make_struct_decl)


State 1028

  746 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1154
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1029

  731 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 731 (optional_trailing_semicolon_sqr_sqr)


State 1030

  730 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1155


State 1031

  751 make_dim: make_dim ';' . make_tuple

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 838
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple              go to state 1156
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1032

  752 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 752 (make_dim_decl)


State 1033

  773 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 1157
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1034

  743 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 834
    "name"  shift, and go to state 1055

    make_struct_fields  go to state 839
    make_struct_dim     go to state 1158


State 1035

  742 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1159
    ",}]"  shift, and go to state 1160
    '}'    shift, and go to state 1161

    optional_trailing_delim_cur_sqr  go to state 1162


State 1036

  729 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 729 (optional_trailing_semicolon_cur_sqr)


State 1037

  728 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1163


State 1038

  753 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 753 (make_dim_decl)


State 1039

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  747 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 747 (make_map_tuple)


State 1040

  763 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 763 (make_table)


State 1041

  726 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 726 (optional_trailing_semicolon_cur_cur)


State 1042

  243 expression_keyword: "keyword" '<' $@6 type_declaration_no_options . '>' $@7 expr
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1164
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 1043

   30 string_builder_body: string_builder_body "{" expr . "}"
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    "}"    shift, and go to state 1165
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738


State 1044

  355 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1166
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1045

  470 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1167
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1046

  359 func_addr_expr: '@' '@' '<' $@18 . type_declaration_no_options '>' $@19 func_addr_name

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 1168


State 1047

  362 func_addr_expr: '@' '@' '<' $@20 . optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    '('  shift, and go to state 281

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1169


State 1048

  215 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  238 expressions: expressions . expression_any
  239            | expressions . error

    error                             shift, and go to state 416
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 417
    "if"                              shift, and go to state 418
    "static_if"                       shift, and go to state 419
    "for"                             shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 427
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 429
    "try"                             shift, and go to state 430
    "table"                           shift, and go to state 431
    "delete"                          shift, and go to state 432
    "deref"                           shift, and go to state 433
    "with"                            shift, and go to state 434
    "assume"                          shift, and go to state 435
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 438
    "continue"                        shift, and go to state 439
    "pass"                            shift, and go to state 440
    "reinterpret"                     shift, and go to state 441
    "label"                           shift, and go to state 442
    "goto"                            shift, and go to state 443
    "unsafe"                          shift, and go to state 444
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "yield"                           shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "$ <|"                            shift, and go to state 452
    "@ <|"                            shift, and go to state 453
    "@@ <|"                           shift, and go to state 454
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 472
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    ';'                               shift, and go to state 482
    '{'                               shift, and go to state 283
    '}'                               shift, and go to state 1170

    string_builder             go to state 484
    expr_reader                go to state 485
    expression_label           go to state 486
    expression_goto            go to state 487
    if_or_static_if            go to state 488
    expression_if_one_liner    go to state 489
    expression_if_then_else    go to state 490
    expression_for_loop        go to state 491
    expression_unsafe          go to state 492
    expression_while_loop      go to state 493
    expression_with            go to state 494
    expression_with_alias      go to state 495
    expression_block           go to state 496
    expression_any             go to state 497
    expr_keyword               go to state 498
    expression_keyword         go to state 499
    expr_pipe                  go to state 500
    name_in_namespace          go to state 501
    expression_delete          go to state 502
    expr_new                   go to state 503
    expression_break           go to state 504
    expression_continue        go to state 505
    expression_return_no_pipe  go to state 506
    expression_return          go to state 507
    expression_yield_no_pipe   go to state 508
    expression_yield           go to state 509
    expression_try_catch       go to state 510
    kwd_let                    go to state 511
    expression_let             go to state 512
    expr_cast                  go to state 513
    expr_type_decl             go to state 514
    expr_type_info             go to state 515
    block_or_lambda            go to state 516
    expr_block                 go to state 517
    expr_numeric_const         go to state 518
    expr_assign                go to state 519
    expr_assign_pipe           go to state 520
    expr_named_call            go to state 521
    expr_method_call           go to state 522
    func_addr_expr             go to state 523
    expr_field                 go to state 524
    expr                       go to state 525
    expr_mtag                  go to state 526
    basic_type_declaration     go to state 527
    make_decl                  go to state 528
    make_struct_decl           go to state 529
    make_tuple_call            go to state 530
    make_dim_decl              go to state 531
    make_table_decl            go to state 532
    array_comprehension        go to state 533


State 1049

   59 expression_else: "else" . expression_block

    '{'  shift, and go to state 283

    expression_block  go to state 1171


State 1050

   56 elif_or_static_elif: "elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1051

   57 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1052

   60 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1172
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1053

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 71 (expression_if_then_else)


State 1054

   73 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1173
    "is"    shift, and go to state 686
    "as"    shift, and go to state 687
    "<<"    shift, and go to state 696
    ">>"    shift, and go to state 697
    "++"    shift, and go to state 698
    "--"    shift, and go to state 699
    "<="    shift, and go to state 700
    ">="    shift, and go to state 703
    "=="    shift, and go to state 704
    "!="    shift, and go to state 705
    "->"    shift, and go to state 706
    "??"    shift, and go to state 708
    "?."    shift, and go to state 709
    "?["    shift, and go to state 710
    "<|"    shift, and go to state 711
    "|>"    shift, and go to state 712
    "<<<"   shift, and go to state 714
    ">>>"   shift, and go to state 715
    "&&"    shift, and go to state 718
    "||"    shift, and go to state 719
    "^^"    shift, and go to state 720
    ".."    shift, and go to state 724
    '?'     shift, and go to state 726
    '|'     shift, and go to state 727
    '^'     shift, and go to state 728
    '&'     shift, and go to state 729
    '<'     shift, and go to state 730
    '>'     shift, and go to state 731
    '-'     shift, and go to state 732
    '+'     shift, and go to state 733
    '*'     shift, and go to state 734
    '/'     shift, and go to state 735
    '%'     shift, and go to state 736
    '.'     shift, and go to state 737
    '['     shift, and go to state 738

    $default  reduce using rule 63 (expression_else_one_liner)

    expression_else_one_liner  go to state 1174


State 1055

  714 make_struct_fields: "name" . copy_or_move expr
  715                   | "name" . ":=" expr

    "<-"  shift, and go to state 593
    ":="  shift, and go to state 1017
    '='   shift, and go to state 595

    copy_or_move  go to state 1018


State 1056

  350 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  716 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  717                   | make_struct_fields . ',' "name" ":=" expr
  720                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1021
    ']'  shift, and go to state 1175


State 1057

  301 expr_list: expr_list ',' . expr
  351 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '['                               shift, and go to state 1176
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 991
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1058

  417 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 417 (expr)


State 1059

  279 tuple_expansion: "name" .

    $default  reduce using rule 279 (tuple_expansion)


State 1060

  280 tuple_expansion: tuple_expansion . ',' "name"
  281 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  282                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1177
    ']'  shift, and go to state 1178


State 1061

  310 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1179


State 1062

  311 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1180


State 1063

  309 capture_entry: '=' . "name"

    "name"  shift, and go to state 1181


State 1064

  308 capture_entry: '&' . "name"

    "name"  shift, and go to state 1182


State 1065

  312 capture_list: capture_entry .

    $default  reduce using rule 312 (capture_list)


State 1066

  313 capture_list: capture_list . ',' capture_entry
  315 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1183
    ']'  shift, and go to state 1184


State 1067

  317 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 363

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1185


State 1068

  429 expr: expr "is" "type" '<' . $@24 type_declaration_no_options '>' $@25

    $default  reduce using rule 427 ($@24)

    $@24  go to state 1186


State 1069

  469 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1187
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1070

  435 expr: expr "as" "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 433 ($@26)

    $@26  go to state 1188


State 1071

  467 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1189
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1072

  352 expr_method_call: expr "->" "name" '(' . ')'
  353                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    ')'                               shift, and go to state 1190
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 1191
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1073

  349 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 349 (expr_assign_pipe)


State 1074

  347 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 347 (expr_assign_pipe)


State 1075

  348 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 348 (expr_assign_pipe)


State 1076

  464 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1192
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1077

  411 expr: expr "?[" expr ']' .

    $default  reduce using rule 411 (expr)


State 1078

  346 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 346 (expr_assign_pipe)


State 1079

  344 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 344 (expr_assign_pipe)


State 1080

  345 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 345 (expr_assign_pipe)


State 1081

  440 expr: expr '?' "as" "type" . '<' $@28 type_declaration '>' $@29

    '<'  shift, and go to state 1193


State 1082

  468 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1194


State 1083

  437 expr: expr '?' "as" "name" .

    $default  reduce using rule 437 (expr)


State 1084

  441 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 441 (expr)


State 1085

  426 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1195
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1086

  466 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1196


State 1087

  414 expr: expr '.' "?." "name" .

    $default  reduce using rule 414 (expr)


State 1088

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  412     | expr '.' "?[" expr . ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ']'    shift, and go to state 1197


State 1089

  463 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1198
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1090

  465 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1199


State 1091

  364 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 364 (expr_field)


State 1092

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  410     | expr '.' '[' expr . ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ']'    shift, and go to state 1200


State 1093

  367 expr_field: expr '.' $@22 error . $@23

    $default  reduce using rule 366 ($@23)

    $@23  go to state 1201


State 1094

  409 expr: expr '[' expr ']' .

    $default  reduce using rule 409 (expr)


State 1095

  419 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 419 (expr)


State 1096

  567 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}' .

    $default  reduce using rule 567 (enum_declaration)


State 1097

  547 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 547 (enum_list)


State 1098

  116 optional_annotation_list: '[' annotation_list ']' .
  491 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1202

    $default  reduce using rule 116 (optional_annotation_list)


State 1099

  479 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 479 (optional_public_or_private_member_variable)


State 1100

  480 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 480 (optional_public_or_private_member_variable)


State 1101

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@31 function_declaration_header ';'
  490                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "abstract"  shift, and go to state 1203
    "static"    shift, and go to state 1102

    $default  reduce using rule 481 (optional_static_member_variable)

    optional_static_member_variable  go to state 1204


State 1102

  482 optional_static_member_variable: "static" .

    $default  reduce using rule 482 (optional_static_member_variable)


State 1103

  483 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1205
    "sealed"    shift, and go to state 1206

    $default  reduce using rule 473 (optional_override)

    optional_override  go to state 1207


State 1104

  486 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';' .

    $default  reduce using rule 486 (struct_variable_declaration_list)


State 1105

  529 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 529 (let_variable_declaration)


State 1106

  657 type_declaration_no_options: "array" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 657 (type_declaration_no_options)


State 1107

  660 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' $@50 .

    $default  reduce using rule 660 (type_declaration_no_options)


State 1108

  632 table_type_pair: type_declaration ';' type_declaration .
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401

    $default  reduce using rule 632 (table_type_pair)


State 1109

  663 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 663 (type_declaration_no_options)


State 1110

  653 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 653 (type_declaration_no_options)


State 1111

  630 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' $@44 .

    $default  reduce using rule 630 (bitfield_type_declaration)


State 1112

  624 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 624 (bitfield_bits)


State 1113

  667 type_declaration_no_options: "block" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 667 (type_declaration_no_options)


State 1114

  670 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' . $@56

    $default  reduce using rule 669 ($@56)

    $@56  go to state 1208


State 1115

  674 type_declaration_no_options: "function" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 674 (type_declaration_no_options)


State 1116

  677 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' . $@60

    $default  reduce using rule 676 ($@60)

    $@60  go to state 1209


State 1117

  681 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 681 (type_declaration_no_options)


State 1118

  684 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 683 ($@64)

    $@64  go to state 1210


State 1119

  687 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' $@66 .

    $default  reduce using rule 687 (type_declaration_no_options)


State 1120

  500 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 500 (tuple_type_list)


State 1121

  690 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' $@68 .

    $default  reduce using rule 690 (type_declaration_no_options)


State 1122

  506 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 506 (variant_type_list)


State 1123

  585 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 585 (variable_name_with_pos_list)


State 1124

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  515 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 515 (variable_declaration)


State 1125

   74 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 283

    expression_block  go to state 1211


State 1126

  255 new_type_declaration: '<' $@8 type_declaration '>' . $@9

    $default  reduce using rule 254 ($@9)

    $@9  go to state 1212


State 1127

  259 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 259 (expr_new)


State 1128

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  299               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1213
    ';'  shift, and go to state 1214


State 1129

  297 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 297 (expr_type_info)


State 1130

  296 expr_type_decl: "type" '<' $@16 type_declaration '>' . $@17

    $default  reduce using rule 295 ($@17)

    $@17  go to state 1215


State 1131

  757 make_dim_decl: "array" '<' $@81 type_declaration_no_options '>' . $@82 '(' expr_list ')'

    $default  reduce using rule 756 ($@82)

    $@82  go to state 1216


State 1132

  768 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 656
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_map_tuple          go to state 806
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    expr_map_tuple_list     go to state 1217
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1133

  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"
  769 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1218
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 1134

  765 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 765 (expr_map_tuple_list)


State 1135

   79 expression_with_alias: "assume" "name" '=' $@4 expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 79 (expression_with_alias)


State 1136

  287 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' . $@11 expr

    $default  reduce using rule 286 ($@11)

    $@11  go to state 1219


State 1137

  290 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' . $@13 expr

    $default  reduce using rule 289 ($@13)

    $@13  go to state 1220


State 1138

  293 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 292 ($@15)

    $@15  go to state 1221


State 1139

  761 make_dim_decl: "fixed_array" '<' $@83 type_declaration_no_options '>' . $@84 '(' expr_list ')'

    $default  reduce using rule 760 ($@84)

    $@84  go to state 1222


State 1140

  423 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  424     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1223


State 1141

  461 expr_mtag: "$c" '(' expr ')' '(' . ')'
  462          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    ')'                               shift, and go to state 1224
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 1225
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1142

  301 expr_list: expr_list . ',' expr
  772 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 801
    ';'  shift, and go to state 1226


State 1143

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  718 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  719                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1227


State 1144

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  715 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 715 (make_struct_fields)


State 1145

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  714 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 714 (make_struct_fields)


State 1146

  723 make_struct_dim: make_struct_dim . ';' make_struct_fields
  741 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 833
    ';'      shift, and go to state 1022

    $default  reduce using rule 724 (optional_block)

    optional_block  go to state 1228


State 1147

  740 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1024
    ",]]"  shift, and go to state 1025
    ']'    shift, and go to state 1026

    optional_trailing_delim_sqr_sqr  go to state 1229


State 1148

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  745 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 745 (make_tuple)


State 1149

  720 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  721                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1230


State 1150

  716 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  717                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 593
    ":="  shift, and go to state 1231
    '='   shift, and go to state 595

    copy_or_move  go to state 1232


State 1151

  716 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  717                   | make_struct_fields . ',' "name" ":=" expr
  720                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  723 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1021

    $default  reduce using rule 723 (make_struct_dim)


State 1152

  738 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 738 (make_struct_decl)


State 1153

  732 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 732 (optional_trailing_delim_sqr_sqr)


State 1154

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  746 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 746 (make_tuple)


State 1155

  730 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 730 (optional_trailing_semicolon_sqr_sqr)


State 1156

  746 make_tuple: make_tuple . ',' expr
  751 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1028

    $default  reduce using rule 751 (make_dim)


State 1157

  301 expr_list: expr_list . ',' expr
  773 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 801
    ';'  shift, and go to state 1233


State 1158

  723 make_struct_dim: make_struct_dim . ';' make_struct_fields
  743 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 833
    ';'      shift, and go to state 1022

    $default  reduce using rule 724 (optional_block)

    optional_block  go to state 1234


State 1159

  736 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 736 (optional_trailing_delim_cur_sqr)


State 1160

  737 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 737 (optional_trailing_delim_cur_sqr)


State 1161

  735 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1235


State 1162

  742 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 742 (make_struct_decl)


State 1163

  728 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 728 (optional_trailing_semicolon_cur_sqr)


State 1164

  243 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' . $@7 expr

    $default  reduce using rule 242 ($@7)

    $@7  go to state 1236


State 1165

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1166

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  355 func_addr_name: "$i" '(' expr . ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1237


State 1167

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  470          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1238


State 1168

  359 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options . '>' $@19 func_addr_name
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1239
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 1169

  362 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list . optional_function_type '>' $@21 func_addr_name

    ':'  shift, and go to state 363

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1240


State 1170

  215 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 215 (expression_block)


State 1171

   59 expression_else: "else" expression_block .

    $default  reduce using rule 59 (expression_else)


State 1172

   60 expression_else: elif_or_static_elif expr . expression_block expression_else
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    '{'    shift, and go to state 283

    expression_block  go to state 1241


State 1173

   65 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 64 ($@2)

    $@2  go to state 1242


State 1174

   73 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1243


State 1175

  350 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1244


State 1176

  351 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 834
    "name"  shift, and go to state 1055

    make_struct_fields  go to state 1245


State 1177

  280 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1246


State 1178

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  282                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1247


State 1179

  310 capture_entry: "<-" "name" .

    $default  reduce using rule 310 (capture_entry)


State 1180

  311 capture_entry: ":=" "name" .

    $default  reduce using rule 311 (capture_entry)


State 1181

  309 capture_entry: '=' "name" .

    $default  reduce using rule 309 (capture_entry)


State 1182

  308 capture_entry: '&' "name" .

    $default  reduce using rule 308 (capture_entry)


State 1183

  313 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1061
    ":="  shift, and go to state 1062
    '='   shift, and go to state 1063
    '&'   shift, and go to state 1064

    capture_entry  go to state 1248


State 1184

  315 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1249


State 1185

  317 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1250
    '{'   shift, and go to state 283

    expression_block       go to state 1251
    block_or_simple_block  go to state 1252


State 1186

  429 expr: expr "is" "type" '<' $@24 . type_declaration_no_options '>' $@25

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 1253


State 1187

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  469          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1254


State 1188

  435 expr: expr "as" "type" '<' $@26 . type_declaration '>' $@27

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 1255


State 1189

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  467          | expr "as" "$f" '(' expr . ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1256


State 1190

  352 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 352 (expr_method_call)


State 1191

  301 expr_list: expr_list . ',' expr
  353 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 801
    ')'  shift, and go to state 1257


State 1192

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  464          | expr "?." "$f" '(' expr . ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1258


State 1193

  440 expr: expr '?' "as" "type" '<' . $@28 type_declaration '>' $@29

    $default  reduce using rule 438 ($@28)

    $@28  go to state 1259


State 1194

  468 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1260
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1195

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  426     | expr '?' expr ':' expr .
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 426 (expr)


State 1196

  466 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1261
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1197

  412 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 412 (expr)


State 1198

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  463          | expr '.' "$f" '(' expr . ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1262


State 1199

  465 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1263
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1200

  410 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 410 (expr)


State 1201

  367 expr_field: expr '.' $@22 error $@23 .

    $default  reduce using rule 367 (expr_field)


State 1202

  491 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 491 (struct_variable_declaration_list)


State 1203

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@31 function_declaration_header ';'

    "const"  shift, and go to state 1264

    $default  reduce using rule 476 (optional_constant)

    optional_constant  go to state 1265


State 1204

  490 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@32 function_declaration_header expression_block

    "override"  shift, and go to state 1205
    "sealed"    shift, and go to state 1206

    $default  reduce using rule 473 (optional_override)

    optional_override  go to state 1266


State 1205

  474 optional_override: "override" .

    $default  reduce using rule 474 (optional_override)


State 1206

  475 optional_override: "sealed" .

    $default  reduce using rule 475 (optional_override)


State 1207

  483 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1099
    "private"  shift, and go to state 1100

    $default  reduce using rule 478 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1267


State 1208

  670 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' $@56 .

    $default  reduce using rule 670 (type_declaration_no_options)


State 1209

  677 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' $@60 .

    $default  reduce using rule 677 (type_declaration_no_options)


State 1210

  684 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 684 (type_declaration_no_options)


State 1211

   74 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 74 (expression_for_loop)


State 1212

  255 new_type_declaration: '<' $@8 type_declaration '>' $@9 .

    $default  reduce using rule 255 (new_type_declaration)


State 1213

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1268
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1214

  299 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1269


State 1215

  296 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17 .

    $default  reduce using rule 296 (expr_type_decl)


State 1216

  757 make_dim_decl: "array" '<' $@81 type_declaration_no_options '>' $@82 . '(' expr_list ')'

    '('  shift, and go to state 1270


State 1217

  765 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  768 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 995
    ')'  shift, and go to state 1271


State 1218

  769 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1272


State 1219

  287 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1273
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1220

  290 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1274
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1221

  293 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1275
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1222

  761 make_dim_decl: "fixed_array" '<' $@83 type_declaration_no_options '>' $@84 . '(' expr_list ')'

    '('  shift, and go to state 1276


State 1223

  423 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  424     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    ')'                               shift, and go to state 1277
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1278
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1224

  461 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 461 (expr_mtag)


State 1225

  301 expr_list: expr_list . ',' expr
  462 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 801
    ')'  shift, and go to state 1279


State 1226

  772 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1280
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1227

  718 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  719                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 593
    ":="  shift, and go to state 1281
    '='   shift, and go to state 595

    copy_or_move  go to state 1282


State 1228

  741 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1024
    ",]]"  shift, and go to state 1025
    ']'    shift, and go to state 1026

    optional_trailing_delim_sqr_sqr  go to state 1283


State 1229

  740 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 740 (make_struct_decl)


State 1230

  720 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  721                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1284
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1231

  717 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1285
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1232

  716 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1286
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1233

  773 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1287
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1234

  743 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1159
    ",}]"  shift, and go to state 1160
    '}'    shift, and go to state 1161

    optional_trailing_delim_cur_sqr  go to state 1288


State 1235

  735 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 735 (optional_trailing_delim_cur_sqr)


State 1236

  243 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1289
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1237

  355 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 355 (func_addr_name)


State 1238

  470 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 470 (expr_mtag)


State 1239

  359 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' . $@19 func_addr_name

    $default  reduce using rule 358 ($@19)

    $@19  go to state 1290


State 1240

  362 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type . '>' $@21 func_addr_name

    '>'  shift, and go to state 1291


State 1241

   60 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1049
    "elif"         shift, and go to state 1050
    "static_elif"  shift, and go to state 1051

    $default  reduce using rule 58 (expression_else)

    elif_or_static_elif  go to state 1052
    expression_else      go to state 1292


State 1242

   65 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 1293
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 429
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "continue"                        shift, and go to state 439
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "yield"                           shift, and go to state 1294
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder             go to state 484
    expr_reader                go to state 485
    expression_if_one_liner    go to state 1295
    expression_block           go to state 496
    expression_keyword         go to state 499
    name_in_namespace          go to state 501
    expr_new                   go to state 503
    expression_break           go to state 1296
    expression_continue        go to state 1297
    expression_return_no_pipe  go to state 1298
    expression_yield_no_pipe   go to state 1299
    expr_cast                  go to state 513
    expr_type_decl             go to state 514
    expr_type_info             go to state 515
    block_or_lambda            go to state 516
    expr_block                 go to state 517
    expr_numeric_const         go to state 518
    expr_named_call            go to state 521
    expr_method_call           go to state 522
    func_addr_expr             go to state 523
    expr_field                 go to state 524
    expr                       go to state 1300
    expr_mtag                  go to state 526
    basic_type_declaration     go to state 527
    make_decl                  go to state 528
    make_struct_decl           go to state 529
    make_tuple_call            go to state 530
    make_dim_decl              go to state 531
    make_table_decl            go to state 532
    array_comprehension        go to state 533


State 1243

   73 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 73 (expression_if_then_else)


State 1244

  350 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 350 (expr_named_call)


State 1245

  351 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  716 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  717                   | make_struct_fields . ',' "name" ":=" expr
  720                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1021
    ']'  shift, and go to state 1301


State 1246

  280 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 280 (tuple_expansion)


State 1247

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  282                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1302
    '&'  shift, and go to state 377

    $default  reduce using rule 521 (optional_ref)

    optional_ref  go to state 1303


State 1248

  313 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 313 (capture_list)


State 1249

  315 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 315 (optional_capture_list)


State 1250

  303 block_or_simple_block: "=>" . expr
  304                      | "=>" . "<-" expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "<-"                              shift, and go to state 1304
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1305
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1251

  302 block_or_simple_block: expression_block .

    $default  reduce using rule 302 (block_or_simple_block)


State 1252

  317 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 317 (expr_block)


State 1253

  429 expr: expr "is" "type" '<' $@24 type_declaration_no_options . '>' $@25
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "??"        shift, and go to state 395
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '>'         shift, and go to state 1306
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400


State 1254

  469 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 1255

  435 expr: expr "as" "type" '<' $@26 type_declaration . '>' $@27
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 1307


State 1256

  467 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1257

  353 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 353 (expr_method_call)


State 1258

  464 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 464 (expr_mtag)


State 1259

  440 expr: expr '?' "as" "type" '<' $@28 . type_declaration '>' $@29

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 346
    type_declaration             go to state 1308


State 1260

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  468          | expr '?' "as" "$f" '(' expr . ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1309


State 1261

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  466          | expr '.' "?." "$f" '(' expr . ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1310


State 1262

  463 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 463 (expr_mtag)


State 1263

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  465          | expr '.' '.' "$f" '(' expr . ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1311


State 1264

  477 optional_constant: "const" .

    $default  reduce using rule 477 (optional_constant)


State 1265

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@31 function_declaration_header ';'

    $default  reduce using rule 487 ($@31)

    $@31  go to state 1312


State 1266

  490 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@32 function_declaration_header expression_block

    "const"  shift, and go to state 1264

    $default  reduce using rule 476 (optional_constant)

    optional_constant  go to state 1313


State 1267

  483 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 409
    "name"  shift, and go to state 410

    variable_declaration         go to state 1314
    variable_name_with_pos_list  go to state 412


State 1268

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1315


State 1269

  299 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1316


State 1270

  757 make_dim_decl: "array" '<' $@81 type_declaration_no_options '>' $@82 '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 1317
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1271

  768 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 768 (make_table_decl)


State 1272

  769 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 656
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_map_tuple          go to state 806
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    expr_map_tuple_list     go to state 1318
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1273

  287 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 287 (expr_cast)


State 1274

  290 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 290 (expr_cast)


State 1275

  293 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 293 (expr_cast)


State 1276

  761 make_dim_decl: "fixed_array" '<' $@83 type_declaration_no_options '>' $@84 '(' . expr_list ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 1319
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1277

  423 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 423 (expr)


State 1278

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  424     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1320


State 1279

  462 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 462 (expr_mtag)


State 1280

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  772 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ';'    shift, and go to state 1321

    $default  reduce using rule 770 (array_comprehension_where)

    array_comprehension_where  go to state 1322


State 1281

  719 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1323
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1282

  718 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1324
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1283

  741 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 741 (make_struct_decl)


State 1284

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  720 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  721                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1325


State 1285

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  717 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 717 (make_struct_fields)


State 1286

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  716 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 716 (make_struct_fields)


State 1287

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  773 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ';'    shift, and go to state 1321

    $default  reduce using rule 770 (array_comprehension_where)

    array_comprehension_where  go to state 1326


State 1288

  743 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 743 (make_struct_decl)


State 1289

  243 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 243 (expression_keyword)


State 1290

  359 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 859
    "name"  shift, and go to state 58

    name_in_namespace  go to state 862
    func_addr_name     go to state 1327


State 1291

  362 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' . $@21 func_addr_name

    $default  reduce using rule 361 ($@21)

    $@21  go to state 1328


State 1292

   60 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 60 (expression_else)


State 1293

  263 expression_return_no_pipe: "return" .
  264                          | "return" . expr_list
  265                          | "return" . "<-" expr_list

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "<-"                              shift, and go to state 1329
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    $default  reduce using rule 263 (expression_return_no_pipe)

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 612
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1294

  269 expression_yield_no_pipe: "yield" . expr
  270                         | "yield" . "<-" expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "<-"                              shift, and go to state 1330
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1331
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1295

   65 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 65 (expression_else_one_liner)


State 1296

   69 expression_if_one_liner: expression_break .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1297

   70 expression_if_one_liner: expression_continue .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1298

   67 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1299

   68 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1300

   66 expression_if_one_liner: expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 66 (expression_if_one_liner)


State 1301

  351 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1332


State 1302

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "array"      shift, and go to state 303
    "table"      shift, and go to state 304
    "iterator"   shift, and go to state 305
    "smart_ptr"  shift, and go to state 306
    "bool"       shift, and go to state 307
    "void"       shift, and go to state 308
    "string"     shift, and go to state 309
    "auto"       shift, and go to state 310
    "int"        shift, and go to state 311
    "int2"       shift, and go to state 312
    "int3"       shift, and go to state 313
    "int4"       shift, and go to state 314
    "uint"       shift, and go to state 315
    "bitfield"   shift, and go to state 316
    "uint2"      shift, and go to state 317
    "uint3"      shift, and go to state 318
    "uint4"      shift, and go to state 319
    "float"      shift, and go to state 320
    "float2"     shift, and go to state 321
    "float3"     shift, and go to state 322
    "float4"     shift, and go to state 323
    "range"      shift, and go to state 324
    "urange"     shift, and go to state 325
    "range64"    shift, and go to state 326
    "urange64"   shift, and go to state 327
    "block"      shift, and go to state 328
    "int64"      shift, and go to state 329
    "uint64"     shift, and go to state 330
    "double"     shift, and go to state 331
    "function"   shift, and go to state 332
    "lambda"     shift, and go to state 333
    "int8"       shift, and go to state 334
    "uint8"      shift, and go to state 335
    "int16"      shift, and go to state 336
    "uint16"     shift, and go to state 337
    "tuple"      shift, and go to state 338
    "variant"    shift, and go to state 339
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 340
    "name"       shift, and go to state 58

    name_in_namespace            go to state 341
    basic_type_declaration       go to state 342
    structure_type_declaration   go to state 343
    auto_type_declaration        go to state 344
    bitfield_type_declaration    go to state 345
    type_declaration_no_options  go to state 1333


State 1303

  282 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 548
    ":="  shift, and go to state 549
    '='   shift, and go to state 550

    copy_or_move_or_clone  go to state 1334


State 1304

  304 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1335
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1305

  303 block_or_simple_block: "=>" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    ".."  error (nonassociative)

    $default  reduce using rule 303 (block_or_simple_block)


State 1306

  429 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' . $@25

    $default  reduce using rule 428 ($@25)

    $@25  go to state 1336


State 1307

  435 expr: expr "as" "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 434 ($@27)

    $@27  go to state 1337


State 1308

  440 expr: expr '?' "as" "type" '<' $@28 type_declaration . '>' $@29
  692 type_declaration: type_declaration . '|' type_declaration_no_options
  693                 | type_declaration . '|' '#'

    '|'  shift, and go to state 401
    '>'  shift, and go to state 1338


State 1309

  468 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1310

  466 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 466 (expr_mtag)


State 1311

  465 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 465 (expr_mtag)


State 1312

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 . function_declaration_header ';'

    "operator"  shift, and go to state 180
    "bool"      shift, and go to state 181
    "string"    shift, and go to state 182
    "int"       shift, and go to state 183
    "int2"      shift, and go to state 184
    "int3"      shift, and go to state 185
    "int4"      shift, and go to state 186
    "uint"      shift, and go to state 187
    "uint2"     shift, and go to state 188
    "uint3"     shift, and go to state 189
    "uint4"     shift, and go to state 190
    "float"     shift, and go to state 191
    "float2"    shift, and go to state 192
    "float3"    shift, and go to state 193
    "float4"    shift, and go to state 194
    "range"     shift, and go to state 195
    "urange"    shift, and go to state 196
    "range64"   shift, and go to state 197
    "urange64"  shift, and go to state 198
    "int64"     shift, and go to state 199
    "uint64"    shift, and go to state 200
    "double"    shift, and go to state 201
    "int8"      shift, and go to state 202
    "uint8"     shift, and go to state 203
    "int16"     shift, and go to state 204
    "uint16"    shift, and go to state 205
    "++"        shift, and go to state 206
    "--"        shift, and go to state 207
    "name"      shift, and go to state 208

    function_name                go to state 209
    function_declaration_header  go to state 1339


State 1313

  490 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@32 function_declaration_header expression_block

    $default  reduce using rule 489 ($@32)

    $@32  go to state 1340


State 1314

  483 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 483 (structure_variable_declaration)


State 1315

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 298 (expr_type_info)


State 1316

  299 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1341
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1317

  301 expr_list: expr_list . ',' expr
  757 make_dim_decl: "array" '<' $@81 type_declaration_no_options '>' $@82 '(' expr_list . ')'

    ','  shift, and go to state 801
    ')'  shift, and go to state 1342


State 1318

  765 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  769 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 995
    ')'  shift, and go to state 1343


State 1319

  301 expr_list: expr_list . ',' expr
  761 make_dim_decl: "fixed_array" '<' $@83 type_declaration_no_options '>' $@84 '(' expr_list . ')'

    ','  shift, and go to state 801
    ')'  shift, and go to state 1344


State 1320

  424 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 424 (expr)


State 1321

  771 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1345


State 1322

  772 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1346


State 1323

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  719 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 719 (make_struct_fields)


State 1324

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  718 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 718 (make_struct_fields)


State 1325

  720 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  721                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 593
    ":="  shift, and go to state 1347
    '='   shift, and go to state 595

    copy_or_move  go to state 1348


State 1326

  773 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1349


State 1327

  359 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name .

    $default  reduce using rule 359 (func_addr_expr)


State 1328

  362 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 859
    "name"  shift, and go to state 58

    name_in_namespace  go to state 862
    func_addr_name     go to state 1350


State 1329

  265 expression_return_no_pipe: "return" "<-" . expr_list

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    expr_list               go to state 800
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 798
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1330

  270 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1351
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1331

  269 expression_yield_no_pipe: "yield" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 269 (expression_yield_no_pipe)


State 1332

  351 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 351 (expr_named_call)


State 1333

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  637 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  638                            | type_declaration_no_options . '[' ']'
  639                            | type_declaration_no_options . '-' '[' ']'
  640                            | type_declaration_no_options . "explicit"
  641                            | type_declaration_no_options . "const"
  642                            | type_declaration_no_options . '-' "const"
  643                            | type_declaration_no_options . '&'
  644                            | type_declaration_no_options . '-' '&'
  645                            | type_declaration_no_options . '#'
  646                            | type_declaration_no_options . "implicit"
  647                            | type_declaration_no_options . '-' '#'
  648                            | type_declaration_no_options . "==" "const"
  649                            | type_declaration_no_options . "==" '&'
  650                            | type_declaration_no_options . '?'
  654                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 391
    "implicit"  shift, and go to state 392
    "explicit"  shift, and go to state 393
    "=="        shift, and go to state 394
    "<-"        shift, and go to state 548
    "??"        shift, and go to state 395
    ":="        shift, and go to state 549
    '='         shift, and go to state 550
    '?'         shift, and go to state 396
    '&'         shift, and go to state 397
    '-'         shift, and go to state 398
    '['         shift, and go to state 399
    '#'         shift, and go to state 400

    copy_or_move_or_clone  go to state 1352


State 1334

  282 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1353
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1335

  304 block_or_simple_block: "=>" "<-" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 304 (block_or_simple_block)


State 1336

  429 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25 .

    $default  reduce using rule 429 (expr)


State 1337

  435 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 435 (expr)


State 1338

  440 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' . $@29

    $default  reduce using rule 439 ($@29)

    $@29  go to state 1354


State 1339

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header . ';'

    ';'  shift, and go to state 1355


State 1340

  490 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 . function_declaration_header expression_block

    "operator"  shift, and go to state 180
    "bool"      shift, and go to state 181
    "string"    shift, and go to state 182
    "int"       shift, and go to state 183
    "int2"      shift, and go to state 184
    "int3"      shift, and go to state 185
    "int4"      shift, and go to state 186
    "uint"      shift, and go to state 187
    "uint2"     shift, and go to state 188
    "uint3"     shift, and go to state 189
    "uint4"     shift, and go to state 190
    "float"     shift, and go to state 191
    "float2"    shift, and go to state 192
    "float3"    shift, and go to state 193
    "float4"    shift, and go to state 194
    "range"     shift, and go to state 195
    "urange"    shift, and go to state 196
    "range64"   shift, and go to state 197
    "urange64"  shift, and go to state 198
    "int64"     shift, and go to state 199
    "uint64"    shift, and go to state 200
    "double"    shift, and go to state 201
    "int8"      shift, and go to state 202
    "uint8"     shift, and go to state 203
    "int16"     shift, and go to state 204
    "uint16"    shift, and go to state 205
    "++"        shift, and go to state 206
    "--"        shift, and go to state 207
    "name"      shift, and go to state 208

    function_name                go to state 209
    function_declaration_header  go to state 1356


State 1341

  299 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ')'    shift, and go to state 1357


State 1342

  757 make_dim_decl: "array" '<' $@81 type_declaration_no_options '>' $@82 '(' expr_list ')' .

    $default  reduce using rule 757 (make_dim_decl)


State 1343

  769 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 769 (make_table_decl)


State 1344

  761 make_dim_decl: "fixed_array" '<' $@83 type_declaration_no_options '>' $@84 '(' expr_list ')' .

    $default  reduce using rule 761 (make_dim_decl)


State 1345

  771 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1358
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1346

  772 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1359


State 1347

  721 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1360
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1348

  720 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1361
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1349

  773 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1362


State 1350

  362 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name .

    $default  reduce using rule 362 (func_addr_expr)


State 1351

  270 expression_yield_no_pipe: "yield" "<-" expr .
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 270 (expression_yield_no_pipe)


State 1352

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 431
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 436
    "upcast"                          shift, and go to state 437
    "addr"                            shift, and go to state 438
    "reinterpret"                     shift, and go to state 441
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 445
    "bool"                            shift, and go to state 307
    "void"                            shift, and go to state 308
    "string"                          shift, and go to state 309
    "int"                             shift, and go to state 311
    "int2"                            shift, and go to state 312
    "int3"                            shift, and go to state 313
    "int4"                            shift, and go to state 314
    "uint"                            shift, and go to state 315
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 317
    "uint3"                           shift, and go to state 318
    "uint4"                           shift, and go to state 319
    "float"                           shift, and go to state 320
    "float2"                          shift, and go to state 321
    "float3"                          shift, and go to state 322
    "float4"                          shift, and go to state 323
    "range"                           shift, and go to state 324
    "urange"                          shift, and go to state 325
    "range64"                         shift, and go to state 326
    "urange64"                        shift, and go to state 327
    "int64"                           shift, and go to state 329
    "uint64"                          shift, and go to state 330
    "double"                          shift, and go to state 331
    "int8"                            shift, and go to state 334
    "uint8"                           shift, and go to state 335
    "int16"                           shift, and go to state 336
    "uint16"                          shift, and go to state 337
    "tuple"                           shift, and go to state 447
    "generator"                       shift, and go to state 448
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 455
    "$i"                              shift, and go to state 456
    "$v"                              shift, and go to state 457
    "$b"                              shift, and go to state 458
    "$a"                              shift, and go to state 459
    "$c"                              shift, and go to state 460
    "..."                             shift, and go to state 461
    "[["                              shift, and go to state 462
    "[{"                              shift, and go to state 463
    "{{"                              shift, and go to state 464
    "integer constant"                shift, and go to state 465
    "long integer constant"           shift, and go to state 466
    "unsigned integer constant"       shift, and go to state 467
    "unsigned long integer constant"  shift, and go to state 468
    "unsigned int8 constant"          shift, and go to state 469
    "floating point constant"         shift, and go to state 470
    "double constant"                 shift, and go to state 471
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 543
    "start of the string"             shift, and go to state 473
    '-'                               shift, and go to state 474
    '+'                               shift, and go to state 475
    '*'                               shift, and go to state 476
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 477
    '!'                               shift, and go to state 478
    '('                               shift, and go to state 479
    '$'                               shift, and go to state 480
    '@'                               shift, and go to state 481
    '{'                               shift, and go to state 283

    string_builder          go to state 484
    expr_reader             go to state 485
    expression_block        go to state 496
    expression_keyword      go to state 499
    name_in_namespace       go to state 501
    expr_new                go to state 503
    expr_cast               go to state 513
    expr_type_decl          go to state 514
    expr_type_info          go to state 515
    block_or_lambda         go to state 516
    expr_block              go to state 517
    expr_numeric_const      go to state 518
    expr_named_call         go to state 521
    expr_method_call        go to state 522
    func_addr_expr          go to state 523
    expr_field              go to state 524
    expr                    go to state 1363
    expr_mtag               go to state 526
    basic_type_declaration  go to state 527
    make_decl               go to state 528
    make_struct_decl        go to state 529
    make_tuple_call         go to state 530
    make_dim_decl           go to state 531
    make_table_decl         go to state 532
    array_comprehension     go to state 533


State 1353

  282 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ';'    shift, and go to state 1364


State 1354

  440 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29 .

    $default  reduce using rule 440 (expr)


State 1355

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';' .

    $default  reduce using rule 488 (struct_variable_declaration_list)


State 1356

  490 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header . expression_block

    '{'  shift, and go to state 283

    expression_block  go to state 1365


State 1357

  299 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 299 (expr_type_info)


State 1358

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  771 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 771 (array_comprehension_where)


State 1359

  772 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 772 (array_comprehension)


State 1360

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  721 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 721 (make_struct_fields)


State 1361

  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'
  720 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738

    $default  reduce using rule 720 (make_struct_fields)


State 1362

  773 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 773 (array_comprehension)


State 1363

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  352 expr_method_call: expr . "->" "name" '(' ')'
  353                 | expr . "->" "name" '(' expr_list ')'
  363 expr_field: expr . '.' "name"
  364           | expr . '.' '.' "name"
  367           | expr . '.' $@22 error $@23
  382 expr: expr . "<<" expr
  383     | expr . ">>" expr
  384     | expr . "<<<" expr
  385     | expr . ">>>" expr
  386     | expr . '+' expr
  387     | expr . '-' expr
  388     | expr . '*' expr
  389     | expr . '/' expr
  390     | expr . '%' expr
  391     | expr . '<' expr
  392     | expr . '>' expr
  393     | expr . "==" expr
  394     | expr . "!=" expr
  395     | expr . "<=" expr
  396     | expr . ">=" expr
  397     | expr . '&' expr
  398     | expr . '|' expr
  399     | expr . '^' expr
  400     | expr . "&&" expr
  401     | expr . "||" expr
  402     | expr . "^^" expr
  403     | expr . ".." expr
  406     | expr . "++"
  407     | expr . "--"
  409     | expr . '[' expr ']'
  410     | expr . '.' '[' expr ']'
  411     | expr . "?[" expr ']'
  412     | expr . '.' "?[" expr ']'
  413     | expr . "?." "name"
  414     | expr . '.' "?." "name"
  425     | expr . "??" expr
  426     | expr . '?' expr ':' expr
  429     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  430     | expr . "is" basic_type_declaration
  431     | expr . "is" "name"
  432     | expr . "as" "name"
  435     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  436     | expr . "as" basic_type_declaration
  437     | expr . '?' "as" "name"
  440     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  441     | expr . '?' "as" basic_type_declaration
  449     | expr . "<|" expr
  450     | expr . "|>" expr
  451     | expr . "|>" basic_type_declaration
  463 expr_mtag: expr . '.' "$f" '(' expr ')'
  464          | expr . "?." "$f" '(' expr ')'
  465          | expr . '.' '.' "$f" '(' expr ')'
  466          | expr . '.' "?." "$f" '(' expr ')'
  467          | expr . "as" "$f" '(' expr ')'
  468          | expr . '?' "as" "$f" '(' expr ')'
  469          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 686
    "as"   shift, and go to state 687
    "<<"   shift, and go to state 696
    ">>"   shift, and go to state 697
    "++"   shift, and go to state 698
    "--"   shift, and go to state 699
    "<="   shift, and go to state 700
    ">="   shift, and go to state 703
    "=="   shift, and go to state 704
    "!="   shift, and go to state 705
    "->"   shift, and go to state 706
    "??"   shift, and go to state 708
    "?."   shift, and go to state 709
    "?["   shift, and go to state 710
    "<|"   shift, and go to state 711
    "|>"   shift, and go to state 712
    "<<<"  shift, and go to state 714
    ">>>"  shift, and go to state 715
    "&&"   shift, and go to state 718
    "||"   shift, and go to state 719
    "^^"   shift, and go to state 720
    ".."   shift, and go to state 724
    '?'    shift, and go to state 726
    '|'    shift, and go to state 727
    '^'    shift, and go to state 728
    '&'    shift, and go to state 729
    '<'    shift, and go to state 730
    '>'    shift, and go to state 731
    '-'    shift, and go to state 732
    '+'    shift, and go to state 733
    '*'    shift, and go to state 734
    '/'    shift, and go to state 735
    '%'    shift, and go to state 736
    '.'    shift, and go to state 737
    '['    shift, and go to state 738
    ';'    shift, and go to state 1366


State 1364

  282 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 282 (tuple_expansion_variable_declaration)


State 1365

  490 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block .

    $default  reduce using rule 490 (struct_variable_declaration_list)


State 1366

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 281 (tuple_expansion_variable_declaration)
